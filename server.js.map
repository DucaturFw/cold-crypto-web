{"version":3,"sources":["/src/server/index.ts","packages/fusebox-hot-reload@0.0.0","packages/fusebox-websocket@0.0.0"],"names":[],"mappings":";;;;;;;;AAAA,mCAAmC;AACnC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;AAElC,MAAM,GAAG,GAAG,OAAO,EAAE,CAAA;AAErB,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;IACzB,GAAG,CAAC,MAAM,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAA;IAC9C,GAAG,CAAC,MAAM,CACR,8BAA8B,EAC9B,gDAAgD,CACjD,CAAA;IACD,IAAI,EAAE,CAAA;AACR,CAAC,CAAC,CAAA;AAEF,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACxB,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAA;AAC9B,CAAC,CAAC,CAAA;AACF,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACnC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,CAAA;AAChD,CAAC,CAAC,CAAA;AACF,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAC/B,GAAG,CAAC,IAAI,CAAC;QACP,OAAO,EAAE,IAAI;QACb,WAAW,EAAE,GAAG;QAChB,QAAQ,EAAE,GAAG;QACb,IAAI,EAAE,KAAK;QACX,WAAW,EAAE,GAAG;QAChB,QAAQ,EAAE,OAAO;QACjB,OAAO,EAAE,GAAG;QACZ,UAAU,EAAE,iBAAiB;QAC7B,KAAK,EAAE,kBAAkB;QACzB,OAAO,EAAE,KAAK;QACd,OAAO,EAAE,IAAI;KACd,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA;AACF,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACjC,GAAG,CAAC,IAAI,CAAC;QACP;YACE,OAAO,EAAE,MAAM;YACf,UAAU,EAAE,KAAK;YACjB,OAAO,EAAE,sBAAsB;SAChC;QACD;YACE,OAAO,EAAE,MAAM;YACf,UAAU,EAAE,KAAK;YACjB,OAAO,EAAE,YAAY;SACtB;KACF,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA;AACF,GAAG,CAAC,GAAG,CAAC,2BAA2B,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAChD,GAAG,CAAC,IAAI,CAAC;QACP,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO;QAC3B,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU;QACjC,GAAG,EAAE;YACH;gBACE,IAAI,EACF,oEAAoE;gBACtE,KAAK,EAAE,oBAAoB;gBAC3B,OAAO,EAAE,OAAO;gBAChB,QAAQ,EAAE,cAAc;gBACxB,KAAK,EAAE,GAAG;aACX;YACD;gBACE,IAAI,EACF,oEAAoE;gBACtE,KAAK,EAAE,mBAAmB;gBAC1B,OAAO,EAAE,OAAO;gBAChB,QAAQ,EAAE,cAAc;gBACxB,KAAK,EAAE,GAAG;aACX;YACD;gBACE,IAAI,EACF,oEAAoE;gBACtE,KAAK,EAAE,oBAAoB;gBAC3B,OAAO,EAAE,OAAO;gBAChB,QAAQ,EAAE,aAAa;gBACvB,KAAK,EAAE,GAAG;aACX;SACF;KACF,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA;AACF,GAAG,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACxC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;AACvB,CAAC,CAAC,CAAA;AACF,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAClC,GAAG,CAAC,IAAI,CAAC;QACP,MAAM,EAAE,CAAC;QACT,IAAI,EAAE,IAAI,GAAG,SAAS,CAAC,EAAE,CAAC;KAC3B,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA;AACF,SAAS,SAAS,CAAC,GAAG;IACpB,IAAI,GAAG,GAAG,EAAE,CAAA;IACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC5B,GAAG,IAAI,cAAc,EAAE,CAAA;KACxB;IACD,OAAO,GAAG,CAAA;AACZ,CAAC;AACD,SAAS,cAAc;IACrB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;AACpD,CAAC;AAED,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC,CAAA;AAE7D,QAAA,QAAQ,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,CAAA;;;;;ACvGlrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"","sourcesContent":["/* tslint no-var-requires: false */\nconst express = require('express')\n\nconst app = express()\n\napp.use((req, res, next) => {\n  res.header('Access-Control-Allow-Origin', '*')\n  res.header(\n    'Access-Control-Allow-Headers',\n    'Origin, X-Requested-With, Content-Type, Accept',\n  )\n  next()\n})\n\napp.get('/', (req, res) => {\n  res.json({ hello: 'world' })\n})\napp.get('/blockchains', (req, res) => {\n  res.json({ supported: ['eth', 'neo', 'eos'] })\n})\napp.get('/eth/gas', (req, res) => {\n  res.json({\n    average: 20.0,\n    fastestWait: 0.5,\n    fastWait: 0.6,\n    fast: 200.0,\n    safeLowWait: 4.3,\n    blockNum: 6471259,\n    avgWait: 2.4,\n    block_time: 14.26842105263158,\n    speed: 0.7856651476674678,\n    fastest: 630.0,\n    safeLow: 16.0,\n  })\n})\napp.get('/addresses', (req, res) => {\n  res.json([\n    {\n      address: '0x00',\n      blockchain: 'eos',\n      balance: '42512341235000000000',\n    },\n    {\n      address: '0x01',\n      blockchain: 'eth',\n      balance: '2423423424',\n    },\n  ])\n})\napp.get('/:blockchain/:address/txs', (req, res) => {\n  res.json({\n    address: req.params.address,\n    blockchain: req.params.blockchain,\n    txs: [\n      {\n        hash:\n          '0x23da7a3be275db221e93f1ba8f2779656d5f53a39af027660ab3d4d6752f40f3',\n        value: '651030000000000000',\n        gasUsed: '21000',\n        gasValue: '134000000000',\n        nonce: '3',\n      },\n      {\n        hash:\n          '0x23da7a3be275db221e93f1ba8f2779656d5f53a39af027660ab3d4d6752f40f4',\n        value: '92200000000000000',\n        gasUsed: '23000',\n        gasValue: '154000000000',\n        nonce: '2',\n      },\n      {\n        hash:\n          '0x23da7a3be275db221e93f1ba8f2779656d5f53a39af027660ab3d4d6752f40f5',\n        value: '237030000000000000',\n        gasUsed: '22000',\n        gasValue: '34000000000',\n        nonce: '1',\n      },\n    ],\n  })\n})\napp.get('/market/price/eth', (req, res) => {\n  res.json('2221.7905')\n})\napp.all('/eth/pushTx', (req, res) => {\n  res.json({\n    result: 1,\n    hash: '0x' + randomHex(64),\n  })\n})\nfunction randomHex(num) {\n  let str = ''\n  for (let i = 0; i < num; i++) {\n    str += randomHexDigit()\n  }\n  return str\n}\nfunction randomHexDigit() {\n  return Math.floor(Math.random() * 16).toString(16)\n}\n\napp.listen(4443, () => console.log('API emulator listening on port 4443'))\n\nexport const shutdown = () => console.log('CLOSE!') || app.close()\n",null,null]}