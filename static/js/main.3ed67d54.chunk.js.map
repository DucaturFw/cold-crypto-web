{"version":3,"sources":["components/atoms/Row.tsx","components/atoms/H1.tsx","components/atoms/H2.tsx","components/atoms/H3.tsx","components/atoms/Button.tsx","components/atoms/Column.tsx","components/atoms/A.tsx","components/atoms/ButtonClose.tsx","components/atoms/Centered.tsx","components/atoms/Hr.tsx","components/atoms/Link.tsx","components/atoms/ButtonBase.tsx","components/atoms/ButtonSecondary.tsx","components/atoms/TextInput.tsx","components/atoms/SelectOptions.tsx","components/atoms/Select.tsx","components/atoms/Label.tsx","components/atoms/SelectFloat.tsx","components/atoms/LabelAtop.tsx","components/atoms/TextArea.tsx","components/atoms/RangeInput.tsx","components/atoms/Wrap.tsx","components/moleculas/Logo.tsx","components/organisms/Header.tsx","components/organisms/Footer.tsx","components/layouts/DefaultLayout.tsx","components/organisms/Sidebar.tsx","components/layouts/MainLayout.tsx","components/layouts/ModalLayout.tsx","components/organisms/QrLogin.tsx","utils/callApi.ts","helpers/blockchains.ts","helpers/eos/eos-types.ts","helpers/eos/contract.ts","helpers/eos/index.ts","helpers/eth/eth-contracts.ts","helpers/eth/eth.ts","helpers/jsonrps.ts","store/transport/types.ts","store/transport/actions.ts","helpers/webrtc/jsonrpc.ts","helpers/webrtc/hostproto.ts","pages/Login.tsx","pages/Home.tsx","components/Spinner.tsx","store/wallets/types.ts","store/wallets/actions.ts","pages/TXList/common.tsx","pages/TXList/eth.tsx","pages/TXList/index.tsx","pages/TXList/eos.tsx","pages/Wallet.tsx","store/price/types.ts","store/price/actions.ts","pages/CreateTx/eth.tsx","pages/CreateTx/eos.tsx","pages/CreateTx/index.tsx","pages/Sign.tsx","pages/Status.tsx","pages/TxView.tsx","pages/Contracts/eth.tsx","helpers/func.ts","pages/Contracts/eos.tsx","pages/Contracts/index.tsx","routes.tsx","styles/theme.ts","styles/normalize.ts","styles/globals.ts","styles/index.ts","App.tsx","serviceWorker.ts","helpers/common.ts","store/wallets/sagas.ts","store/auth/types.ts","store/wallets/reducer.ts","store/auth/reducer.ts","utils/parseMessage.ts","store/webrtc/types.ts","helpers/sendtx.ts","store/auth/actions.ts","store/webrtc/actions.ts","store/transport/sagas.ts","constants/index.ts","store/transport/reducer.ts","store/webrtc/connectSaga.ts","store/webrtc/sagas.ts","helpers/webrtc/webrtc.ts","helpers/webrtc/webrtcsingleton.ts","store/webrtc/reducer.ts","helpers/prices/index.ts","store/price/sagas.ts","store/price/reducer.ts","store/index.ts","configureStore.ts","index.tsx"],"names":["Row","styled","display","justifyContent","width","H1","color","fontSize","margin","textTransform","H2","fontWeight","H3","Button","border","borderRadius","cursor","outline","padding","lineHeight","Column","flexFlow","A","Root","Link","alignSelf","marginLeft","textDecoration","XSpan","ButtonClose","react_default","a","createElement","to","Centered","alignItems","textAlign","Hr","backgroundColor","height","StyledLink","ButtonBase","background","transition","ButtonSecondary","TextInput","::placeholder","boxSizing","Select","_ref","flipToRight",":after","borderWidth","content","position","appearance","Wrapper","right","top","SelectOptions","children","onChange","SelectOptions_Select","Label","Container","LabelAtop","label","LabelAtop_Label","TextArea","RangeInput","Wrap","horizontal","vertical","concat","Logo","reverseColor","Sup","verticalAlign","moleculas_Logo","_ref2","gridArea","MainMenu","marginTop","marginRight","Header","logoColorReverse","Header_Root","Header_MainMenu","Footer","Footer_Root","style","paddingLeft","minHeight","Main","Modal","maxWidth","minWidth","DefaultLayout","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","props","Component","component","rest","objectWithoutProperties","Route","assign","render","matchProps","DefaultLayout_Root","Header_Header","Footer_Footer","React","boxShadow","items","id","title","MenuLink","selected","borderLeft","Sidebar_Container","map","Sidebar","Sidebar_Root","Sidebar_MainMenu","gridTemplateAreas","gridTemplateColumns","gridTemplateRows","MainLayout","MainLayout_Container","MainLayout_Main","Sidebar_Sidebar","left","maxHeight","ModalLayout","ModalLayout_Root","onClick","history","goBack","ModalLayout_Main","e","stopPropagation","ModalLayout_Container","QrLogin","onScan","onError","readonly","errorHandle","error","console","react","ButtonClose_ButtonClose","qrcode_react_lib_default","renderAs","size","react_qr_reader_lib_default","delay","_onScan","_x","toString","result","callApi","method","url","path","data","fetch","headers","Accept","Content-Type","mode","body","JSON","stringify","then","res","json","getBcNetByChainId","bc","chainId","networks","network","find","item","eth","name","sign","explorerUrl","apiExplorerUrl","eos","normalizers","nothing","_nothing","asyncToGenerator","regenerator_default","mark","_callee","type","wrap","_context","prev","next","abrupt","stop","_x2","_x3","toNumber","_toNumber","_callee2","_context2","BN","_x4","_x5","_x6","validators","_nothing2","_callee3","_context3","_x7","_x8","_x9","defaults","string","_string","_callee4","_context4","_x10","_x11","knownTypes","uint64","config","validation","normalize","default","fixed_bytes20","fixed_bytes32","fixed_bytes64","fixed_bytes65","fixed_bytes33","fixed_string16","int64","time","uint32","timestamp","uint16","checksum_type","bytes","varuint32","uint8","lookUpBase","customs","r","array","endsWith","isArray","substr","length","isBase","chainTypes","isChainType","lookUpTypeCollection","collection","chain","base","toDictionary","keys","fields","k","checksum160","checksum256","checksum512","signature","public_key","message_type","symbol","symbol_code","field_name","account_name","permission_name","type_name","token_name","table_name","scope_name","action_name","time_point","time_point_sec","block_timestamp_type","block_id","checksum256_type","checksum512_type","checksum160_type","sha256","sha512","sha160","weight_type","block_num_type","share_type","digest_type","context_free_type","unsigned_int","bool","extensions_type","transaction_header","expiration","ref_block_num","ref_block_prefix","max_net_usage_words","max_cpu_usage_ms","delay_sec","transaction","context_free_actions","actions","transaction_extensions","signed_transaction","signatures","context_free_data","field_def","asset","amount","sym","producer_key","producer_name","block_signing_key","producer_schedule","version","producers","chain_config","target_block_size","max_block_size","target_block_acts_per_scope","max_block_acts_per_scope","target_block_acts","max_block_acts","real_threads","max_storage_size","max_transaction_lifetime","max_authority_depth","max_transaction_exec_time","max_inline_depth","max_inline_action_size","max_generated_transaction_size","type_def","new_type_name","struct_def","clause_pair","error_message","error_code","error_msg","abi_def","types","structs","tables","ricardian_clauses","error_messages","abi_extensions","table_def","index_type","key_names","key_types","permission_level","actor","permission","action","account","authorization","action_def","ricardian_contract","block_header","previous","transaction_mroot","action_mroot","block_mroot","producer","schedule_version","new_producers","packed_transaction","compression","packed_context_free_data","packed_trx","arr","val","reduce","acc","cur","expand","customTypes","dict","x","objectSpread","f","forEach","EosContract","_this","abi","custom","assignContract","contractName","getAbi","sent","getActions","getMethodFields","log","getMethodAbi","getInfo","wallet","net","blockchain","address","getEos","Eos","httpEndpoint","sendTx","signedTx","txHash","pushTransaction","transaction_id","getTxHeaders","_getTxHeaders","info","chainDate","block","transactionHeaders","Date","head_block_time","getTime","expireInSeconds","toISOString","split","getBlock","last_irreversible_block_num","isFunction","abiEntry","methodSignature","inputs","join","getArguments","methodName","filter","require","web3","Web3","getWeb3","setProvider","providers","WebsocketProvider","getNonce","_getNonce","getTransactionCount","tx","sendSignedTransaction","transactionHash","getTx","_getTx","_getInfo","nonce","txs","getContractData","args","encodeFunctionCall","convertParamsToEth","params","i","encodeParameter","getWalletListCommand","blockchains","form","Promise","resolve","gasPrice","utils","toWei","txHeaders","from","quantity","toFixed","memo","formData","argsTypes","gasLimit","walletBase","entries","TransportActionTypes","remoteSignTransferTx","REMOTE_SIGN_TRANSFER","sendTransaction","SEND_TX","login","message","LOGIN","setRtcSid","sid","SET_RTC_SID","call","undefined","jrpcs","obj","jsonrpc","jrpc","JsonRpc","send","onRequest","lastOutgoingMsgId","listeners","_callbacksQueue","_messageQueue","onMessage","msg","startsWith","parse","test","_msg$split$map","_msg$split$map2","slicedToArray","_id","prefixLength","match","parseInt","parseHostMessage","isMethodCall","m","isError","_this2","cb","shift","push","_nextMessage","_this3","rej","_len","_","Array","_key","_ping","_callRaw","_this4","getNextMsgId","err","_call","_len2","_key2","_args4","callRaw","LoginPage","search","scanLoginData","qrcodeData","isRtc","URLSearchParams","get","cmd","prepareCall","QrLogin_QrLogin","Login","connect","router","transport","location","dispatch","Home","paddingRight","WalletsActionTypes","Loader","LoadingOverlayInner","Spinner_LoadingSpinner","LoadingSpinner","Spinner","className","CubeMove","keyframes","_templateObject","_templateObject2","_templateObject3","fetchRequest","FETCH_REQUEST","fetchSuccess","FETCH_SUCCESS","fetchError","FETCH_ERROR","setSendingTxData","SET_SENDING_TX_DATA","OverflowTd","overflow","textOverflow","Table","borderCollapse","borderSpacing","td","th","tr","borderBottom","EthTx","index","timeStamp","toLocaleString","target","href","hash","TXList","createdAt","act","payer","stake_cpu_quantity","stake_net_quantity","PriceActionTypes","TXListWrapper","Net","Wallet_templateObject","WalletPage","addWalletDispatch","addWallet","_this$props2","loading","flexBasis","Address","TXList_TXList","Spinner_Loader","Wallet","wallets","ADD_WALLET","priceGet","PRICE_GET","priceSet","prices","PRICE_SET","CreateTxPage","updatePrice","_e$target","setFieldValue","parseFloat","price","createTx","formik_esm","initialValues","onSubmit","values","formikBag","field","placeholder","RowMargined","LabelAtop_LabelAtop","_ref3","min","src","_ref4","_ref5","_ref6","max","CreateEthTx","_ref7","CREATE_ETH_TRANSFER","eos_RowMargined","CreateEosTx","CREATE_EOS_TRANSFER","CreateTx","Sign","command","sendingTxData","scaned","Status","status","webrtc","LoadingText","Status_templateObject","TxView","sendingData","_ref$sendingData","getExplrUrl","CreateEthContractPage","handleOnChangeAbi","file","reader","publicMethodNames","files","FileReader","readAsText","onload","setState","state","methodArgs","_this$state","onBlur","opacity","SelectOptions_SelectOptions","fill","arg","CallEthContract","CREATE_ETH_CONTRACT","formToJson","FormData","object","Error","eos_templateObject","styles","offtop","css","eos_templateObject2","select","eos_templateObject3","CreateEosContractPage","handleChangeAddress","handleSubmit","_contract","preventDefault","contract","t0","handleConfirm","handleMethodSelect","eos_Error","CallEosContract","CREATE_EOS_CONTRACT","ContractPage","CallContract","Routes","Switch","DefaultLayout_DefaultLayout","exact","MainLayout_MainLayout","ModalLayout_ModalLayout","theme","colors","black","white","fontSizes","h1","h2","h3","h4","breakpoints","xs","sm","md","lg","xl","widths","normalize_templateObject","globals_templateObject","injectGlobal","styles_templateObject","globals","App","store","react_redux_es","lib","emotion_theming_browser_esm","routes_Routes","Boolean","window","hostname","getBcInfo","ethInfo","eosInfo","handleSetWallet","watchFetchRequest","walletsSaga","payload","put","stack","_marked","takeEvery","_marked2","all","fork","_marked3","AuthActionTypes","initialState","errors","reducer","isAuth","AUTH_SUCCESS","AUTH_ERROR","parseMessage","replace","parseJsonString","WebrtcActionTypes","str","_sendTx","sendEth","sendEos","authSuccess","connectionReady","CONNECTION_OPEN","connectionClosing","CONNECTION_CLOSE","setStatus","SET_STATUS","sendCommand","SEND_COMMAND","handleLogin","handleRemoteSignTransfer","handleRemoteSignContract","handleSendTx","watchSendTx","watchCreateTx","watchRemoteSignTransfer","watchLogin","transportSaga","_parseMessage","sagas_marked","createContractHandler","getContractParams","handleCreateTransfer","createTransferHandler","getTransferTx","handleCreateEthTransfer","_getEthTransferTx","handleCreateEosTransfer","_getEosTransferTx","handleCreateEthContract","_getEthContractParams","handleCreateEosContract","_getEosContractParams","sagas_marked2","_context5","sagas_marked3","_parseMessage2","_context6","_marked4","_context7","_marked5","_context8","_marked6","_context9","REMOTE_SIGN_CONTRACT","_marked7","_context10","_marked8","_context11","_marked9","RTCCommands","lastWebrtcMsg","handshakeServerUrl","answerSaga","connectSaga","makeOfferRequest","offer","makeIceRequest","ice","onOpenChannel","ws","eventChannel","emit","addEventListener","removeEventListener","onMessageChannel","rtc","answer","sendIce","candidates","on","pushAnswer","sdp","waitConnection","close","connectSaga_marked","offerPromise","openChan","messageChan","_JSON$parse","createOffer","WebSocket","take","webrtcLogin","pushIceCandidate","cancelled","finish","connectSaga_marked2","watchDataChannel","handleOpeningConnection","handleSendCommand","watchActions","watchConnection","webrtcSaga","createDataChannel","dataChannel","onmessage","channelMessage","getWalletList","signTransferTx","signContractCall","webrtc_sagas_marked","readyState","webrtc_sagas_marked2","_ref3$webrtc","connected","webrtc_sagas_marked3","sagas_marked4","bgConectionTask","connectTask","cancel","sagas_marked5","sagas_marked6","RTCHelper","_EventEmitter","rpc","RTCPeerConnection","tag","onIceCandidate","ev","candidate","onDataChannel","channel","setChannel","onDataChannelOpen","c","onopen","setLocalDescription","pushOffer","setRemoteDescription","createAnswer","_callee5","addIceCandidate","onicecandidate","ondatachannel","EventEmitter","init","ii","singleton","getSingleton","CoinmarketcapTicker","pushedMessages","toConsumableArray","CoinmarketApi","ticker","axios","getEth","_getEos","handleGetPrice","toLowerCase","quotes","USD","price_sagas_marked","price_sagas_marked2","price_sagas_marked3","rootSaga","rootReducer","combineReducers","walletsReducer","auth","authReducer","transportReducer","webrtcReducer","priceReducer","connectRouter","priceSaga","store_marked","basename","pathname","includes","createBrowserHistory","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","localStorage","getItem","createStore","applyMiddleware","routerMiddleware","run","configureStore","subscribe","setItem","getState","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ed67d54.chunk.js","sourcesContent":["import styled from 'react-emotion'\n\nexport const Row = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  width: '100%',\n})\n","import styled from 'react-emotion'\n\nexport const H1 = styled('h1')({\n  color: '#160A2E',\n  fontSize: '1.6rem',\n  margin: 0,\n  textTransform: 'uppercase',\n})\n","import styled from 'react-emotion'\n\nexport const H2 = styled('h2')({\n  color: '#160A2E',\n  fontSize: '1.4rem',\n  fontWeight: 'normal',\n  margin: '0 0 .25rem 0',\n})\n","import styled from 'react-emotion'\n\nexport const H3 = styled('h3')({\n  color: 'rgba(22, 10, 46, 0.5)',\n  fontSize: '1.05rem',\n  fontWeight: 'normal',\n  margin: 0,\n})\n","import styled from 'react-emotion'\n\nexport const Button = styled('button')({\n  border: 0,\n  borderRadius: '.2rem',\n  cursor: 'pointer',\n  fontSize: '.9rem',\n  margin: '.25rem 0',\n  outline: 0,\n  padding: '.5rem 2rem',\n  lineHeight: '1.45rem',\n  width: '100%',\n})\n","import styled from 'react-emotion'\n\nexport const Column = styled('div')({\n  display: 'flex',\n  flexFlow: 'column nowrap',\n  width: '100%',\n})\n","import styled from 'react-emotion'\n\nexport const A = styled('a')({\n  color: '#160A2E'\n})\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Link } from 'react-router-dom'\n\nconst Root = styled(Link)({\n  alignSelf: 'center',\n  marginLeft: '1rem',\n  textDecoration: 'none',\n  color: 'black',\n  fontSize: '2rem',\n})\n\nconst XSpan = styled('span')({\n  textDecoration: \"none !important\"\n})\n\nexport const ButtonClose = () => (\n  <Root to=\"/\">\n    <XSpan>×</XSpan>\n  </Root>\n)\n","import styled from 'react-emotion'\n\nexport const Centered = styled('div')({\n  alignItems: 'center',\n  justifyContent: 'center',\n  textAlign: 'center',\n})\n","import styled from 'react-emotion'\n\nexport const Hr = styled('div')({\n  backgroundColor: 'transparent',\n  height: '1px',\n  margin: '1rem 0',\n  width: '100%',\n})\n","import { Link } from 'react-router-dom'\nimport styled from 'react-emotion'\n\nexport const StyledLink = styled(Link)({\n  display: 'block',\n  textDecoration: 'none',\n})\n","import styled from 'react-emotion'\n\nimport { Button } from './Button'\n\nexport const ButtonBase = styled(Button)({\n  // ':hover': {\n  //   background: 'rgb(13, 137, 180)',\n  // },\n  borderRadius: '6rem',\n  background: '#00BCF9',\n  color: '#fff',\n  transition: '.2s ease-in-out all',\n  fontSize: '1.1rem',\n})\n","import styled from 'react-emotion'\n\nimport { Button } from './Button'\n\nexport const ButtonSecondary = styled(Button)({\n  // ':hover': {\n  //   background: 'rgb(230, 247, 253)',\n  // },\n  borderRadius: '6rem',\n  background: 'transparent',\n  border: '3px solid #00BCF9',\n  color: '#00BCF9',\n  transition: '.2s ease-in-out all',\n  fontSize: '1rem',\n})\n","import styled from 'react-emotion'\n\nexport const TextInput = styled('input')({\n  '::placeholder': {\n    color: 'rgba(22, 10, 46, 0.6)',\n  },\n  background: '#F3F2F4',\n  border: '2px solid #736C82',\n  borderRadius: '6rem',\n  boxSizing: 'border-box',\n  color: 'rgba(22, 10, 46, 0.6)',\n  fontSize: '.9rem',\n  margin: '.25rem 0',\n  outline: 'none',\n  padding: '.75rem 1rem',\n  width: '100%',\n})\n","import React from 'react'\nimport styled from 'react-emotion'\n\nexport const Select = styled('select')({\n  appearance: 'none',\n  background: '#F3F2F4',\n  border: 0,\n  borderRadius: '6rem',\n  color: 'rgba(22, 10, 46, 0.6)',\n  padding: '.8rem 1.2rem',\n  boxSizing: 'border-box',\n  margin: '.25rem 0',\n  outline: 'none',\n  position: 'relative',\n  width: '100%',\n})\n\nconst Wrapper = styled('div')({\n  ':after': {\n    content: '\"\"',\n    position: 'absolute',\n    background: 'url(\"/icon-select-down.svg\")',\n    width: '1.5rem',\n    height: '1.5rem',\n    right: '.85rem',\n    top: '.85rem',\n  },\n  width: '100%',\n  position: 'relative',\n})\n\nexport const SelectOptions = ({ children, onChange }: any) => (\n  <Wrapper>\n    <Select onChange={onChange}>{ children }</Select>\n  </Wrapper>\n)","import styled from 'react-emotion'\n\nexport const Select = styled('select')(\n  ({ flipToRight }: { flipToRight?: boolean }) => ({\n    ':after': {\n      border: 'solid white',\n      borderWidth: '0 3px 3px 0',\n      content: '\"\"',\n      position: 'absolute',\n    },\n    appearance: 'none',\n    background: '#00BCF9',\n    border: 0,\n    borderRadius: '6rem',\n    color: '#f1faee',\n    padding: '0 1rem',\n    boxSizing: 'border-box',\n    margin: '.25rem 0',\n  })\n)\n","import styled from 'react-emotion'\n\nexport const Label = styled('span')({\n  display: 'block',\n  width: '100%',\n  color: 'rgba(22, 10, 46, 0.6)',\n})\n","import styled from 'react-emotion'\n\nexport const SelectFloat = styled('select')(\n  ({ flipToRight }: { flipToRight?: boolean }) => ({\n    ':after': {\n      border: 'solid white',\n      borderWidth: '0 3px 3px 0',\n      content: '\"\"',\n      position: 'absolute',\n    },\n    appearance: 'none',\n    background: '#00BCF9',\n    border: 0,\n    borderRadius: '6rem',\n    color: '#f1faee',\n    boxSizing: 'border-box',\n    margin: '.25rem 0',\n    position: 'absolute',\n    marginLeft: '15.25rem',\n    padding: '.82rem 1rem',\n  })\n)\n","import React from 'react'\nimport styled from 'react-emotion'\n\nconst Container = styled('strong')({\n  position: 'relative',\n})\n\nconst Label = styled('span')({\n  color: 'rgb(117, 118, 121)',\n  padding: '1rem',\n  position: 'absolute',\n  right: 0,\n})\n\nexport const LabelAtop = ({\n  label,\n  children,\n}: {\n  label: string\n  children: JSX.Element\n}) => (\n  <Container>\n    {children}\n    <Label>{label}</Label>\n  </Container>\n)\n","import styled from 'react-emotion'\n\nexport const TextArea = styled('textarea')({\n  background: '#F3F2F4',\n  border: '2px solid #736C82',\n  borderRadius: '2rem',\n  boxSizing: 'border-box',\n  color: 'rgb(84, 84, 86)',\n  fontSize: '.9rem',\n  margin: '.25rem 0',\n  outline: 'none',\n  padding: '.75rem 1rem',\n  width: '100%',\n})\n","import styled from 'react-emotion'\n\nexport const RangeInput = styled('input')({\n  '::placeholder': {\n    color: 'rgba(22, 10, 46, 0.6)',\n  },\n  background: 'transparent',\n  borderRadius: '6rem',\n  boxSizing: 'border-box',\n  fontSize: '.9rem',\n  margin: '.25rem 0',\n  padding: '.75rem 1rem',\n  width: '100%',\n  appearance: 'none',\n  outline: 'none',\n  color: 'transparent',\n  border: 0,\n})\n","import styled from 'react-emotion'\n\nexport const Wrap = styled('div')(\n  ({ horizontal, vertical }: { horizontal?: number; vertical?: number }) => ({\n    margin: `${vertical || 0}rem ${horizontal || 0}rem`,\n  })\n)\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Link, H1 } from '../atoms'\n\nconst Logo = styled(H1)(({ reverseColor }: { reverseColor?: boolean }) => ({\n  color: reverseColor ? '#171933' : '#fff',\n  padding: '2rem 1.6rem',\n  fontSize: '1.3rem',\n  lineHeight: '1.3rem',\n  width: 'inherit',\n}))\n\nconst Sup = styled('sup')({\n  color: '#f2494d',\n  fontSize: '0.5rem',\n  textTransform: 'lowercase',\n  verticalAlign: 'super',\n})\n\nexport default ({ to, reverseColor }: { to?: string, reverseColor?: boolean }) =>\n  <Link to={to || '/'}>\n    <Logo reverseColor={reverseColor}>\n      Cold Crypto\n      <Sup>beta mode</Sup>\n    </Logo>\n  </Link>\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Link } from '../atoms'\nimport Logo from '../moleculas/Logo'\n\nconst Root = styled('header')({\n  gridArea: 'header',\n  height: '4rem',\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nconst MainMenu = styled('div')({\n  display: 'flex',\n  flexFlow: 'row nowrap',\n  alignItems: 'center',\n  fontSize: '.9rem',\n  marginTop: '1rem',\n  marginRight: '1rem',\n  a: {\n    color: '#fff',\n    padding: '2rem',\n  }\n})\n\nexport const Header = ({ to, logoColorReverse }: { to?: string, logoColorReverse?: boolean }) => (\n  <Root>\n    <Logo reverseColor={false} to={to} />\n    <MainMenu>\n      <Link to=\"#\">About</Link>\n      <Link to=\"#\">Blog</Link>\n      <Link to=\"#\">Support</Link>\n      <Link to=\"#\">Sign up</Link>\n    </MainMenu>\n  </Root>\n)\n","import React from 'react'\nimport styled from 'react-emotion'\n\nconst Root = styled('header')({\n  gridArea: 'footer',\n  height: '4rem',\n})\n\n\nexport const Footer = () => (\n  <Root>\n    <div style={{\n      color: 'rgba(255, 255, 255, 0.2)',\n      fontSize: '.85rem',\n      paddingLeft: '2rem'\n    }}>\n      &copy; Cold Crypto 2018. All rights reserved.\n    </div>\n  </Root>\n)\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Route } from 'react-router-dom'\n\nimport { Header } from '../organisms/Header'\nimport { Footer } from '../organisms/Footer'\n\nconst Root = styled('div')({\n  background: 'linear-gradient(57deg, #0D0D0D 0%, #160A2E 100%)',\n  minHeight: '100vh',\n})\n\nconst Main = styled('main')({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'center',\n  minHeight: 'calc(100vh - 4rem - 4rem)',\n})\n\nconst Modal = styled('div')({\n  background: '#fff',\n  borderRadius: '.8rem',\n  maxWidth: '50rem',\n  minWidth: '30rem',\n  padding: '2rem',\n})\n\ninterface IDefaultProps {\n  component: any\n  path?: string\n  exact?: boolean\n}\n\nexport class DefaultLayout extends React.Component<IDefaultProps, any> {\n  public render() {\n    const { component: Component, ...rest } = this.props\n    return (\n      <Route\n        {...rest}\n        render={matchProps => (\n          <Root>\n            <Header />\n            <Main>\n              <Modal>\n                <Component {...matchProps} />\n              </Modal>\n            </Main>\n            <Footer />\n          </Root>\n        )}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Link } from '../atoms'\nimport Logo from '../moleculas/Logo'\n\nconst Root = styled('aside')({\n  background: '#fff',\n  boxShadow: '0px 0px 25px rgba(0, 0, 0, 0.04)',\n  gridArea: 'sidebar',\n})\n\nconst items = [{ id: 'wallets', title: 'Wallets' }]\n\nconst MenuLink = styled(Link)(({ selected }: { selected: boolean }) => ({\n  color: selected ? '#00BCF9' : '#171933',\n  borderLeft: `3px solid ${selected ? '#00BCF9' : 'transparent'}`,\n  fontWeight: selected ? 'bold' : 'normal',\n  padding: '.75rem 1.5rem',\n  background: selected ? 'rgba(179, 236, 254, 0.6)' : 'transparent'\n}))\n\nconst Container = styled('menu')({\n  padding: 0,\n  margin: 0,\n})\n\nconst MainMenu = () => (\n  <Container>\n    {items.map(({ id, title }) => (\n      <MenuLink to={`/${id}`} key={id} selected={true}>\n        {title}\n      </MenuLink>\n    ))}\n  </Container>\n)\n\nexport const Sidebar = () => (\n  <Root>\n    <Logo to='/' reverseColor={true} />\n    <MainMenu />\n  </Root>\n)\n","import React from 'react'\nimport styled from 'react-emotion'\n\nimport { Sidebar } from '../organisms/Sidebar'\n\nconst Container = styled('div')({\n  background: '#fff',\n  display: 'grid',\n  gridTemplateAreas: `\n    \"sidebar main main main\"\n    \"sidebar footer footer footer\"\n  `,\n  gridTemplateColumns: '16rem auto auto auto',\n  gridTemplateRows: 'auto auto',\n  minHeight: '100vh',\n})\n\nconst Main = styled('main')({\n  display: 'flex',\n  gridArea: 'main',\n  justifyContent: 'center',\n  minHeight: 'calc(100vh - 4rem)',\n  padding: '2rem',\n  background: '#FAFAFB',\n})\n\nexport const MainLayout: React.SFC = props => {\n  const { children } = props\n  return (\n    <Container>\n      <Main>{children}</Main>\n      <Sidebar />\n    </Container>\n  )\n}\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Route } from 'react-router-dom'\n// import { History } from 'history'\n\nconst Root = styled('header')({\n  alignItems: 'center',\n  background: 'linear-gradient(57deg, #0D0D0D 0%, #160A2E 100%)',\n  display: 'flex',\n  height: '100vh',\n  justifyContent: 'center',\n  left: 0,\n  position: 'fixed',\n  top: 0,\n  width: '100vw',\n})\n\nconst Main = styled('main')({\n  background: '#fff',\n  borderRadius: '.25rem',\n  boxShadow: 'rgba(0, 0, 0, 0.5) 0px .25rem 1.5rem',\n  maxHeight: '95vh',\n  maxWidth: '95vw',\n  minHeight: '50vh',\n  minWidth: '60vw',\n})\n\nconst Container = styled('div')({\n  boxSizing: 'border-box',\n  padding: '2rem',\n})\n\ninterface IDefaultProps {\n  component: any\n  path?: string\n  exact?: boolean\n}\n\nexport const ModalLayout: React.SFC<IDefaultProps> = props => {\n  const { component: Component, ...rest } = props\n  return (\n    <Route\n      {...rest}\n      render={matchProps => {\n        return (\n          <Root onClick={matchProps.history.goBack}>\n            <Main onClick={e => e.stopPropagation()}>\n              <Container>\n                <Component {...matchProps} />\n              </Container>\n            </Main>\n          </Root>\n        )\n      }}\n    />\n  )\n}\n","import * as React from 'react'\nimport { Row, Hr, ButtonClose, Column, H2, H3, Centered } from '../atoms'\nimport QrReader from 'react-qr-reader'\nimport QRCode from 'qrcode.react'\n\ninterface IPropsFromDispatch {\n  title: string\n  value: string\n  onScan: (data: string) => void\n  onError?: (e: Error) => void\n  readonly?: boolean\n}\n\ntype AllProps = IPropsFromDispatch\n\nexport const QrLogin: React.SFC<AllProps> = ({\n  title,\n  value,\n  onScan,\n  onError,\n  readonly,\n}) => {\n  const errorHandle = onError || ((error: Error) => console.error(error))\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Column>\n          <H2>{title}</H2>\n          <H3>\n            Follow these steps to sign your transaction using your mobile device\n          </H3>\n        </Column>\n        <ButtonClose />\n      </Row>\n      <Hr />\n      <Row style={{ justifyContent: 'space-around' }}>\n        <Column style={{ width: '50%' }}>\n          <Centered>\n            <H2>Scan QR Code</H2>\n          </Centered>\n          <Centered style={{ display: 'flex' }}>\n            {value && <QRCode value={value} renderAs=\"svg\" size={200} />}\n          </Centered>\n        </Column>\n        {!readonly && (\n          <Column style={{ width: '50%' }}>\n            <Centered>\n              <H2>Show QR Code</H2>\n            </Centered>\n            <Centered style={{ display: 'flex' }}>\n              <QrReader\n                delay={300}\n                onScan={result => result && onScan(result)}\n                onError={error => errorHandle(error)}\n                style={{ width: 200 }}\n              />\n            </Centered>\n          </Column>\n        )}\n      </Row>\n    </React.Fragment>\n  )\n}\n","export default function callApi(\n  method: string,\n  url: string,\n  path: string,\n  data?: any\n) {\n  return fetch(url + path, {\n    method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    mode: 'cors',\n    body: JSON.stringify(data),\n  }).then(res => res.json())\n}\n","export interface INetwork {\n  name: string\n  sign: string\n  url: string\n  btc?: any\n  explorerUrl: string\n  apiExplorerUrl: string\n  chainId?: string | number\n}\n\nexport const getBcNetBySign = (bc: string, net: string): INetwork => networks[bc].network.find((item: INetwork) => item.sign === net);\nexport const getBcNetByChainId = (bc: string, chainId: string): INetwork => networks[bc].network.find((item: INetwork) => item.chainId === chainId);\n\nconst networks = {\n  eth: {\n    name: 'Ethereum',\n    network: [\n      {\n        name: 'Mainnet',\n        sign: 'mainnet',\n        url: 'wss://mainnet.infura.io/ws',\n        explorerUrl: 'https://etherscan.io',\n        apiExplorerUrl: 'https://api.etherscan.io',\n        chainId: '1'\n      },\n      {\n        name: 'Ropsten',\n        sign: 'ropsten',\n        url: 'wss://ropsten.infura.io/ws',\n        explorerUrl: 'https://ropsten.etherscan.io',\n        apiExplorerUrl: 'https://api-ropsten.etherscan.io',\n        chainId: '3'\n      },\n      {\n        name: 'Rinkeby',\n        sign: 'rinkeby',\n        url: 'wss://rinkeby.infura.io/ws',\n        explorerUrl: 'https://rinkeby.etherscan.io',\n        apiExplorerUrl: 'https://api-rinkeby.etherscan.io',\n        chainId: '4'\n      }\n    ]\n  },\n  eos: {\n    name: 'EOS',\n    network: [\n      {\n        name: 'Mainnet',\n        sign: 'mainnet',\n        chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906',\n        url: 'http://mainnet.eoscalgary.io:80',\n        explorerUrl: 'https://eospark.com/MainNet',\n        apiExplorerUrl: 'https://junglehistory.cryptolions.io:4433'\n      },\n      {\n        name: 'Jungle Testnet',\n        sign: 'testnet',\n        chainId: 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473',\n        url: 'https://jungle2.cryptolions.io',\n        explorerUrl: 'https://jungle.eospark.com',\n        apiExplorerUrl: 'https://junglehistory.cryptolions.io:4433'\n      }\n    ]\n  },\n}\n\nexport default networks;","import BN from \"bn.js\";\n\nconst normalizers = {\n  nothing: async (value: any, type?: string, name?: string) => value,\n  toNumber: async (value: any, type?: string, name?: string) =>\n    new BN(value, 10).toNumber()\n};\n\nconst validators = {\n  nothing: async (value: any, type?: string, name?: string) => true\n};\n\nconst defaults = {\n  string: async (type?: string, name?: string) => \"\"\n};\n\nexport interface KnownType {\n  component: string;\n  config: any;\n  validation(value: any, type?: string, name?: string): Promise<boolean>;\n  normalize(value: any, type?: string, name?: string): Promise<any>;\n  default(type?: string, name?: string): Promise<any>;\n}\n\nexport const knownTypes: { [type: string]: KnownType } = {\n  uint64: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  },\n  fixed_bytes20: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  fixed_bytes32: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  fixed_bytes64: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  fixed_bytes65: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  fixed_bytes33: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  fixed_string16: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  string: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  name: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  int64: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  },\n  time: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  uint32: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  },\n  timestamp: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  uint16: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  },\n  checksum_type: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  bytes: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  varuint32: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  },\n  uint8: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  }\n};\n\nexport type TypeDef =\n  | string\n  | { [field: string]: TypeDef }\n  | [(string | { [field: string]: TypeDef })];\n\nfunction wrap(a: any, w: boolean): any {\n  return w ? [a] : a;\n}\n\nexport function lookUpBase(type: string, customs?: any): any {\n  const array = isArray(type);\n  if (array) {\n    type = type.substr(0, type.length - 2);\n  }\n\n  let r;\n\n  if (isBase(type)) {\n    r = type;\n  } else if (isChainType(type)) {\n    r = lookUpTypeCollection(chainTypes, type, customs);\n  } else if (customs && customs[type]) {\n    r = lookUpTypeCollection(customs, type, customs);\n  } else {\n    r = `unknown_${type}`;\n  }\n\n  return wrap(r, array);\n}\n\nfunction lookUpTypeCollection(\n  collection: any,\n  type: string,\n  customs?: any\n): any {\n  const chain = collection[type];\n  if (typeof chain === \"string\") {\n    return lookUpBase(chain, customs);\n  } else if (chain.base && chain.base.length) {\n    return Object.assign(\n      lookUpBase(chain.base, customs),\n      toDictionary(\n        Object.keys(chain.fields),\n        (k: any) => k,\n        (k: any) => lookUpBase(chain.fields[k], customs)\n      )\n    );\n  } else {\n    return toDictionary(\n      Object.keys(chain.fields),\n      (k: any) => k,\n      (k: any) => lookUpBase(chain.fields[k], customs)\n    );\n  }\n}\n\nexport function isArray(type: string): boolean {\n  return type.endsWith(\"[]\");\n}\n\nexport function isBase(type: string): boolean {\n  return typeof knownTypes[type] !== \"undefined\";\n}\n\nexport function isChainType(type: string): boolean {\n  return isBase(type) || typeof chainTypes[type] !== \"undefined\";\n}\n\nexport const chainTypes = {\n  checksum160: \"fixed_bytes20\",\n  checksum256: \"fixed_bytes32\",\n  checksum512: \"fixed_bytes64\",\n  signature: \"fixed_bytes65\",\n  public_key: \"fixed_bytes33\",\n  message_type: \"fixed_string16\",\n  symbol: \"uint64\",\n  symbol_code: \"uint64\",\n  field_name: \"string\",\n  account_name: \"name\",\n  permission_name: \"name\",\n  type_name: \"string\",\n  token_name: \"name\",\n  table_name: \"name\",\n  scope_name: \"name\",\n  action_name: \"name\",\n  time_point: \"int64\",\n  time_point_sec: \"time\",\n  timestamp: \"uint32\",\n  block_timestamp_type: \"timestamp\",\n  block_id: \"fixed_bytes32\",\n  checksum_type: \"fixed_bytes32\",\n  checksum256_type: \"fixed_bytes32\",\n  checksum512_type: \"fixed_bytes64\",\n  checksum160_type: \"fixed_bytes20\",\n  sha256: \"fixed_bytes32\",\n  sha512: \"fixed_bytes64\",\n  sha160: \"fixed_bytes20\",\n  weight_type: \"uint16\",\n  block_num_type: \"uint32\",\n  share_type: \"int64\",\n  digest_type: \"checksum_type\",\n  context_free_type: \"bytes\",\n  unsigned_int: \"varuint32\",\n  bool: \"uint8\",\n  extensions_type: {\n    base: \"\",\n    fields: {\n      type: \"uint16\",\n      data: \"bytes\"\n    }\n  },\n  transaction_header: {\n    base: \"\",\n    fields: {\n      expiration: \"time\",\n      ref_block_num: \"uint16\",\n      ref_block_prefix: \"uint32\",\n      max_net_usage_words: \"unsigned_int\",\n      max_cpu_usage_ms: \"uint8\",\n      delay_sec: \"unsigned_int\"\n    }\n  },\n  transaction: {\n    base: \"transaction_header\",\n    fields: {\n      context_free_actions: \"action[]\",\n      actions: \"action[]\",\n      transaction_extensions: \"extensions_type[]\"\n    }\n  },\n  signed_transaction: {\n    base: \"transaction\",\n    fields: {\n      signatures: \"signature[]\",\n      context_free_data: \"bytes[]\"\n    }\n  },\n  fields: \"field_def[]\",\n  field_def: {\n    fields: {\n      name: \"field_name\",\n      type: \"type_name\"\n    }\n  },\n  asset: {\n    fields: {\n      amount: \"share_type\",\n      sym: \"symbol\"\n    }\n  },\n  producer_key: {\n    fields: {\n      producer_name: \"account_name\",\n      block_signing_key: \"public_key\"\n    }\n  },\n  producer_schedule: {\n    fields: {\n      version: \"uint32\",\n      producers: \"producer_key[]\"\n    }\n  },\n  chain_config: {\n    fields: {\n      target_block_size: \"uint32\",\n      max_block_size: \"uint32\",\n      target_block_acts_per_scope: \"uint32\",\n      max_block_acts_per_scope: \"uint32\",\n      target_block_acts: \"uint32\",\n      max_block_acts: \"uint32\",\n      real_threads: \"uint64\",\n      max_storage_size: \"uint64\",\n      max_transaction_lifetime: \"uint32\",\n      max_authority_depth: \"uint16\",\n      max_transaction_exec_time: \"uint32\",\n      max_inline_depth: \"uint16\",\n      max_inline_action_size: \"uint32\",\n      max_generated_transaction_size: \"uint32\"\n    }\n  },\n  type_def: {\n    base: \"\",\n    fields: {\n      new_type_name: \"type_name\",\n      type: \"type_name\"\n    }\n  },\n  struct_def: {\n    base: \"\",\n    fields: {\n      name: \"type_name\",\n      base: \"type_name\",\n      fields: \"field_def[]\"\n    }\n  },\n  clause_pair: {\n    base: \"\",\n    fields: {\n      id: \"string\",\n      body: \"string\"\n    }\n  },\n  error_message: {\n    base: \"\",\n    fields: {\n      error_code: \"uint64\",\n      error_msg: \"string\"\n    }\n  },\n  abi_def: {\n    base: \"\",\n    fields: {\n      version: \"string\",\n      types: \"type_def[]\",\n      structs: \"struct_def[]\",\n      actions: \"action_def[]\",\n      tables: \"table_def[]\",\n      ricardian_clauses: \"clause_pair[]\",\n      error_messages: \"error_message[]\",\n      abi_extensions: \"extensions_type[]\"\n    }\n  },\n  table_def: {\n    base: \"\",\n    fields: {\n      name: \"table_name\",\n      index_type: \"type_name\",\n      key_names: \"field_name[]\",\n      key_types: \"type_name[]\",\n      type: \"type_name\"\n    }\n  },\n  permission_level: {\n    base: \"\",\n    fields: {\n      actor: \"account_name\",\n      permission: \"permission_name\"\n    }\n  },\n  action: {\n    base: \"\",\n    fields: {\n      account: \"account_name\",\n      name: \"action_name\",\n      authorization: \"permission_level[]\",\n      data: \"bytes\"\n    }\n  },\n  action_def: {\n    base: \"\",\n    fields: {\n      name: \"action_name\",\n      type: \"type_name\",\n      ricardian_contract: \"string\"\n    }\n  },\n  block_header: {\n    base: \"\",\n    fields: {\n      previous: \"checksum256\",\n      timestamp: \"timestamp\",\n      transaction_mroot: \"checksum256\",\n      action_mroot: \"checksum256\",\n      block_mroot: \"checksum256\",\n      producer: \"account_name\",\n      schedule_version: \"uint32\",\n      new_producers: \"producer_schedule?\"\n    }\n  },\n  packed_transaction: {\n    fields: {\n      signatures: \"signature[]\",\n      compression: \"uint8\",\n      packed_context_free_data: \"bytes\",\n      packed_trx: \"bytes\"\n    }\n  }\n};\n\nexport function toDictionary<T, V>(\n  arr: T[],\n  key: (obj: T) => string,\n  val: (obj: T) => V\n) {\n  return arr.reduce((acc, cur) => ((acc[key(cur)] = val(cur)), acc), {} as {\n    [key: string]: V;\n  });\n}","import { toDictionary, lookUpBase } from './eos-types'\n\nconst expand = (type: string, customs: any): any => {\n  try {\n    return lookUpBase(type, customs)\n  } catch (e) {\n    console.error('editor err', e)\n    return 'error_type_' + type\n  }\n}\n\nconst customTypes = (customs: any, types: any) => {\n  const dict = toDictionary(\n    customs,\n    (x: any) => x.name,\n    x => ({\n      ...x,\n      fields: toDictionary(x.fields, (f: any) => f.name, f => f.type),\n    })\n  )\n  ;(types as any[]).forEach(type => (dict[type.new_type_name] = type.type))\n\n  return dict\n}\n\nexport class EosContract {\n  public eos: any = null;\n\n  public abi: any = null;\n  public custom: any = null;\n\n  constructor(eos: any) {\n    this.eos = eos;\n  }\n\n  assignContract = async (contractName: string) => {\n    const abi = await this.eos.getAbi(contractName)\n\n    if (abi) {\n      this.abi = abi\n      this.custom = customTypes(this.abi.abi.structs, this.abi.abi.types)\n\n      return contractName\n    }\n\n    return null\n  }\n\n  getActions = () => {\n    return this.abi.abi.actions\n  }\n\n  getMethodFields = (method: string) => {\n    console.log(expand(method, this.custom))\n    return expand(method, this.custom)\n  }\n\n  getMethodAbi = (method: string) => {\n    return this.custom[method].fields\n  }\n}","import callApi from './../../utils/callApi';\nimport Eos from \"eosjs\"\nimport { getBcNetByChainId } from '../blockchains'\nimport { IWalletEos } from '../../store/wallets/types';\n\nexport { EosContract } from './contract'\n\nexport const getInfo = (wallet: IWalletEos) => {\n    const net = getBcNetByChainId(wallet.blockchain, wallet.chainId as string)\n\n    return callApi(\n      'GET',\n      `${net.apiExplorerUrl}/v1`,\n      `/history/get_actions/${wallet.address}?limit=100&skip=0`\n    )\n  }\n;\n\nexport const getEos = (wallet: IWalletEos) => {\n  const net = getBcNetByChainId(wallet.blockchain, wallet.chainId as string)\n\n  return Eos({\n    httpEndpoint: net.url,\n    chainId: wallet.chainId,\n  })\n}\n\nexport const sendTx = async (wallet: IWalletEos, signedTx: string) => {\n  const eos = getEos(wallet);\n  const txHash = await eos.pushTransaction(signedTx);\n  console.log('txHash:', txHash)\n\n  return txHash.transaction_id\n}\n\nexport async function getTxHeaders(wallet: IWalletEos)\n{\n  const eos = getEos(wallet);\n\n  const info = await eos.getInfo({})\n\n  const expireInSeconds = 60 * 60 // 1 hour\n\n  const chainDate = new Date(info.head_block_time + 'Z')\n  const expiration = new Date(chainDate.getTime() + expireInSeconds * 1000).toISOString().split('.')[0]\n\n  const block = await eos.getBlock(info.last_irreversible_block_num)\n\n  const transactionHeaders = {\n    expiration,\n    ref_block_num: info.last_irreversible_block_num & 0xFFFF,\n    ref_block_prefix: block.ref_block_prefix\n  }\n\n  return transactionHeaders\n}","import { IUints, IInts, IBytes, IFixed, IUfixed } from './eth-abi-types'\n\nexport type IAbiArgumentType =\n  | 'string'\n  | 'address'\n  | 'bool'\n  | 'function'\n  | IUints\n  | IInts\n  | IFixed\n  | IBytes\n  | IUfixed\nexport interface IAbiArgument {\n  name: string\n  type: IAbiArgumentType\n  components?: IAbiArgument[]\n}\nexport interface IAbiEventInput extends IAbiArgument {\n  indexed: boolean\n}\nexport type IStateMutability = 'pure' | 'view' | 'nonpayable' | 'payable'\nexport interface IAbiFunctionEntry {\n  type?: 'function'\n  name: string\n  inputs: IAbiArgument[]\n  outputs?: IAbiArgument[]\n  stateMutability: IStateMutability\n  // payable?: boolean // deprecated\n  // constant?: boolean // deprecated\n}\nexport interface IAbiEventEntry {\n  type: 'event'\n  name: string\n  inputs: IAbiEventInput[]\n  anonymous: boolean\n}\nexport interface IAbiConstructorEntry {\n  type: 'constructor'\n  inputs: IAbiArgument[]\n  stateMutability: IStateMutability\n}\nexport interface IAbiFallbackEntry {\n  type: 'fallback'\n  stateMutability: IStateMutability\n}\nexport type IAbiEntry =\n  | IAbiFallbackEntry\n  | IAbiFunctionEntry\n  | IAbiEventEntry\n  | IAbiConstructorEntry\nexport type ABI = IAbiEntry[]\n\nfunction isFunction(abiEntry: IAbiEntry): abiEntry is IAbiFunctionEntry {\n  return abiEntry.type === 'function'\n}\nexport function isEvent(abiEntry: IAbiEntry): abiEntry is IAbiEventEntry {\n  return abiEntry.type === 'event'\n}\n\nexport function methodSignature(abiEntry: IAbiFunctionEntry): string {\n  return `${abiEntry.name}(${abiEntry.inputs.map(x => x.type).join(',')})`\n}\n\nexport function getPublicMethodNames(abi: ABI): string[] {\n  // console.log(abi.filter(isFunction))\n  return abi.filter(isFunction).map(methodSignature)\n}\nexport function isPayable(abi: ABI, methodName: string): boolean {\n  let f = abi.filter(isFunction).find(x => methodSignature(x) === methodName)\n  if (!f) throw new Error('function not found')\n\n  return f.stateMutability === 'payable'\n}\nexport function getArguments(abi: ABI, methodName: string): IAbiArgument[] {\n  return abi.filter(isFunction).find(x => methodSignature(x) === methodName)!\n    .inputs\n}\n\nconst erc20: ABI = require('./erc20abi.json')\n\nexport function isErc20(abi: ABI): boolean {\n  return implementsInterface(abi, erc20)\n}\nexport function implementsInterface(abi: ABI, intrfc: ABI): boolean {\n  for (let i = 0; i < intrfc.length; i++) {\n    let entry = intrfc[i]\n    let exists = abi.some(x => entryEquals(entry, x))\n    // console.log(`[${entry.type}]${(entry as any).name || ''}: ${exists}`)\n    if (!exists) return false\n  }\n  return true\n}\nexport function entryEquals(e1: IAbiEntry, e2: IAbiEntry): boolean {\n  if (e1.type !== e2.type) return false\n  switch (e1.type) {\n    case 'event':\n      return eventEquals(e1, e2 as IAbiEventEntry)\n    case 'function':\n      return functionEquals(e1, e2 as IAbiFunctionEntry)\n    default:\n      throw new Error('Type not exist')\n  }\n}\nexport function functionEquals(\n  f1: IAbiFunctionEntry,\n  f2: IAbiFunctionEntry\n): boolean {\n  // let str = (f: IAbiFunctionEntry) =>\n  //   `${f.name}(${f.inputs.map(x => x.type)}):${f.outputs!.map(x => x.type)}${\n  //     f.stateMutability\n  //   }`\n  // console.log(`comparing ${str(f1)} with ${str(f2)}`)\n  if (f1.name !== f2.name) return false\n\n  // TODO: temporary disabled (more research needed)\n  // if (f1.payable && !f2.payable) // if reference function is payable, second should also\n  // \treturn false               // be payable. doesn't matter otherwise.\n\n  if (!tupleEquivalent(f1.inputs, f2.inputs)) return false\n  if (!tupleEquivalent(f1.outputs!, f2.outputs!)) return false\n\n  return true\n}\nexport function eventEquals(e1: IAbiEventEntry, e2: IAbiEventEntry): boolean {\n  if (e1.name !== e2.name) return false\n  if (!tupleEquivalent(e1.inputs, e2.inputs)) return false\n\n  return true\n}\nexport function tupleEquivalent(\n  inputs1: { type: string }[],\n  inputs2: { type: string }[]\n): boolean {\n  if (inputs1.length !== inputs2.length) return false\n\n  for (let i = 0; i < inputs1.length; i++) {\n    if (inputs1[i].type !== inputs2[i].type) return false\n  }\n  return true\n}\n","import callApi from '../../utils/callApi'\nimport Web3 from 'web3'\n\nimport { getBcNetByChainId } from '../../helpers/blockchains'\nimport { IAbiArgumentType, getArguments, ABI } from './eth-contracts'\nimport { IWallet, IWalletEth } from '../../store/wallets/types'\n\nconst web3 = new Web3()\n\n\nexport function getEtherscanExploreUrl(chainId: string) {\n  return getBcNetByChainId('eth', chainId).explorerUrl\n}\n\nexport function getWeb3(chainId: string) {\n  web3.setProvider(\n    new Web3.providers.WebsocketProvider(getBcNetByChainId('eth', chainId).url)\n  )\n\n  return web3\n}\n\nexport async function getNonce(address: string, chainId: string): Promise<number> {\n  return getWeb3(chainId).eth.getTransactionCount(address)\n}\n\nexport async function sendTx(wallet: IWallet, tx: string): Promise<string> {\n  const result = await getWeb3(wallet.chainId as string).eth.sendSignedTransaction(tx)\n\n  return result.transactionHash\n}\n\nexport async function getTx(address: string, chainId: string) {\n  return callApi(\n    'get',\n    getBcNetByChainId('eth', chainId).apiExplorerUrl,\n    `/api?module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&page=1&offset=10&sort=asc&apikey=YourApiKeyToken`\n  )\n}\n\nexport async function getInfo(wallet: IWallet) {\n  const res = await getTx(wallet.address, wallet.chainId as string)\n  const nonce = await getNonce(wallet.address, wallet.chainId as string)\n\n  return {\n    txs: res.result,\n    nonce,\n  }\n}\n\nexport const getContractData = (wallet: IWalletEth, abi: ABI, method: string, args: string[]): string => {\n  const inputs = getArguments(abi, method)\n\n  return getWeb3(wallet.chainId as string).eth.abi.encodeFunctionCall({\n    name: method,\n    type: 'function',\n    inputs,\n  }, args);\n}\n\nexport const convertParamsToEth = (types: IAbiArgumentType[], params: any[]): string[] => types\n  .map((x,i) => [x, params[i]] as [string, any])\n  .map(x => web3.eth.abi.encodeParameter(x[0], x[1]))","import Web3 from 'web3'\nimport { getTxHeaders } from './eos'\nimport {\n  IEthTxFormValues,\n  IWalletEth,\n  IEosTxFormValues,\n  IEthContractFormValues,\n  IWalletEos,\n  IEosContractFormValues,\n  IWalletBase\n} from '../store/wallets/types'\nimport { getContractData, convertParamsToEth } from './eth/eth'\nimport { getArguments } from './eth/eth-contracts';\n\n// TODO: mobile app ignore blockchain array\nexport const getWalletListCommand = () => {\n  const params = { blockchains: ['eth', 'eos'] }\n  return {\n    id: 2,\n    method: 'getWalletList',\n    params,\n  }\n}\n\n\nexport async function getEthTransferTx(form: IEthTxFormValues, wallet: IWalletEth)\n{\n  return Promise.resolve({\n    gasPrice: Web3.utils.toWei(form.gasPrice.toString(), 'gwei'),\n    nonce: wallet.nonce,\n    to: form.to,\n    value: Web3.utils.toWei(form.amount.toString()),\n  })\n}\n\nexport async function getEosTransferTx(data: IEosTxFormValues, wallet: IWalletEos)\n{\n  const txHeaders = await getTxHeaders(wallet)\n  return {\n      method: 'transfer(from:name,to:name,quantity:asset,memo:string)',\n      transaction: {\n        ...txHeaders,\n        actions: [\n          {\n            name: 'transfer',\n            account: 'eosio.token',\n            authorization: [\n              {\n                actor: wallet.address,\n                permission: 'active',\n              },\n            ],\n            data: {\n              to: data.to,\n              from: wallet.address,\n              quantity: `${(+data.amount).toFixed(4) as string} EOS`,\n              memo: '',\n            },\n          },\n        ],\n      },\n    }\n}\n\nexport async function getEthContractParams (formData: IEthContractFormValues, wallet: IWalletEth) {\n  const tx  = {\n    gasPrice: Web3.utils.toWei(formData.gasPrice.toString(), \"gwei\"),\n    gasLimit: formData.gasLimit,\n    nonce: wallet.nonce,\n    to: formData.to,\n    data: getContractData(wallet, formData.abi, formData.method, formData.args)\n  };\n\n  const argsTypes = getArguments(formData.abi, formData.method).map(\n    item => item.type\n  );\n  const args = convertParamsToEth(argsTypes, formData.args);\n\n  const abi = { method: formData.method, args };\n\n  return Promise.resolve({ abi, wallet, tx })\n};\n\nexport async function getEosContractParams (formData: IEosContractFormValues, wallet: IWalletEos) {\n  const abi = Object.entries(formData.abi)\n      .map((params: string[]) => params.join(':'))\n      .join(',');\n\n    const walletBase: IWalletBase = {\n      address: wallet.address,\n      blockchain: wallet.blockchain,\n      chainId: wallet.chainId\n    }\n\n    const txHeaders = await getTxHeaders(wallet)\n    const tx = {\n      method: `${formData.method}(${abi})`,\n      transaction: {\n        ...txHeaders,\n        actions: [\n          {\n            name: formData.method,\n            account: formData.to,\n            authorization: [\n              {\n                actor: wallet.address,\n                permission: 'active',\n              },\n            ],\n            data: (formData as IEosContractFormValues).data\n          },\n        ],\n      },\n    }\n\n    return Promise.resolve({ abi, wallet: walletBase, tx })\n};","import { IHostCommand } from \"../../helpers/webrtc/hostproto\"\n\nexport enum TransportActionTypes {\n  SEND_TX = '@@transport/SEND_TX',\n  LOGIN = '@@transport/LOGIN',\n  SIGN_TX = '@@transport/SIGNTX',\n  CREATE_TX = '@@transport/CREATETX',\n\n  CREATE_ETH_TRANSFER = '@@transport/CREATE_ETH_TRANSFER',\n  CREATE_EOS_TRANSFER = '@@transport/CREATE_EOS_TRANSFER',\n  CREATE_ETH_CONTRACT = '@@transport/CREATE_ETH_CONTRACT',\n  CREATE_EOS_CONTRACT = '@@transport/CREATE_EOS_CONTRACT',\n\n  REMOTE_SIGN_TRANSFER = '@@transport/REMOTE_SIGN_TX',\n  REMOTE_SIGN_CONTRACT = '@@transport/REMOTE_SIGN_CONTRACT',\n\n\n  SET_RTC_SID = '@@transport/SET_RTC_SID',\n}\n\nexport interface ITransportState {\n  qrcodeData: string\n  lastWebrtcMsg: IHostCommand<unknown[], unknown> | null\n}\n","import { action } from 'typesafe-actions'\nimport { TransportActionTypes } from './types'\nimport { IEthTxFormValues, IEthContractFormValues, IEosTxFormValues, IEosContractFormValues } from '../wallets/types'\n\nexport const createEthTransfer = (formData: IEthTxFormValues) =>\n  action(TransportActionTypes.CREATE_ETH_TRANSFER, formData)\n\nexport const createEosTransfer = (formData: IEosTxFormValues) =>\n  action(TransportActionTypes.CREATE_EOS_TRANSFER, formData)\n\nexport const createEthContract = (formData: IEthContractFormValues) =>\n  action(TransportActionTypes.CREATE_ETH_CONTRACT, formData)\n\nexport const createEosContract = (formData: IEosContractFormValues) =>\n  action(TransportActionTypes.CREATE_EOS_CONTRACT, formData)\n\nexport const remoteSignTransferTx = (tx: unknown) =>\n  action(TransportActionTypes.REMOTE_SIGN_TRANSFER, tx)\n\nexport const remoteSignContractTx = (params: unknown) =>\n  action(TransportActionTypes.REMOTE_SIGN_CONTRACT, params)\n\nexport const signTransaction = (tx: string) =>\n  action(TransportActionTypes.SIGN_TX, tx)\n\nexport const sendTransaction = (tx: string) =>\n  action(TransportActionTypes.SEND_TX, tx)\n\nexport const login = (message: string) =>\n  action(TransportActionTypes.LOGIN, message)\n\nexport const setRtcSid = (sid: string) =>\n  action(TransportActionTypes.SET_RTC_SID, sid)\n","import {\n  parseHostMessage,\n  isMethodCall,\n  isError,\n  IHostCommandU,\n} from './hostproto'\n\nexport type Id = string | number | null\n\nexport function notify(\n  method: string,\n  params: {} | unknown[],\n  reduced: boolean = false\n) {\n  if (reduced) return `${method}||${JSON.stringify(params)}`\n\n  return jrpcs({\n    method,\n    params,\n  })\n}\nexport function error(id: Id | undefined, error: any) {\n  return jrpcs({\n    id,\n    error,\n  })\n}\nexport function result<T>(\n  id: Id | undefined,\n  result: T,\n  reduced: boolean = false\n) {\n  if (reduced) return `|${id}|${JSON.stringify(result)}`\n\n  return jrpcs({\n    id,\n    result,\n  })\n}\nexport function call(\n  method: string,\n  id: Id,\n  params: unknown | unknown[],\n  reduced: boolean = false\n) {\n  if (reduced) return `${method}|${id}|${JSON.stringify(params)}`\n\n  return jrpcs({\n    method,\n    id,\n    params,\n  })\n}\nexport function jrpc<\n  T extends { id?: string | number | null; method?: string }\n>(obj: T): T & { jsonrpc: '2.0' } {\n  return Object.assign({}, obj, { jsonrpc: '2.0' } as { jsonrpc: '2.0' })\n}\nexport function jrpcs<\n  T extends { id?: string | number | null; method?: string }\n>(obj: T) {\n  return JSON.stringify(jrpc(obj))\n}\n\nexport type RequestHandler = (\n  json: { id: Id; method: string; params: any[] | any },\n  callback: (err: any, result: any) => void\n) => void\n\nexport type RequestHandlerTuple<\n  TCmd extends IHostCommandU,\n  TRes\n> = [TCmd, (err: any, result: TRes) => void]\ntype RequestHandlerTupleU = RequestHandlerTuple<\n  IHostCommandU,\n  unknown\n>\n\nexport class JsonRpc {\n  public send: (msg: string) => void\n  public onRequest: RequestHandler\n\n  lastOutgoingMsgId: number = 1\n\n  listeners: { [id: number]: (err: any, json: any) => void } = {}\n\n  constructor(send: (msg: string) => void, onRequest: RequestHandler) {\n    this.send = send\n    this.onRequest = onRequest\n  }\n\n  private _callbacksQueue = [] as RequestHandler[]\n  private _messageQueue = [] as RequestHandlerTupleU[]\n  public switchToQueueMode() {\n    this.onRequest = (json, cb) => {\n      // console.log('*** 1')\n      if (this._callbacksQueue.length) {\n        // console.log('*** 2')\n        let m = this._callbacksQueue.shift()!\n        // console.log('*** 3')\n        m(json, cb)\n        // console.log('*** 4')\n      } else {\n        // console.log('*** 5')\n        this._messageQueue.push([json, cb])\n        // console.log('*** 6')\n      }\n    }\n  }\n  public async nextMessage(): Promise<RequestHandlerTupleU> {\n    if (this._messageQueue.length)\n      return Promise.resolve(this._messageQueue.shift()!)\n    else\n      return new Promise<RequestHandlerTupleU>((res, rej) =>\n        this._callbacksQueue.push((..._) => res(_))\n      )\n  }\n  public onMessage = (data: string) => {\n    // console.log('%%%! 1')\n    let json = parseHostMessage(data)\n    // console.log('%%%! 2')\n    if (!json)\n      return console.error(`JsonRpc: error parsing data!\\n${data}`)\n    \n    // console.log('%%%! 3')\n    let id = json.id as number\n    // console.log('%%%! 4')\n    if (isMethodCall(json)) {\n      // console.log('%%%! 5')\n      this.onRequest(json, (error, result) =>\n        (/* console.log('%%%! 6'),\n        console.log(this.send.toString()), */\n        this.send(\n          JSON.stringify({\n            id,\n            jsonrpc: '2.0',\n            ...(error ? { error } : { result }),\n          })\n        ))\n      )\n    } else if (this.listeners[id]) {\n      let m = this.listeners[id]\n      delete this.listeners[id]\n      if (isError(json))\n        m(json.error, undefined)\n      else\n        m(undefined, json.result)\n    }\n  }\n  public async ping() {\n    let response = await this.call('ping')\n    if (response != 'pong') throw 'JSON-RPC: unknown ping error!'\n  }\n  public async callRaw(method: string, args: {}): Promise<any> {\n    console.log(`JSON.RAW: ${method}(${JSON.stringify(args)})`)\n    return new Promise((res, rej) => {\n      let id = this.getNextMsgId()\n      this.listeners[id] = (err, msg) => (err ? rej(err) : res(msg))\n      console.log(`outgoing: ${call(method, id, args)}`)\n      this.send(call(method, id, args))\n    })\n  }\n  public async call(method: string, ...args: any[]): Promise<any> {\n    return this.callRaw(method, args)\n  }\n  getNextMsgId() {\n    return this.lastOutgoingMsgId++\n  }\n}\n","import { Id } from './jsonrpc'\n\nexport interface IHostCommand<\n  TArr extends TObj[keyof TObj][] | unknown[],\n  TObj\n> {\n  method: string\n  id: Id\n  params: TArr | TObj\n}\nexport type IHostCommandU = IHostCommand<unknown[], unknown>\nexport interface IHostError {\n  id?: Id\n  error: unknown\n}\nexport interface IHostResult<T> {\n  id: Id\n  result: T\n}\nexport type IJsonRpcMessage =\n  | IHostCommandU\n  | IHostResult<unknown>\n  | IHostError\n\nexport type IHCSimple<\n  T1 = unknown,\n  T2 = unknown,\n  T3 = unknown,\n  T4 = unknown,\n  T5 = unknown,\n  T6 = unknown,\n  T7 = unknown\n> = IHostCommand<\n  [\n    T1[keyof T1],\n    T2[keyof T2],\n    T3[keyof T3],\n    T4[keyof T4],\n    T5[keyof T5],\n    T6[keyof T6],\n    T7[keyof T7]\n  ],\n  T1 & T2 & T3 & T4 & T5 & T6 & T7\n>\n\nexport function isMethodCall(json: IJsonRpcMessage): json is IHostCommandU\n{\n  return \"method\" in json\n}\nexport function isResult(json: IJsonRpcMessage): json is IHostResult<unknown>\n{\n  return \"result\" in json\n}\nexport function isError(json: IJsonRpcMessage): json is IHostError\n{\n  return \"error\" in json\n}\n\nexport function parseHostMessage(msg: string): IJsonRpcMessage | undefined {\n  if (!msg) return undefined // empty message\n\n  if (msg.startsWith('{')) return JSON.parse(msg)\n\n  let regex = /^.*|.*|.*$/\n\n  if (!regex.test(msg)) return undefined // not enough data to parse\n\n  let [method, _id, data] = msg.split('|', 3).map(x => x || '')\n\n  let prefixLength = method.length + _id.length + data.length + 2\n  if (msg.length > prefixLength) data += msg.substr(prefixLength)\n\n  let id = _id.match(/^\\d+/) ? parseInt(_id) : _id\n\n  let params = JSON.parse(data || '[]')\n\n  if (!method)\n    return {\n      id,\n      result: params,\n    }\n\n  return {\n    method,\n    id,\n    params,\n  }\n}\nexport function arrayToObj<TArr extends any[], TObj>(\n  args: TArr,\n  mapping: (keyof TObj)[]\n): TObj {\n  return args.reduce((acc, cur, idx) => ((acc[mapping[idx]] = cur), acc), {})\n}\nexport function objToArray<TArr extends TObj[keyof TObj][], TObj extends {}>(\n  args: TObj,\n  mapping: (keyof TObj)[]\n): TArr {\n  return mapping.map(name => args[name]) as TArr\n}\nexport function allToObj<TObj>(\n  msg: IHostCommand<TObj[keyof TObj][], TObj>,\n  mapping: (keyof TObj)[]\n): TObj {\n  return Array.isArray(msg.params)\n    ? arrayToObj(msg.params, mapping)\n    : msg.params\n}\nexport function allToArray<TArr extends TObj[keyof TObj][], TObj>(\n  msg: IHostCommand<TArr, TObj>,\n  mapping: (keyof TObj)[]\n): TArr {\n  return Array.isArray(msg.params)\n    ? msg.params\n    : objToArray(msg.params, mapping)\n}\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { QrLogin } from '../components/organisms/QrLogin'\n\nimport { getWalletListCommand } from '../helpers/jsonrps'\nimport { login } from '../store/transport/actions'\nimport { IConnectedReduxProps, IApplicationState } from '../store'\nimport { call as prepareCall } from '../helpers/webrtc/jsonrpc'\n\n// TODO: map errorfrom qrcode state and show if we will have it\ninterface IPropsFromState {\n  search: string\n  qrcodeData: string\n}\n\ninterface IPropsFromDispatch {\n  scanLoginData: typeof login\n}\n\ntype AllProps = IPropsFromState &\n  IPropsFromDispatch &\n  IConnectedReduxProps &\n  RouteComponentProps\n\nclass LoginPage extends React.Component<AllProps> {\n  public render() {\n    const { search, scanLoginData, qrcodeData } = this.props\n\n    const isRtc = new URLSearchParams(search).get('rtc') === 'true'\n    let cmd = getWalletListCommand()\n    const value = isRtc\n      ? qrcodeData\n      : prepareCall(cmd.method, cmd.id, cmd.params, true)\n    return (\n      <React.Fragment>\n        <QrLogin\n          title={'Mobile Login'}\n          value={value}\n          onScan={scanLoginData}\n          readonly={isRtc}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({ router, transport }: IApplicationState) => ({\n  search: router.location.search,\n  qrcodeData: transport.qrcodeData,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  scanLoginData: (data: string) => dispatch(login(data)),\n})\n\nexport const Login = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginPage)\n","import * as React from 'react'\nimport {\n  Row,\n  H2,\n  H3,\n  Column,\n  Hr,\n  ButtonBase,\n  ButtonSecondary,\n  Link,\n} from '../components/atoms'\n\nexport const Home: React.SFC<{}> = () => (\n  <div style={{ width: '38rem' }}>\n    <H2>Welcome Back!</H2>\n    <H3>Sign in to your wallet below</H3>\n    <Hr />\n\n    <Row>\n      <Column\n        style={{\n          width: '50%',\n          display: 'flex',\n          justifyContent: 'center',\n          paddingRight: '1rem',\n        }}\n      >\n        <Link to=\"/login\">\n          <ButtonBase>Login with QR code</ButtonBase>\n        </Link>\n      </Column>\n      <Column\n        style={{\n          width: '50%',\n          display: 'flex',\n          justifyContent: 'center',\n          paddingRight: '1rem',\n        }}\n      >\n        <Link to=\"/login?rtc=true\">\n          <ButtonSecondary>Webrtc login</ButtonSecondary>\n        </Link>\n      </Column>\n    </Row>\n  </div>\n)\n","import * as React from 'react'\nimport styled, { keyframes } from 'react-emotion'\n\nexport const Loader = () => (\n  <LoadingOverlayInner>\n    <LoadingSpinner />\n  </LoadingOverlayInner>\n)\n\nconst LoadingSpinner: React.SFC = () => (\n  <Spinner>\n    <div className=\"cube1\" />\n    <div className=\"cube2\" />\n  </Spinner>\n)\n\nconst CubeMove = keyframes`\n  25% {\n    transform: translateX(42px) rotate(-90deg) scale(0.5);\n    -webkit-transform: translateX(42px) rotate(-90deg) scale(0.5);\n  } 50% {\n    transform: translateX(42px) translateY(42px) rotate(-179deg);\n    -webkit-transform: translateX(42px) translateY(42px) rotate(-179deg);\n  } 50.1% {\n    transform: translateX(42px) translateY(42px) rotate(-180deg);\n    -webkit-transform: translateX(42px) translateY(42px) rotate(-180deg);\n  } 75% {\n    transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);\n    -webkit-transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);\n  } 100% {\n    transform: rotate(-360deg);\n    -webkit-transform: rotate(-360deg);\n  }\n`\n\nconst Spinner = styled('div')`\n  margin: 100px auto;\n  width: 40px;\n  height: 40px;\n  position: relative;\n  & .cube1,\n  & .cube2 {\n    background-color: black;\n    width: 15px;\n    height: 15px;\n    position: absolute;\n    top: 0;\n    left: 0;\n    -webkit-animation: ${CubeMove} 1.8s infinite ease-in-out;\n    animation: ${CubeMove} 1.8s infinite ease-in-out;\n  }\n  & .cube2 {\n    -webkit-animation-delay: -0.9s;\n    animation-delay: -0.9s;\n  }\n`\nconst LoadingOverlayInner = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 200px;\n`\n","import { IHostCommandU } from '../../helpers/webrtc/hostproto'\nimport { IAbiEntry } from '../../helpers/eth/eth-contracts';\n\nexport interface IWalletBase extends ApiResponse {\n  blockchain: string\n  address: string\n  chainId: string | number\n  balance?: string\n}\n\nexport interface IWalletEth extends IWalletBase {\n  nonce: number\n  txs?: IEthTx[]\n}\n\n// TODO: autogenrate, validate this !!!!\nexport interface IEthTx {\n  blockHash: string\n  blockNumber: string\n  confirmations: string\n  contractAddress: string\n  cumulativeGasUsed: string\n  from: string\n  gas: string\n  gasPrice: string\n  gasUsed: string\n  hash: string\n  input: string\n  isError: string\n  nonce: string\n  timeStamp: number\n  to: string\n  transactionIndex: string\n  txreceipt_status: string\n  value: string\n}\n\nexport interface IEosTx {\n  act: any\n  createdAt: string\n}\n\nexport interface IWalletEos extends IWalletBase {}\n\nexport type IWallet = IWalletBase | IWalletEos | IWalletEth\nexport type ApiResponse = Record<string, any>\n\nexport enum WalletsActionTypes {\n  FETCH_REQUEST = '@@wallets/FETCH_DATA_REQUEST',\n  FETCH_SUCCESS = '@@wallets/FETCH_DATA_SUCCESS',\n  FETCH_ERROR = '@@wallets/FETCH_DATA_ERROR',\n  ADD_WALLET = '@@wallets/ADD_WALLET',\n  SET_SENDING_TX_DATA = '@@wallets/SET_SENDING_TX_DATA',\n}\n\nexport interface IWalletsState {\n  readonly item: IWalletEth | IWalletEos\n  readonly items: IWalletEth[] | IWalletEos[]\n  readonly sendingTxData: ISendingTxData\n  readonly errors?: string\n  readonly loading: boolean\n}\n\nexport interface ISendingTxData {\n  command?: IHostCommandU\n  hash?: string\n  formData?: FormValues\n  error?: string\n}\n\nexport type FormValues = IEthTxFormValues \n  | IEthContractFormValues\n  | IEosTxFormValues\n  | IEosContractFormValues\n\nexport interface IEthTxFormValues {\n  to: string\n  gasPrice: number\n  data: string\n  amount: number\n}\n\nexport interface IEthContractFormValues {\n  to: string\n  abi: IAbiEntry[]\n  method: string\n  gasPrice: string\n  args: string[]\n  gasLimit: string\n}\n\nexport interface IEosTxFormValues {\n  to: string\n  memo: string\n  amount: number\n}\n\nexport interface IEosContractFormValues {\n  to: string\n  method: string\n  data: any\n  abi: string\n}","import { action } from 'typesafe-actions'\nimport {\n  WalletsActionTypes,\n  IWalletEth,\n  IWalletEos,\n  IWalletBase,\n  ISendingTxData,\n} from './types'\n\nexport const fetchRequest = () => action(WalletsActionTypes.FETCH_REQUEST)\nexport const fetchSuccess = (item: IWalletEth | IWalletEos) =>\n  action(WalletsActionTypes.FETCH_SUCCESS, item)\nexport const fetchError = (message: string) =>\n  action(WalletsActionTypes.FETCH_ERROR, message)\n\nexport const addWallet = (wallet: IWalletBase) =>\n  action(WalletsActionTypes.ADD_WALLET, wallet)\n\nexport const setSendingTxData = (data: ISendingTxData) =>\n  action(WalletsActionTypes.SET_SENDING_TX_DATA, data)\n","import styled from 'react-emotion'\n\nexport const OverflowTd = styled('td')({\n  maxWidth: '20vw',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n})\n\nexport const Table = styled('table')({\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  td: {\n    color: '#2e3d3f',\n    padding: '1rem .5rem',\n  },\n  th: {\n    color: '#457b9d',\n    padding: '.5rem',\n  },\n  tr: {\n    borderBottom: '1px solid #b2bcb9',\n  },\n  width: '100%',\n})\n","import * as React from 'react'\n\nimport { OverflowTd, Table } from './common'\nimport { A } from '../../components/atoms'\nimport { IEthTx, IWalletEth } from '../../store/wallets/types'\nimport { getEtherscanExploreUrl } from '../../helpers/eth/eth'\n\nexport const EthTx = (wallet: IWalletEth) => {\n  if (!wallet || !wallet.txs) {\n    return null\n  }\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>TxHash</th>\n          <th>Address</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {wallet.txs!.map((item: IEthTx, index: number) => (\n          <tr key={index}>\n            <td>{new Date(item.timeStamp * 1000).toLocaleString()}</td>\n            <OverflowTd>\n              <A\n                target=\"_blank\"\n                // TODO: make genrator explorer url for blockchains\n                href={`${getEtherscanExploreUrl(wallet.chainId as string)}/tx/${\n                  item.hash\n                }`}\n              >\n                {item.hash}\n              </A>\n            </OverflowTd>\n            <OverflowTd>{item.from}</OverflowTd>\n            <td>{item.value}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )\n}\n","import * as React from 'react'\nimport { IWalletBase, IWalletEth } from '../../store/wallets/types'\n\nimport { EthTx } from './eth'\nimport { EosTX } from './eos'\n\ninterface IProps {\n  wallet: IWalletBase | IWalletEth\n}\n\nexport const TXList: React.SFC<IProps> = ({ wallet }) => {\n  if (!wallet.txs) return <div />\n\n  if (wallet.blockchain === 'eth') {\n    return EthTx(wallet as IWalletEth)\n  }\n\n  if (wallet.blockchain === 'eos') {\n    return EosTX(wallet.txs)\n  }\n\n  return <div>hi</div>\n}\n","import * as React from 'react'\n\nimport { Table } from './common'\nimport { IEosTx } from '../../store/wallets/types'\n\nexport const EosTX = (txs: IEosTx[]) => {\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>Type</th>\n          <th>Act</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {txs.map((item: IEosTx, index: number) => (\n          <tr key={index}>\n            <td>{new Date(item.createdAt).toLocaleString()}</td>\n            <td>{item.act.name}</td>\n            <td>\n              {item.act.name === 'transfer' &&\n                `${item.act.data.from} -> ${item.act.data.to}`}\n              {item.act.name === 'delegatebw' && `${item.act.data.from}`}\n              {item.act.name === 'buyrambytes' && `${item.act.data.payer}`}\n            </td>\n            <td>\n              {item.act.name === 'transfer' && `${item.act.data.quantity}`}\n              {item.act.name === 'delegatebw' && (\n                <React.Fragment>\n                  <span>{`CPU ${item.act.data.stake_cpu_quantity}`}</span>\n                  <br />\n                  <span>{`RAM ${item.act.data.stake_net_quantity}`}</span>\n                </React.Fragment>\n              )}\n              {item.act.name === 'buyrambytes' &&\n                `${item.act.data.bytes} bytes`}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )\n}\n","import * as React from 'react'\nimport styled from 'react-emotion'\nimport { Row, H2, Column, ButtonBase, H1, Hr } from '../components/atoms'\nimport { Loader } from '../components/Spinner'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState, IConnectedReduxProps } from '../store'\nimport { addWallet } from '../store/wallets/actions'\nimport { IWallet, IWalletBase } from '../store/wallets/types'\nimport { TXList } from './TXList'\nimport { getBcNetByChainId } from '../helpers/blockchains'\n\nconst TXListWrapper = styled('div')({\n  background: '#fff',\n  padding: '2rem',\n  boxShadow: '0px 0px 25px rgba(0, 0, 0, 0.04)',\n  borderRadius: '.8rem',\n})\n\nconst Net = styled('h3')`\n  margin: 0;\n  padding: 0;\n  font-weight: normal;\n  font-size: 14px;\n`\n\ninterface IPropsFromState {\n  loading: boolean\n  wallet: IWallet\n}\n\ninterface IPropsFromDispatch {\n  addWallet: typeof addWallet\n}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch & IConnectedReduxProps\n\nclass WalletPage extends React.Component<AllProps> {\n  public componentDidMount() {\n    const { wallet, addWallet: addWalletDispatch } = this.props\n\n    addWalletDispatch(wallet)\n  }\n\n  public render() {\n    const { wallet, loading } = this.props\n    const net = getBcNetByChainId(wallet.blockchain, wallet.chainId as string)\n    return (\n      <React.Fragment>\n        <Column>\n          <Row>\n            <Column style={{ flexBasis: '15rem', marginRight: '2rem' }}>\n              <Link to={`/wallets/${wallet.address}/tx/create`}>\n                <ButtonBase style={{ minWidth: '13rem' }}>\n                  Create New Tx\n                </ButtonBase>\n              </Link>\n              <Link to={`/wallets/${wallet.address}/contract/create`}>\n                <ButtonBase>Call Contract</ButtonBase>\n              </Link>\n            </Column>\n            <Column style={{ display: 'flex', justifyContent: 'center' }}>\n              <H1>{wallet.blockchain} Wallet</H1>\n              <H2>\n                <Address>{wallet.address}</Address>\n              </H2>\n              <Net>\n                Network: <b>{net.name}</b>\n              </Net>\n            </Column>\n          </Row>\n          <Hr />\n          <TXListWrapper>\n            <TXList wallet={wallet} />\n          </TXListWrapper>\n          {loading && <Loader />}\n        </Column>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  loading: wallets.loading,\n  wallet: wallets.item,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  addWallet: (wallet: IWalletBase) => dispatch(addWallet(wallet)),\n})\n\nexport const Wallet = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WalletPage)\n\nconst Address = styled('div')({\n  fontSize: '.8rem',\n  lineHeight: '1.5rem',\n})\n","export enum PriceActionTypes {\n  PRICE_GET = '@@price/PRICE_GET',\n  PRICE_SET = '@@price/PRICE_SET',\n}\n\nexport interface ICurrencyPrice {\n  symbol: string\n  price: number\n}\n\nexport interface IPriceState {\n  readonly eth: number\n  readonly eos: number\n}\n","import { action } from 'typesafe-actions'\nimport { PriceActionTypes, ICurrencyPrice } from './types'\n\nexport const priceGet = () => action(PriceActionTypes.PRICE_GET)\nexport const priceSet = (prices: ICurrencyPrice[]) => action(PriceActionTypes.PRICE_SET, prices)\n","import * as React from 'react'\nimport { Formik, FormikProps, Form, Field, FieldProps } from 'formik'\nimport {\n  Row,\n  H1,\n  Hr,\n  ButtonClose,\n  Column,\n  Label,\n  TextInput,\n  LabelAtop,\n  TextArea,\n  ButtonBase,\n  RangeInput,\n} from '../../components/atoms'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState } from '../../store'\nimport { IWallet, IEthTxFormValues } from '../../store/wallets/types'\nimport { createEthTransfer } from '../../store/transport/actions'\nimport { priceGet } from '../../store/price/actions'\nimport styled from 'react-emotion'\n\ninterface IPropsFromState {\n  wallet: IWallet\n  price: number\n}\n\ninterface IPropsFromDispatch {\n  createTx: typeof createEthTransfer\n  priceGet: typeof priceGet\n}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch\n\nclass CreateTxPage extends React.Component<AllProps, {}> {\n  componentDidMount() {\n    this.props.priceGet()\n  }\n\n  updatePrice = async (e: React.ChangeEvent<HTMLInputElement>, form: any) => {\n    const { name, value } = e.target\n\n    form.setFieldValue(name, value)\n    if (name === 'amount') {\n      form.setFieldValue('price', parseFloat(value) * this.props.price)\n    } else {\n      form.setFieldValue('amount', parseFloat(value) / this.props.price)\n    }\n  }\n\n  render() {\n    const { wallet, createTx } = this.props\n    return (\n      <React.Fragment>\n        <Row>\n          <H1>Send {wallet.blockchain}</H1>\n          <ButtonClose />\n        </Row>\n        <Hr />\n        <Formik\n          initialValues={{ to: '', gasPrice: 3, data: '', amount: 0 }}\n          onSubmit={(values: IEthTxFormValues) => createTx(values)}\n          render={(formikBag: FormikProps<IEthTxFormValues>) => (\n            <Form>\n              <Column>\n                <Label>To:</Label>\n                <Field\n                  name=\"to\"\n                  render={({ field, form }: FieldProps<IEthTxFormValues>) => (\n                    <TextInput type=\"text\" placeholder=\"Address\" {...field} />\n                  )}\n                />\n                <RowMargined>\n                  <Column>\n                    <Label>Enter amount:</Label>\n                    <Row>\n                      <LabelAtop label={wallet.blockchain}>\n                        <Field\n                          name=\"amount\"\n                          render={({\n                            field,\n                            form,\n                          }: FieldProps<IEthTxFormValues>) => (\n                            <TextInput\n                              type=\"number\"\n                              min=\"0\"\n                              name=\"amount\"\n                              value={field.value}\n                              onChange={e => this.updatePrice(e, form)}\n                            />\n                          )}\n                        />\n                      </LabelAtop>\n                      <img src=\"/icon-change.svg\" />\n                      <LabelAtop label=\"usd\">\n                        <Field\n                          name=\"price\"\n                          render={({\n                            field,\n                            form,\n                          }: FieldProps<IEthTxFormValues>) => (\n                            <TextInput\n                              type=\"number\"\n                              name=\"price\"\n                              value={field.value}\n                              onChange={e => this.updatePrice(e, form)}\n                            />\n                          )}\n                        />\n                      </LabelAtop>\n                    </Row>\n                  </Column>\n                </RowMargined>\n                <RowMargined>\n                  <Column>\n                    <Label>Description:</Label>\n                    <Field\n                      name=\"data\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEthTxFormValues>) => (\n                        <TextArea {...field} />\n                      )}\n                    />\n                  </Column>\n                </RowMargined>\n                <RowMargined>\n                  <Column>\n                    <Field\n                      name=\"gasPrice\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEthTxFormValues>) => (\n                        <React.Fragment>\n                          <Label>Gas price {field.value} GWEI</Label>\n                          <RangeInput type=\"range\" min=\"1\" max=\"7\" {...field} />\n                        </React.Fragment>\n                      )}\n                    />\n                    <Row>\n                      {/* // TODO: Calca gasprice and await time */}\n                      <span>gweiPrice</span>\n                      <span> {`< awaitTime min`}</span>\n                    </Row>\n                  </Column>\n                </RowMargined>\n                <ButtonBase type=\"submit\">Continue</ButtonBase>\n              </Column>\n            </Form>\n          )}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({ wallets, price }: IApplicationState) => ({\n  wallet: wallets.item,\n  price: price.eth,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  createTx: (data: IEthTxFormValues) => dispatch(createEthTransfer(data)),\n  priceGet: () => dispatch(priceGet()),\n})\n\nexport const CreateEthTx = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateTxPage)\n\nconst RowMargined = styled(Row)({\n  margin: '1rem 0',\n})\n","import * as React from 'react'\nimport { Formik, FormikProps, Form, Field, FieldProps } from 'formik'\nimport {\n  Row,\n  H1,\n  Hr,\n  ButtonClose,\n  Column,\n  Label,\n  TextInput,\n  LabelAtop,\n  TextArea,\n  ButtonBase,\n} from '../../components/atoms'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState } from '../../store'\nimport { IWallet, IEosTxFormValues } from '../../store/wallets/types'\nimport { createEosTransfer } from '../../store/transport/actions'\nimport { priceGet } from '../../store/price/actions'\nimport styled from 'react-emotion'\n\ninterface IPropsFromState {\n  wallet: IWallet\n  price: number\n}\n\ninterface IPropsFromDispatch {\n  createTx: typeof createEosTransfer\n  priceGet: typeof priceGet\n}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch\n\nclass CreateTxPage extends React.Component<AllProps, {}> {\n  componentDidMount() {\n    this.props.priceGet()\n  }\n\n  updatePrice = async (e: React.ChangeEvent<HTMLInputElement>, form: any) => {\n    const { name, value } = e.target\n\n    form.setFieldValue(name, value)\n    if (name === 'amount') {\n      form.setFieldValue('price', parseFloat(value) * this.props.price)\n    } else {\n      form.setFieldValue('amount', parseFloat(value) / this.props.price)\n    }\n  }\n\n  render() {\n    const { wallet, createTx } = this.props\n    return (\n      <React.Fragment>\n        <Row>\n          <H1>Send {wallet.blockchain}</H1>\n          <ButtonClose />\n        </Row>\n        <Hr />\n        <Formik\n          initialValues={{ to: '', memo: '', amount: 0 }}\n          onSubmit={(values: IEosTxFormValues) => createTx(values)}\n          render={(formikBag: FormikProps<IEosTxFormValues>) => (\n            <Form>\n              <Column>\n                <Label>To:</Label>\n                <Field\n                  name=\"to\"\n                  render={({ field, form }: FieldProps<IEosTxFormValues>) => (\n                    <TextInput type=\"text\" placeholder=\"Address\" {...field} />\n                  )}\n                />\n                <RowMargined>\n                  <Column>\n                    <Label>Enter amount:</Label>\n                    <Row>\n                      <LabelAtop label={wallet.blockchain}>\n                        <Field\n                          name=\"amount\"\n                          render={({\n                            field,\n                            form,\n                          }: FieldProps<IEosTxFormValues>) => (\n                            <TextInput\n                              type=\"number\"\n                              min=\"0\"\n                              name=\"amount\"\n                              value={field.value}\n                              onChange={e => this.updatePrice(e, form)}\n                            />\n                          )}\n                        />\n                      </LabelAtop>\n                      <img src=\"/icon-change.svg\" />\n                      <LabelAtop label=\"usd\">\n                        <Field\n                          name=\"price\"\n                          render={({\n                            field,\n                            form,\n                          }: FieldProps<IEosTxFormValues>) => (\n                            <TextInput\n                              type=\"number\"\n                              name=\"price\"\n                              value={field.value}\n                              onChange={e => this.updatePrice(e, form)}\n                            />\n                          )}\n                        />\n                      </LabelAtop>\n                    </Row>\n                  </Column>\n                </RowMargined>\n                <RowMargined>\n                  <Column>\n                    <Label>Description:</Label>\n                    <Field\n                      name=\"memo\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEosTxFormValues>) => (\n                        <TextArea {...field} />\n                      )}\n                    />\n                  </Column>\n                </RowMargined>\n                <ButtonBase type=\"submit\">Continue</ButtonBase>\n              </Column>\n            </Form>\n          )}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({ wallets, price }: IApplicationState) => ({\n  wallet: wallets.item,\n  price: price.eos,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  createTx: (data: IEosTxFormValues) => dispatch(createEosTransfer(data)),\n  priceGet: () => dispatch(priceGet()),\n})\n\nexport const CreateEosTx = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateTxPage as any)\n\nconst RowMargined = styled(Row)({\n  margin: '1rem 0',\n})\n","import * as React from 'react'\nimport { connect } from 'react-redux'\n\nimport { IApplicationState } from '../../store'\nimport { IWallet } from '../../store/wallets/types'\nimport { CreateEthTx } from './eth'\nimport { CreateEosTx } from './eos'\n\ninterface IPropsFromState {\n  wallet: IWallet\n}\n\nconst CreateTxPage: React.SFC<IPropsFromState> = ({ wallet }) => {\n  return (\n    <React.Fragment>\n      {wallet.blockchain === 'eth' && <CreateEthTx />}\n      {wallet.blockchain === 'eos' && <CreateEosTx />}\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  wallet: wallets.item,\n})\n\nexport const CreateTx = connect(\n  mapStateToProps,\n  null\n)(CreateTxPage)\n","import * as React from 'react'\nimport { QrLogin } from '../components/organisms/QrLogin'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState, IConnectedReduxProps } from '../store'\nimport { sendTransaction } from '../store/transport/actions'\nimport { call as prepareCall } from '../helpers/webrtc/jsonrpc'\nimport { IHostCommandU } from '../helpers/webrtc/hostproto'\n\ninterface IPropsFromState {\n  command: IHostCommandU\n}\n\ninterface IPropsFromDispatch {\n  sendTx: typeof sendTransaction\n}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch & IConnectedReduxProps\n\nconst SignPage: React.SFC<AllProps> = ({ command, sendTx }) => {\n  let scaned = false\n  const value = prepareCall(command.method, command.id, command.params, true)\n  const handleScan = (result: string) => {\n    if (!scaned) {\n      scaned = true\n      sendTx(result)\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <QrLogin\n        title={'Sign Transaction By Mobile'}\n        value={value || ''}\n        onScan={handleScan}\n      />\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  command: wallets.sendingTxData.command!,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  sendTx: (data: string) => dispatch(sendTransaction(data)),\n})\n\nexport const Sign = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignPage as any)\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState, IConnectedReduxProps } from '../store'\nimport { Row, H2, ButtonClose, H1, Hr } from '../components/atoms'\nimport styled from 'react-emotion'\n\ninterface IPropsFromState {\n  status: string\n}\n\ninterface IPropsFromDispatch {}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch & IConnectedReduxProps\n\nconst StatusPage: React.SFC<AllProps> = ({ status }) => (\n  <React.Fragment>\n    {status}\n    <Row>\n      <H1>Tx sent result</H1>\n      <ButtonClose />\n    </Row>\n    <Hr />\n    <LoadingText>Status : {status}</LoadingText>\n  </React.Fragment>\n)\n\nconst mapStateToProps = ({ webrtc }: IApplicationState) => ({\n  status: webrtc.status,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({})\n\nexport const Status = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StatusPage)\n\nconst LoadingText = styled(H2)`\n  &:after {\n    content: ' .';\n    animation: dots 1s steps(5, end) infinite;\n  }\n\n  @keyframes dots {\n    0%,\n    20% {\n      color: rgba(0, 0, 0, 0);\n      text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);\n    }\n    40% {\n      color: black;\n      text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);\n    }\n    60% {\n      text-shadow: 0.25em 0 0 black, 0.5em 0 0 rgba(0, 0, 0, 0);\n    }\n    80%,\n    100% {\n      text-shadow: 0.25em 0 0 black, 0.5em 0 0 black;\n    }\n  }\n`\n","import { H1, H2, Row, ButtonClose, Hr } from '../components/atoms'\nimport styled from 'react-emotion'\nimport * as React from 'react'\nimport { connect } from 'react-redux'\nimport { IApplicationState, IConnectedReduxProps } from '../store'\nimport { ISendingTxData, IWalletBase, IWallet } from '../store/wallets/types'\nimport { getBcNetByChainId } from '../helpers/blockchains'\n\ninterface IPropsFromState {\n  sendingData: ISendingTxData\n  wallet: IWalletBase\n}\n\ntype AllProps = IPropsFromState & IConnectedReduxProps\n\nconst getExplrUrl = (wallet: IWallet, hash: string | undefined) => {\n  return `${\n    getBcNetByChainId(wallet.blockchain, wallet.chainId as string).explorerUrl\n  }/tx/${hash}`\n}\n\nconst TxViewPage: React.SFC<AllProps> = ({\n  sendingData: { formData, hash, error },\n  wallet,\n}) => {\n  return (\n    <React.Fragment>\n      <Row>\n        <H1>Tx sent result</H1>\n        <ButtonClose />\n      </Row>\n      <Hr />\n      {error ? (\n        <H2>Error : {error}</H2>\n      ) : (\n        <div>\n          <H2>To : {formData!.to}</H2>\n          <a target=\"_blank\" href={getExplrUrl(wallet, hash)}>\n            {hash}\n          </a>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  sendingData: wallets.sendingTxData,\n  wallet: wallets.item,\n})\n\nexport const TxView = connect(mapStateToProps)(TxViewPage)\n\nexport const Container = styled('main')({\n  alignItems: 'center',\n  background: '#f1faee',\n  display: 'flex',\n  justifyContent: 'center',\n  minHeight: 'calc(100vh - 8rem - 4vh)',\n  width: '100vw',\n})\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\n\nimport { createEthContract } from '../../store/transport/actions'\nimport { IEthContractFormValues } from '../../store/wallets/types'\n\nimport {\n  Formik,\n  FormikProps,\n  Form,\n  Field,\n  FieldProps,\n  FieldArray,\n  ArrayHelpers,\n} from 'formik'\n\nimport {\n  Column,\n  Label,\n  TextInput,\n  RangeInput,\n  ButtonBase,\n  Row,\n  Wrap,\n  SelectOptions,\n  H1,\n  Hr,\n} from '../../components/atoms'\nimport {\n  getPublicMethodNames,\n  IAbiEntry,\n  getArguments,\n  IAbiArgument,\n} from '../../helpers/eth/eth-contracts'\n\ninterface IPropsFromDispatch {\n  createTx: typeof createEthContract\n}\n\ninterface IStateProps {\n  publicMethodNames: string[]\n  methodArgs: IAbiArgument[]\n}\n\ntype AllProps = IPropsFromDispatch\n\nclass CreateEthContractPage extends React.Component<AllProps, IStateProps> {\n  constructor(props: AllProps) {\n    super(props)\n\n    this.state = {\n      publicMethodNames: [],\n      methodArgs: [],\n    }\n  }\n\n  handleOnChangeAbi = async (\n    e: React.ChangeEvent<HTMLInputElement>,\n    form: any\n  ) => {\n    if (!e.target.files) {\n      return\n    }\n\n    let file = e.target.files[0]\n    const reader = new FileReader()\n\n    reader.readAsText(file)\n    const result = (await new Promise(resolve => {\n      reader.onload = () => {\n        resolve(JSON.parse(reader.result as string))\n      }\n    })) as IAbiEntry[]\n\n    form.setFieldValue('abi', result)\n\n    const publicMethodNames = getPublicMethodNames(result)\n    this.setState({ publicMethodNames })\n  }\n\n  render() {\n    const { publicMethodNames, methodArgs } = this.state\n    const { createTx } = this.props\n    return (\n      <React.Fragment>\n        <Formik\n          initialValues={{\n            to: '',\n            abi: [],\n            method: '',\n            gasPrice: '5',\n            gasLimit: '300000',\n            args: [],\n          }}\n          onSubmit={(values: IEthContractFormValues) => createTx(values)}\n          render={(formikBag: FormikProps<IEthContractFormValues>) => (\n            <Form style={{ width: 600 }}>\n              <Column>\n                <Row>\n                  <H1>Call Contract ETH</H1>\n                </Row>\n                <Hr />\n                <Row>\n                  <Column style={{ flexBasis: '65%', marginRight: '5%' }}>\n                    <Label>Address:</Label>\n                    <Field\n                      name=\"to\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEthContractFormValues>) => (\n                        <TextInput\n                          type=\"text\"\n                          placeholder=\"Address\"\n                          {...field}\n                        />\n                      )}\n                    />\n                  </Column>\n                  <Column style={{ flexBasis: '30%' }}>\n                    <Label>Select from computer:</Label>\n                    <div style={{ flexBasis: '30%', position: 'relative' }}>\n                      <ButtonBase>Upload ABI</ButtonBase>\n                      <Field\n                        name=\"abi\"\n                        render={({\n                          field,\n                          form,\n                        }: FieldProps<IEthContractFormValues>) => (\n                          <TextInput\n                            type=\"file\"\n                            name={field.name}\n                            onBlur={field.onBlur}\n                            onChange={e => this.handleOnChangeAbi(e, form)}\n                            style={{\n                              position: 'absolute',\n                              left: 0,\n                              top: 0,\n                              opacity: 0,\n                            }}\n                          />\n                        )}\n                      />\n                    </div>\n                    <Wrap vertical={1} />\n                  </Column>\n                </Row>\n                <Row>\n                  <Column style={{ flexBasis: '65%', marginRight: '5%' }}>\n                    <Label>Method:</Label>\n                    <Field\n                      name=\"method\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEthContractFormValues>) => (\n                        <SelectOptions\n                          {...field}\n                          onChange={(e: any) => {\n                            form.setFieldValue('method', e.target.value)\n                            const args = getArguments(\n                              form.values.abi,\n                              e.target.value\n                            )\n                            form.setFieldValue(\n                              'args',\n                              new Array(args.length).fill('')\n                            )\n                            this.setState({ methodArgs: args })\n                          }}\n                        >\n                          <option value=\"\">Select method</option>\n                          {publicMethodNames.map(item => (\n                            <option key={item} value={item}>\n                              {item}\n                            </option>\n                          ))}\n                        </SelectOptions>\n                      )}\n                    />\n                    <Wrap vertical={1} />\n                    <FieldArray\n                      name=\"args\"\n                      render={({\n                        form,\n                      }: ArrayHelpers & {\n                        form: FormikProps<IEthContractFormValues>\n                      }) =>\n                        form.values.args &&\n                        form.values.args.length > 0 && (\n                          <React.Fragment>\n                            <Label>Parameters:</Label>\n                            {form.values.args.map((arg, index: number) => (\n                              <Field\n                                key={index}\n                                name={`args[${index}`}\n                                render={({\n                                  field,\n                                }: FieldProps<IEthContractFormValues>) => (\n                                  <TextInput\n                                    type=\"text\"\n                                    placeholder={methodArgs[index].name}\n                                    {...field}\n                                  />\n                                )}\n                              />\n                            ))}\n                          </React.Fragment>\n                        )\n                      }\n                    />\n                  </Column>\n                  <Column style={{ flexBasis: '30%', textAlign: 'left' }}>\n                    <Wrap horizontal={0}>\n                      <Label>Estimated GAS: {formikBag.values.gasLimit}</Label>\n                      <Wrap vertical={1} />\n                      <Label>GAS price: {formikBag.values.gasPrice} GWEI</Label>\n                      <Field\n                        name=\"gasPrice\"\n                        render={({\n                          field,\n                          form,\n                        }: FieldProps<IEthContractFormValues>) => (\n                          <RangeInput\n                            type=\"range\"\n                            placeholder=\"Address\"\n                            {...field}\n                            min=\"1\"\n                            max=\"7\"\n                          />\n                        )}\n                      />\n                    </Wrap>\n                  </Column>\n                </Row>\n                <ButtonBase type=\"submit\">Continue</ButtonBase>\n              </Column>\n            </Form>\n          )}\n        />\n      </React.Fragment>\n    )\n  }\n}\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  createTx: (data: any) => dispatch(createEthContract(data)),\n})\n\nexport const CallEthContract = connect(\n  null,\n  mapDispatchToProps\n)(CreateEthContractPage)\n","export const formToJson = (form: any) => {\n  const data = new FormData(form);\n  const object = {};\n\n  data.forEach((value, key) => {\n    if (object[key]) {\n      if (Array.isArray(object[key])) {\n        object[key].push(value);\n      } else {\n        object[key] = [object[key], value];\n      }\n    } else {\n      object[key] = value;\n    }\n  });\n\n  return object;\n};","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport styled from 'react-emotion'\nimport { css } from 'emotion'\nimport { createEosContract } from '../../store/transport/actions'\nimport { IEosContractFormValues, IWalletEos } from '../../store/wallets/types'\nimport {\n  H2,\n  H3,\n  Column,\n  Label,\n  TextInput,\n  ButtonBase,\n  Row,\n  SelectOptions,\n} from '../../components/atoms'\n\nimport { getEos, EosContract } from '../../helpers/eos'\nimport { formToJson } from '../../helpers/func'\nimport { IApplicationState } from '../../store'\n\nconst Error = styled('div')`\n  margin-top: 10px;\n  font-weight: bold;\n`\n\nconst styles = {\n  offtop: css`\n    margin-top: 25px;\n  `,\n  select: css`\n    padding: 0.8rem 1rem;\n  `,\n}\n\ninterface IPropsFromDispatch {\n  createTx: typeof createEosContract\n  wallet: IWalletEos\n}\n\ninterface IStateProps {\n  address: string\n  contract: EosContract | null\n  action: string\n  error: string\n}\n\ntype AllProps = IPropsFromDispatch\n\nclass CreateEosContractPage extends React.Component<AllProps, IStateProps> {\n  constructor(props: AllProps) {\n    super(props)\n\n    this.state = {\n      address: '',\n      contract: null,\n      action: '',\n      error: '',\n    }\n  }\n\n  handleChangeAddress = async (e: any) => {\n    const value = e.target.value\n\n    this.setState({\n      address: value,\n    })\n  }\n\n  handleSubmit = async (e: any) => {\n    e.preventDefault()\n\n    try {\n      const eos = getEos(this.props.wallet)\n      const contract = new EosContract(eos)\n\n      if (await contract.assignContract(this.state.address)) {\n        this.setState({\n          contract,\n        })\n      }\n    } catch (e) {\n      this.setState({\n        error: 'Contract not found',\n      })\n    }\n  }\n\n  handleConfirm = (e: any) => {\n    e.preventDefault()\n\n    const data = formToJson(e.target)\n    this.props.createTx({\n      to: this.state.address,\n      method: this.state.action,\n      data,\n      abi: this.state.contract!.getMethodAbi(this.state.action),\n    })\n  }\n\n  handleMethodSelect = (e: any) => {\n    const value = e.target.value\n    this.setState({\n      action: value,\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {!this.state.contract && (\n          <form onSubmit={this.handleSubmit}>\n            <H2>Call Contract EOS</H2>\n            <Column>\n              <Row>\n                <Column style={{ flexBasis: '100%', marginRight: '0%' }}>\n                  <TextInput\n                    type=\"text\"\n                    placeholder=\"contract name\"\n                    value={this.state.address}\n                    onChange={this.handleChangeAddress}\n                  />\n                </Column>\n              </Row>\n              <Row>{this.state.error && <Error>{this.state.error}</Error>}</Row>\n              <Column\n                style={{ width: '40%', marginLeft: '30%', marginTop: '50px' }}\n              >\n                <ButtonBase type=\"submit\">Find contract</ButtonBase>\n              </Column>\n            </Column>\n          </form>\n        )}\n        {this.state.contract && (\n          <React.Fragment>\n            <H2>Call Contract EOS</H2>\n            <H3>{this.state.address}</H3>\n            <Row className={styles.offtop}>\n              <Column>\n                <Label>Contract method:</Label>\n                <SelectOptions\n                  onChange={this.handleMethodSelect}\n                  name=\"method\"\n                  className={styles.select}\n                >\n                  <option value=\"\">Select method</option>\n                  {this.state.contract.getActions().map((item: any) => (\n                    <option key={item.type} value={item.type}>\n                      {item.name}\n                    </option>\n                  ))}\n                </SelectOptions>\n              </Column>\n            </Row>\n            <form onSubmit={this.handleConfirm}>\n              {this.state.action && (\n                <React.Fragment>\n                  <H3 className={styles.offtop}>Parameters:</H3>\n                  {Object.entries(\n                    this.state.contract.getMethodFields(this.state.action)\n                  ).map((item: any[]) => {\n                    return (\n                      <Row key={item[0]}>\n                        <Column>\n                          <Label>{item[0]}:</Label>\n                          <TextInput\n                            name={item[0]}\n                            type=\"text\"\n                            placeholder={item[0]}\n                          />\n                        </Column>\n                      </Row>\n                    )\n                  })}\n                </React.Fragment>\n              )}\n              {this.state.action && (\n                <ButtonBase type=\"submit\" className={styles.offtop}>\n                  Sign\n                </ButtonBase>\n              )}\n            </form>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  wallet: wallets.item,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  createTx: (data: IEosContractFormValues) => dispatch(createEosContract(data)),\n})\n\nexport const CallEosContract = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateEosContractPage)\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { IApplicationState } from '../../store'\n\nimport { IWalletBase } from '../../store/wallets/types'\n\nimport { CallEthContract } from './eth'\nimport { CallEosContract } from './eos'\n\ninterface IPropsFromDispatch {\n  wallet: IWalletBase\n}\n\ntype AllProps = IPropsFromDispatch\n\nclass ContractPage extends React.Component<AllProps, {}> {\n  render() {\n    const { wallet } = this.props\n\n    switch (wallet.blockchain) {\n      case 'eth':\n        return <CallEthContract />\n      case 'eos':\n        return <CallEosContract />\n    }\n    return null\n  }\n}\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  wallet: wallets.item,\n})\n\nexport const CallContract = connect(mapStateToProps)(ContractPage)\n","import * as React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport { DefaultLayout, MainLayout, ModalLayout } from './components/layouts'\nimport {\n  Login,\n  Home,\n  Wallet,\n  CreateTx,\n  Sign,\n  Status,\n  TxView,\n  CallContract,\n} from './pages'\n\nexport const Routes: React.SFC = () => {\n  return (\n    <div>\n      <Switch>\n        <DefaultLayout exact path=\"/\" component={Home} />>\n        <DefaultLayout path=\"/login\" component={Login} />\n        <MainLayout>\n          <Route exact path=\"/wallets/:id\" component={Wallet} />\n          <ModalLayout path=\"/wallets/:id/tx/create\" component={CreateTx} />\n          <ModalLayout path=\"/wallets/:id/contract/create\" component={CallContract} />\n          <ModalLayout path=\"/wallets/:id/tx/sign\" component={Sign} />\n          <ModalLayout path=\"/tx/:id\" component={TxView} />\n          <ModalLayout path=\"/status\" component={Status} />        \n        </MainLayout>\n      </Switch>\n    </div>\n  )\n}\n","import { ITheme } from '../utils/styled'\n\n//for example\nexport const theme: ITheme = {\n  colors: {\n    background: '#000000',\n    body: '#2e2e2c',\n    black: '#000000',\n    white: '#2e2e2c',\n  },\n  fontSizes: {\n    h1: '2.441rem',\n    h2: '1.953rem',\n    h3: '1.563rem',\n    h4: '1.25rem',\n  },\n  breakpoints: {\n    xs: '0px',\n    sm: '576px',\n    md: '768px',\n    lg: '992px',\n    xl: '1200px',\n  },\n  widths: {\n    md: '720px',\n    lg: '960px',\n    xl: '1140px',\n  },\n}\n","import { css } from 'react-emotion'\n\nexport default css`\n  /*! modern-normalize | MIT License | https://github.com/sindresorhus/modern-normalize */\n  /* Document\n    ========================================================================== */\n  /**\n  * Use a better box model (opinionated).\n  */\n  html {\n    box-sizing: border-box;\n  }\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n  /**\n  * Use a more readable tab size (opinionated).\n  */\n  :root {\n    -moz-tab-size: 4;\n    tab-size: 4;\n  }\n  /**\n  * Correct the line height in all browsers.\n  */\n  html {\n    line-height: 1.15;\n  }\n  /* Sections\n    ========================================================================== */\n  /**\n  * Remove the margin in all browsers.\n  */\n  body {\n    margin: 0;\n  }\n  /**\n  * Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  */\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n      Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\n      'Segoe UI Symbol';\n  }\n  /**\n  * Correct the font size and margin on \\`h1\\` elements within \\`section\\` and\n  * \\`article\\` contexts in Chrome, Firefox, and Safari.\n  */\n  h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n  }\n  /* Grouping content\n    ========================================================================== */\n  /**\n  * Add the correct height in Firefox.\n  */\n  hr {\n    height: 0;\n  }\n  /* Text-level semantics\n    ========================================================================== */\n  /**\n  * Add the correct text decoration in Chrome, Edge, and Safari.\n  */\n  abbr[title] {\n    text-decoration: underline dotted;\n  }\n  /**\n  * Add the correct font weight in Chrome, Edge, and Safari.\n  */\n  b,\n  strong {\n    font-weight: bolder;\n  }\n  /**\n  * 1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  * 2. Correct the odd \\`em\\` font sizing in all browsers.\n  */\n  code,\n  kbd,\n  samp,\n  pre {\n    font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier,\n      monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n  /**\n  * Add the correct font size in all browsers.\n  */\n  small {\n    font-size: 80%;\n  }\n  /**\n  * Prevent \\`sub\\` and \\`sup\\` elements from affecting the line height in\n  * all browsers.\n  */\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  sup {\n    top: -0.5em;\n  }\n  /* Forms\n    ========================================================================== */\n  /**\n  * 1. Change the font styles in all browsers.\n  * 2. Remove the margin in Firefox and Safari.\n  */\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 1 */\n    line-height: 1.15; /* 1 */\n    margin: 0; /* 2 */\n  }\n  /**\n  * Remove the inheritance of text transform in Edge and Firefox.\n  * 1. Remove the inheritance of text transform in Firefox.\n  */\n  button,\n  select {\n    /* 1 */\n    text-transform: none;\n  }\n  /**\n  * Correct the inability to style clickable types in iOS and Safari.\n  */\n  button,\n  [type='button'],\n  [type='reset'],\n  [type='submit'] {\n    -webkit-appearance: button;\n  }\n  /**\n  * Remove the inner border and padding in Firefox.\n  */\n  button::-moz-focus-inner,\n  [type='button']::-moz-focus-inner,\n  [type='reset']::-moz-focus-inner,\n  [type='submit']::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n  /**\n  * Restore the focus styles unset by the previous rule.\n  */\n  button:-moz-focusring,\n  [type='button']:-moz-focusring,\n  [type='reset']:-moz-focusring,\n  [type='submit']:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n  /**\n  * Correct the padding in Firefox.\n  */\n  fieldset {\n    padding: 0.35em 0.75em 0.625em;\n  }\n  /**\n  * Remove the padding so developers are not caught out when they zero out\n  *    \\`fieldset\\` elements in all browsers.\n  */\n  legend {\n    padding: 0;\n  }\n  /**\n  * Add the correct vertical alignment in Chrome and Firefox.\n  */\n  progress {\n    vertical-align: baseline;\n  }\n  /**\n  * Correct the cursor style of increment and decrement buttons in Chrome.\n  */\n  [type='number']::-webkit-inner-spin-button,\n  [type='number']::-webkit-outer-spin-button {\n    height: auto;\n  }\n  /**\n  * 1. Correct the odd appearance in Chrome and Safari.\n  * 2. Correct the outline style in Safari.\n  */\n  [type='search'] {\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n  }\n  /**\n  * Remove the inner padding in Chrome and Safari on macOS.\n  */\n  [type='search']::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  /**\n  * 1. Correct the inability to style clickable types in iOS and Safari.\n  * 2. Change font properties to \\`inherit\\` in Safari.\n  */\n  ::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n  }\n  /* Interactive\n    ========================================================================== */\n  /*\n  * Add the correct display in Edge and Firefox.\n  */\n  details {\n    display: block;\n  }\n  /*\n  * Add the correct display in all browsers.\n  */\n  summary {\n    display: list-item;\n  }\n`\n","import { css } from 'react-emotion'\n\nexport default css`\n  @font-face {\n    font-family: 'GothamPro';\n    src: url(GothamPro.woff);\n  }\n  html,\n  body {\n    font-family: 'GothamPro', 'Lato', 'Arial', sans-serif;\n    margin: 0;\n  }\n  #root {\n    height: 100%;\n  }\n  input[type=range] {\n    -webkit-appearance: none;\n    margin: 18px 0;\n    width: 100%;\n  }\n  input[type=range]:focus {\n    outline: none;\n  }\n  input[type=range]::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 3px;\n    cursor: pointer;\n    animate: 0.2s;\n    box-shadow: none;\n    background: #736C82;\n    border-radius: 1.3px;\n    border: 0;\n  }\n  input[type=range]::-webkit-slider-thumb {\n    box-shadow: none;\n    border: 0;\n    height: 16px;\n    width: 16px;\n    border-radius: 50%;\n    background: #00BCF9;\n    cursor: pointer;\n    -webkit-appearance: none;\n    margin-top: -6px;\n  }\n  input[type=range]:focus::-webkit-slider-runnable-track {\n    background: #736C82;\n  }\n  input[type=range]::-moz-range-track {\n    width: 100%;\n    height: 8.4px;\n    cursor: pointer;\n    animate: 0.2s;\n    box-shadow: none;\n    background: #736C82;\n    border-radius: 1.3px;\n    border: 0;\n  }\n  input[type=range]::-moz-range-thumb {\n    box-shadow: none;\n    border: 0;\n    height: 36px;\n    width: 16px;\n    border-radius: 3px;\n    background: #00BCF9;\n    cursor: pointer;\n  }\n`\n","import { injectGlobal } from 'react-emotion'\nimport normalize from './normalize'\nimport globals from './globals'\n\n// tslint:disable-next-line:no-unused-expression\ninjectGlobal`\n  ${normalize}\n  ${globals}\n`\n","import * as React from 'react'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { Store } from 'redux'\nimport { History } from 'history'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport { Routes } from './routes'\nimport { IApplicationState } from './store'\nimport { theme } from './styles/theme'\nimport './styles'\n\n\ninterface IOwnProps {\n  store: Store<IApplicationState>\n  history: History\n}\n\ntype AllProps = IOwnProps\n\nexport class App extends React.Component<AllProps> {\n  public render() {\n    const { store, history } = this.props\n\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <ThemeProvider theme={theme}>\n            <Routes />\n          </ThemeProvider>\n        </ConnectedRouter>\n      </Provider>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { IWallet } from \"../store/wallets/types\"\n\nimport { getInfo as ethInfo } from './eth/eth'\nimport { getInfo as eosInfo } from './eos'\n\nexport const getBcInfo = async (wallet: IWallet) => {\n  if (wallet.blockchain === 'eth') {\n    return ethInfo(wallet)\n  }\n\n  if (wallet.blockchain === 'eos') {\n    return eosInfo(wallet)\n      .then(result => ({ txs: result.actions }))\n  }\n\n  return null\n}","import { all, call, fork, put, takeEvery } from 'redux-saga/effects'\nimport { WalletsActionTypes } from './types'\nimport { fetchError, fetchSuccess, addWallet, fetchRequest } from './actions'\nimport { getBcInfo } from '../../helpers/common'\n\nfunction* handleSetWallet(action: ReturnType<typeof addWallet>) {\n  try {\n    let wallet = action.payload\n    // start fetch request for update wallet data\n    yield put(fetchRequest())\n    // fetch wallets txs history\n    const res = yield call(getBcInfo, wallet)\n\n    // added txs history\n    wallet = { ...wallet, ...res }\n\n    if (res.error) {\n      yield put(fetchError(res.error))\n    } else {\n      yield put(fetchSuccess(wallet))\n    }\n  } catch (err) {\n    if (err instanceof Error) {\n      yield put(fetchError(err.stack!))\n    } else {\n      yield put(fetchError('An unknown error occured.'))\n    }\n  }\n}\n\nfunction* watchFetchRequest() {\n  yield takeEvery(WalletsActionTypes.ADD_WALLET, handleSetWallet)\n}\n\nfunction* walletsSaga() {\n  yield all([fork(watchFetchRequest)])\n}\n\nexport default walletsSaga\n","export enum AuthActionTypes {\n  AUTH_SUCCESS = '@@auth/AUTH_SUCCESS',\n  AUTH_ERROR = '@@auth/AUTH_ERROR',\n}\n\nexport interface IAuthState {\n  readonly isAuth: boolean\n}\n","import { Reducer } from 'redux'\nimport { ActionType } from 'typesafe-actions'\nimport * as wallets from './actions'\nimport {\n  IWalletsState,\n  WalletsActionTypes,\n  IWalletEth,\n  IWalletEos,\n  IEthTxFormValues,\n} from './types'\nimport { IHostCommandU } from '../../helpers/webrtc/hostproto'\n\nconst initialState: IWalletsState = {\n  item: {} as IWalletEth | IWalletEos,\n  items: [],\n  sendingTxData: {\n    command: {} as IHostCommandU,\n    hash: '',\n    formData: {} as IEthTxFormValues,\n    error: '',\n  },\n  errors: undefined,\n  loading: false,\n}\n\nexport type WalletsAction = ActionType<typeof wallets>\n\nconst reducer: Reducer<IWalletsState, WalletsAction> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case WalletsActionTypes.FETCH_REQUEST: {\n      return { ...state, loading: true }\n    }\n    case WalletsActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, item: action.payload }\n    }\n    case WalletsActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload }\n    }\n    case WalletsActionTypes.ADD_WALLET: {\n      return { ...state, item: action.payload }\n    }\n    case WalletsActionTypes.SET_SENDING_TX_DATA: {\n      return {\n        ...state,\n        sendingTxData: { ...state.sendingTxData, ...action.payload },\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as walletsReducer }\n","import { Reducer } from 'redux'\nimport { IAuthState, AuthActionTypes } from './types'\nimport { ActionType } from 'typesafe-actions'\nimport * as auth from './actions'\n\nconst initialState: IAuthState = {\n  isAuth: false,\n}\n\nexport type AuthAction = ActionType<typeof auth>\n\nconst reducer: Reducer<IAuthState, AuthAction> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case AuthActionTypes.AUTH_SUCCESS: {\n      return { ...state, isAuth: true }\n    }\n    case AuthActionTypes.AUTH_ERROR: {\n      return { ...state, isAuth: false }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as authReducer }\n","export default function parseMessage(data: string) {\n  const result = data\n    .replace(/^([^|]*)\\|(.*\\D.*)\\|(.*)$/, '$1|\"$2\"|$3')\n    .replace(/^([^|]+)\\|([^|]*)\\|(.*)$/, '{\"method\":\"$1\",\"id\":$2,\"params\":$3}')\n    .replace(/^\\|([^|]*)\\|(.*)$/, '{\"id\":$1,\"result\":$2}')\n  return parseJsonString(result)\n}\n\nconst parseJsonString = (str: string) => {\n  try {\n    return JSON.parse(str)\n  } catch (err) {\n    return Error(err)\n  }\n}\n","import { RTCHelper } from '../../helpers/webrtc/webrtc'\nimport { IHostCommandU } from '../../helpers/webrtc/hostproto'\n\nexport enum WebrtcActionTypes {\n  CONNECTION_OPEN = '@@Webrtc/CONNECTION_OPEN',\n  CONNECTION_CLOSE = '@@Webrtc/CONNECTION_CLOSE',\n  SET_CONNECTION_SID = '@@Webrtc/SET_CONNECTION_SID',\n  SET_STATUS = '@@Webrtc/SET_STATUS',\n  SEND_COMMAND = '@@Webrtc/SEND_COMMAND',\n}\n\nexport interface IWebrtcState {\n  readonly rtc: RTCHelper\n  readonly connected: boolean\n  readonly status: string\n  pushedMessages: IHostCommandU[]\n}\n","import { IWalletBase } from '../store/wallets/types'\nimport { sendTx as sendEth } from './eth/eth'\nimport { sendTx as sendEos } from './eos'\n\nexport const sendTx = (tx: string, wallet: IWalletBase) => {\n  switch (wallet.blockchain) {\n    case 'eth':\n      return sendEth(wallet, tx)\n    case 'eos':\n      return sendEos(wallet, tx)\n\n    default:\n      return null\n  }\n}\n","import { action } from 'typesafe-actions'\nimport { AuthActionTypes } from './types'\n\nexport const authSuccess = () => action(AuthActionTypes.AUTH_SUCCESS)\nexport const authError = () => action(AuthActionTypes.AUTH_ERROR)\n","import { action } from 'typesafe-actions'\nimport { WebrtcActionTypes } from './types'\nimport { IHostCommandU } from '../../helpers/webrtc/hostproto'\n\nexport const connectionReady = () =>\n  action(WebrtcActionTypes.CONNECTION_OPEN)\n\nexport const connectionClosing = () =>\n  action(WebrtcActionTypes.CONNECTION_CLOSE)\n\nexport const setConnectionSid = () =>\n  action(WebrtcActionTypes.SET_CONNECTION_SID)\n\nexport const setStatus = (status: string) =>\n  action(WebrtcActionTypes.SET_STATUS, status)\n\nexport const sendCommand = (command: IHostCommandU) =>\n  action(WebrtcActionTypes.SEND_COMMAND, command)\n","import { all, fork, put, takeEvery, select } from 'redux-saga/effects'\nimport { login, sendTransaction, remoteSignTransferTx, remoteSignContractTx } from './actions'\nimport { TransportActionTypes } from './types'\nimport { IApplicationState } from '..'\nimport { push } from 'connected-react-router'\nimport { getEthTransferTx, getEosTransferTx, getEthContractParams, getEosContractParams } from '../../helpers/jsonrps'\nimport parseMessage from '../../utils/parseMessage'\nimport { sendTx } from '../../helpers/sendtx'\nimport { setSendingTxData, fetchSuccess } from '../wallets/actions'\nimport { authSuccess } from '../auth/actions'\nimport { sendCommand } from '../webrtc/actions'\nimport { IWallet } from '../wallets/types'\nimport { PayloadAction } from 'typesafe-actions/dist/types'\n\nfunction* handleLogin(action: ReturnType<typeof login>) {\n  try {\n    // TODO: check correct message id\n    const { result: wallets } = parseMessage(action.payload)\n    const wallet = wallets[0]\n\n    // call addWallet and authSuccess after success read and parse qrcode from login page\n    yield put(authSuccess())\n    yield put(fetchSuccess(wallet))\n    yield put(push(`/wallets/${wallet.address}`))\n  } catch (err) {\n    console.log('handleLogin error', err)\n  }\n}\n\nfunction createContractHandler<TFormData, TWallet extends IWallet>(getContractParams: (form: TFormData, wallet: TWallet) => Promise<unknown>)\n{\n  return function* handleCreateTransfer(action: PayloadAction<TransportActionTypes, TFormData>)\n  {\n    const wallet = yield select((state: IApplicationState) => state.wallets.item)\n    delete wallet.txs\n\n    try\n    {\n      const params = yield getContractParams(action.payload, wallet)\n      yield handleRemoteSignContract(params)\n    }\n    catch(e)\n    {\n      console.error(e)\n    }\n  }\n}\n\nfunction createTransferHandler<TFormData, TWallet extends IWallet>(getTransferTx: (form: TFormData, wallet: TWallet) => Promise<unknown>)\n{\n  return function* handleCreateTransfer(action: PayloadAction<TransportActionTypes, TFormData>)\n  {\n    const wallet = yield select((state: IApplicationState) => state.wallets.item)\n    delete wallet.txs\n\n    try\n    {\n      const tx = yield getTransferTx(action.payload, wallet)\n      yield put(remoteSignTransferTx(tx))\n    }\n    catch(e)\n    {\n      console.error(e)\n    }\n  }\n}\n\nconst handleCreateEthTransfer = createTransferHandler(getEthTransferTx)\nconst handleCreateEosTransfer = createTransferHandler(getEosTransferTx)\nconst handleCreateEthContract = createContractHandler(getEthContractParams)\nconst handleCreateEosContract = createContractHandler(getEosContractParams)\n\nfunction* handleRemoteSignTransfer(action: ReturnType<typeof remoteSignTransferTx>)\n{\n  const wallet = yield select((state: IApplicationState) => state.wallets.item)\n  \n  try\n  {\n    let cmd = { id: 3, method: 'signTransferTx', params: { tx: action.payload, wallet } }\n\n    yield put(sendCommand(cmd))\n  }\n  catch (e)\n  {\n    console.error(e)\n  }\n}\n\nfunction* handleRemoteSignContract(action: ReturnType<typeof remoteSignContractTx>)\n{\n  try\n  {\n    let cmd = { id: 4, method: 'signContractCall', params: action}\n    yield put(sendCommand(cmd))\n  }\n  catch (e)\n  {\n    console.error(e)\n  }\n}\n\n\nfunction* handleSendTx(action: ReturnType<typeof sendTransaction>) {\n  const wallet = yield select((state: IApplicationState) => state.wallets.item)\n  try {\n    const { result } = parseMessage(action.payload)\n\n    const hash = yield sendTx(result, wallet)\n\n    yield all([put(setSendingTxData({ hash })), put(push(`/tx/${hash}`))])\n  } catch (err) {\n    yield all([\n      put(setSendingTxData({ error: err.message })),\n      put(push(`/tx/error`)),\n    ])\n    console.error(err)\n  }\n}\n\nfunction* watchSendTx() {\n  yield takeEvery(TransportActionTypes.SEND_TX, handleSendTx)\n}\n\nfunction* watchCreateTx() {\n  yield takeEvery(TransportActionTypes.CREATE_ETH_TRANSFER, handleCreateEthTransfer)\n  yield takeEvery(TransportActionTypes.CREATE_EOS_TRANSFER, handleCreateEosTransfer)\n  yield takeEvery(TransportActionTypes.CREATE_ETH_CONTRACT, handleCreateEthContract)\n  yield takeEvery(TransportActionTypes.CREATE_EOS_CONTRACT, handleCreateEosContract)\n}\n\nfunction* watchRemoteSignTransfer() {\n  yield takeEvery(TransportActionTypes.REMOTE_SIGN_TRANSFER, handleRemoteSignTransfer)\n  yield takeEvery(TransportActionTypes.REMOTE_SIGN_CONTRACT, handleRemoteSignContract)\n}\n\nfunction* watchLogin() {\n  yield takeEvery(TransportActionTypes.LOGIN, handleLogin)\n}\n\nfunction* transportSaga() {\n  yield all([fork(watchLogin), fork(watchCreateTx), fork(watchSendTx), fork(watchRemoteSignTransfer)])\n}\n\nexport default transportSaga\n","export const handshakeServerUrl = `wss://duxi.io/shake` // `ws://localhost:3077`\n\nexport enum RTCCommands {\n  webrtcLogin = 1,\n  getWalletList = 2,\n  signTransferTx = 3,\n  signContractCall = 4,\n}\n","import { ActionType } from 'typesafe-actions'\nimport { Reducer } from 'redux'\nimport * as transports from './actions'\nimport { ITransportState, TransportActionTypes } from './types'\n\nconst initialState: ITransportState = {\n  qrcodeData: '',\n  lastWebrtcMsg: null,\n}\nexport type TransportsAction = ActionType<typeof transports>\n\nconst reducer: Reducer<ITransportState, TransportsAction> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case TransportActionTypes.SET_RTC_SID: {\n      return { ...state, qrcodeData: action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as transportReducer }\n","import { call, take, put, cancelled, select } from 'redux-saga/effects'\nimport { eventChannel } from 'redux-saga'\n\nimport { handshakeServerUrl } from '../../constants'\nimport { connectionReady, sendCommand } from './actions'\nimport { getWalletListCommand } from '../../helpers/jsonrps'\nimport { setRtcSid } from '../transport/actions'\nimport { IApplicationState } from '..'\nimport { RTCHelper } from '../../helpers/webrtc/webrtc'\n\nconst makeOfferRequest = (offer: string) =>\n  JSON.stringify({ jsonrpc: '2.0', id: 1, method: 'offer', params: { offer } })\n\nconst makeIceRequest = (ice: RTCIceCandidate) =>\n  JSON.stringify({ jsonrpc: '2.0', id: 2, method: 'ice', params: { ice } })\n\nconst onOpenChannel = (ws: WebSocket) =>\n  eventChannel(emit => {\n    ws.addEventListener('open', emit)\n    ws.addEventListener('error', err => emit(err))\n    return () => ws.removeEventListener('open', emit)\n  })\n\nconst onMessageChannel = (ws: WebSocket) =>\n  eventChannel(emit => {\n    ws.addEventListener('message', emit)\n    return () => ws.removeEventListener('message', emit)\n  })\n\nfunction* answerSaga(ws: WebSocket, rtc: RTCHelper, answer: string) {\n  const sendIce = (ice: RTCIceCandidate) => ws.send(makeIceRequest(ice)) // TODO: Add typings\n  rtc.candidates.map(sendIce)\n  rtc.on('ice', sendIce)\n  yield call(rtc.pushAnswer, { type: 'answer' as RTCSdpType, sdp: answer })\n  yield call(rtc.waitConnection)\n  yield put(connectionReady())\n  return ws.close()\n}\n\nexport default function* connectSaga() {\n  const rtc = yield select((state: IApplicationState) => state.webrtc.rtc)\n  const offerPromise = yield call(rtc.createOffer)\n  const ws = new WebSocket(handshakeServerUrl)\n  const openChan = onOpenChannel(ws)\n  const messageChan = onMessageChannel(ws)\n  yield take(openChan)\n\n  ws.send(makeOfferRequest(offerPromise.sdp))\n\n  while (true)\n    try {\n      const { data } = yield take(messageChan)\n      const { id, method, result, params } = JSON.parse(data.toString())\n\n      if (id === 1) yield put(setRtcSid(webrtcLogin(result.sid)))\n      if (method === 'ice') yield call(rtc.pushIceCandidate, params.ice)\n      if (method === 'answer')\n        return yield call(answerSaga, ws, rtc, params.answer)\n    } catch (err) {\n      console.log(err)\n    } finally {\n      if (yield cancelled()) {\n        openChan.close()\n        messageChan.close()\n        console.log('ws connection closed')\n        yield put(sendCommand(getWalletListCommand()))\n      }\n    }\n}\n\nexport const webrtcLogin = (sid: string) => {\n  const params = { sid, url: handshakeServerUrl }\n\n  return `webrtcLogin|1|${JSON.stringify(params)}`\n}\n","import { fork, all, take, select, call, put, takeEvery, cancel } from 'redux-saga/effects'\nimport { eventChannel, delay } from 'redux-saga'\n\nimport connectTask from './connectSaga'\nimport parseMessage from '../../utils/parseMessage'\nimport { RTCCommands } from '../../constants'\nimport { login, sendTransaction } from '../transport/actions'\nimport { WebrtcActionTypes } from './types'\nimport { IApplicationState } from '..'\nimport { setStatus, connectionClosing, sendCommand } from './actions'\nimport { call as prepareCall } from '../../helpers/webrtc/jsonrpc'\nimport { push } from 'connected-react-router';\nimport { setSendingTxData } from '../wallets/actions';\nimport { IHostCommand } from '../../helpers/webrtc/hostproto'\nimport { RTCHelper } from '../../helpers/webrtc/webrtc';\n\nfunction createDataChannel(dataChannel: RTCDataChannel) {\n  return eventChannel(emit => {\n    dataChannel.onmessage = (message: MessageEvent) => emit(message.data)\n\n    const unsubscribe = () => {\n      dataChannel.close()\n    }\n\n    return unsubscribe\n  })\n}\n\nfunction* watchDataChannel() {\n  const rtc = yield select((state: IApplicationState) => state.webrtc.rtc)\n  const channelMessage = yield call(createDataChannel, rtc.dataChannel)\n\n  while (true) {\n    const message = yield take(channelMessage)\n    const { id } = parseMessage(message)\n\n    switch (id) {\n      case RTCCommands.getWalletList:\n        yield put(login(message))\n        break\n      case RTCCommands.signTransferTx:\n        yield put(setStatus('Sending'))\n        yield put(sendTransaction(message))\n        break\n      case RTCCommands.signContractCall:\n        yield put(setStatus('Sending'))\n        yield put(sendTransaction(message))\n        break\n      default:\n        break\n    }\n  }\n}\n\nfunction* handleOpeningConnection() {\n  const [rtc, msg] = (yield select((state: IApplicationState) => [state.webrtc.rtc, state.transport.lastWebrtcMsg])) as [RTCHelper, IHostCommand<unknown[], unknown>]\n  if (msg)\n    yield put(sendCommand(msg))\n\n  while (true) {\n    yield delay(3000)\n    if (rtc.dataChannel!.readyState === 'closing') yield put(connectionClosing())\n  }\n}\n\nfunction* handleSendCommand(action: ReturnType<typeof sendCommand>) {\n  const { webrtc: {rtc, connected}, wallets:{item: wallet} } = yield select((state: IApplicationState) => state)\n  try\n  {  \n    let msg = prepareCall(action.payload.method, action.payload.id, action.payload.params, true)\n    \n    yield put(setSendingTxData({ command: action.payload, error: '', hash: '' }))\n    yield put(setStatus('Verification'))\n\n    if(connected) {\n      yield call((msg: string) => rtc.dataChannel!.send(msg), msg)\n      yield put(push('/status'))\n    } else {\n      yield put(push(`/wallets/${wallet.address}/tx/sign`))\n    }\n    \n  } catch (error)\n  {\n    console.error(error)  \n  }\n}\n\nfunction* watchActions() {\n  yield takeEvery(WebrtcActionTypes.CONNECTION_OPEN, handleOpeningConnection)\n  yield takeEvery(WebrtcActionTypes.SEND_COMMAND, handleSendCommand)\n}\n\nfunction* watchConnection() {\n  const bgConectionTask = yield fork(connectTask)\n\n  // dispose connection task\n  yield takeEvery(WebrtcActionTypes.CONNECTION_OPEN, function*() {\n    yield cancel(bgConectionTask)\n  })\n}\n\nfunction* webrtcSaga() {\n  yield all([fork(watchConnection), fork(watchDataChannel), fork(watchActions)])\n}\n\nexport default webrtcSaga\n","import { EventEmitter } from 'events'\n\nexport class RTCHelper extends EventEmitter {\n  rpc = new RTCPeerConnection()\n  candidates: RTCIceCandidate[] = []\n  dataChannel?: RTCDataChannel\n  offer?: RTCSessionDescriptionInit\n  connected = false\n  tag = ''\n\n  constructor(public name?: string) {\n    super()\n\n    if (name) this.tag = `[${name}] `\n\n    this.rpc.onicecandidate = this.onIceCandidate\n    this.rpc.ondatachannel = this.onDataChannel\n  }\n  onIceCandidate = (ev: RTCPeerConnectionIceEvent) => {\n    console.log(`${this.tag}onIceCandidate: ${JSON.stringify(ev.candidate)}`)\n    if (ev.candidate) this.candidates.push(ev.candidate)\n\n    this.emit('ice', ev.candidate)\n  }\n  onDataChannel = (ev: RTCDataChannelEvent) => {\n    console.log(`${this.tag}onDataChannel: ${JSON.stringify(ev.channel)}`)\n    this.setChannel(ev.channel)\n  }\n  onDataChannelOpen = (ev: Event) => {\n    console.log(`${this.tag}onDataChannelOpen: ${ev.type}`)\n    this.connected = true\n    this.emit('connected')\n  }\n  onMessage = (ev: MessageEvent) => {\n    console.log(`${this.tag}${ev.type}: ${ev.data}`)\n  }\n  setChannel = (c: RTCDataChannel) => {\n    this.dataChannel = c\n    this.dataChannel.onopen = this.onDataChannelOpen\n    this.dataChannel.onmessage = this.onMessage\n  }\n  waitConnection = async (): Promise<void> => {\n    if (this.connected) return Promise.resolve()\n\n    return new Promise<void>((res, rej) => this.on('connected', () => res()))\n  }\n\n  createOffer = async (): Promise<RTCSessionDescriptionInit> => {\n    console.log(`${this.tag}createOffer`)\n    this.setChannel(this.rpc.createDataChannel('chat'))\n    this.offer = await this.rpc.createOffer()\n    await this.rpc.setLocalDescription(this.offer)\n    return this.offer\n  }\n\n  pushOffer = async (\n    offer: RTCSessionDescriptionInit\n  ): Promise<RTCSessionDescriptionInit> => {\n    console.log(`${this.tag}pushOffer: ${JSON.stringify(offer)}`)\n    if (this.offer) throw new Error(\"can't push offer to already inited rtc connection!\")\n\n    await this.rpc.setRemoteDescription(offer)\n    let answer = await this.rpc.createAnswer()\n    await this.rpc.setLocalDescription(answer)\n    return answer\n  }\n\n  pushAnswer = async (answer: RTCSessionDescriptionInit) => {\n    console.log(`${this.tag}pushAnswer: ${JSON.stringify(answer)}`)\n    await this.rpc.setRemoteDescription(answer)\n  }\n  pushIceCandidate = async (\n    candidate: RTCIceCandidateInit | RTCIceCandidate\n  ) => {\n    await this.rpc.addIceCandidate(candidate)\n  }\n}\n","import { RTCHelper } from './webrtc'\nimport { JsonRpc } from './jsonrpc'\nimport { timedPromise } from './promise'\n\nlet i = 0\n\nexport function init() {\n  let rtc = new RTCHelper('webrtc')\n  let ii = i++\n\n  let jrpc = new JsonRpc(\n    msg => (console.log(`JSONRPC ${ii}: ${msg}`), rtc.dataChannel!.send(msg)),\n    (json, cb) => {\n      console.log(`ignored remote signer request:`, json)\n      cb(undefined, null)\n    }\n  )\n\n  rtc.onMessage = ev => (console.log(`webrtc jrpc incoming:`, ev), jrpc.onMessage(ev.data.toString()))\n  let connected = false\n\n  return {\n    rtc,\n    jrpc,\n    connected,\n  }\n}\nexport async function checkConnection(): Promise<boolean> {\n  if (!singleton.connected) return false\n\n  try {\n    await timedPromise(singleton.jrpc.ping(), 5000)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nlet singleton = init()\nexport let getSingleton = () => singleton\n\nexport function reset() {\n  singleton = init()\n}\n","import { ActionType } from 'typesafe-actions'\nimport * as webrtc from './actions'\nimport { Reducer } from 'redux'\nimport { IWebrtcState, WebrtcActionTypes } from './types'\nimport { getSingleton } from '../../helpers/webrtc/webrtcsingleton'\n\nconst initialState: IWebrtcState = {\n  rtc: getSingleton().rtc,\n  connected: getSingleton().connected,\n  status: '',\n  pushedMessages: [],\n}\n\nconst reducer: Reducer<IWebrtcState, ActionType<typeof webrtc>> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case WebrtcActionTypes.CONNECTION_OPEN: {\n      return { ...state, connected: true }\n    }\n    case WebrtcActionTypes.CONNECTION_CLOSE: {\n      return { ...state, connected: false }\n    }\n    case WebrtcActionTypes.SET_STATUS: {\n      return { ...state, status: action.payload }\n    }\n    case WebrtcActionTypes.SEND_COMMAND: {\n      return {\n        ...state,\n        pushedMessages: [...state.pushedMessages, action.payload],\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as webrtcReducer }\n","import axios from 'axios'\n\nenum CoinmarketcapTicker {\n  eth = '1027',\n  eos = '1765',\n}\n\nconst CoinmarketApi = (ticker: string) => \n  axios(`https://api.coinmarketcap.com/v2/ticker/${ticker}/`)\n    .then(res => res.data)\n\nexport function getEth() {\n  return CoinmarketApi(CoinmarketcapTicker.eth)\n}\n\nexport async function getEos() {\n  return CoinmarketApi(CoinmarketcapTicker.eos)\n}","import { all, call, put, fork, takeEvery } from 'redux-saga/effects'\nimport { PriceActionTypes, ICurrencyPrice } from './types'\nimport { priceGet, priceSet } from './actions'\nimport { getEth, getEos } from '../../helpers/prices'\n\nfunction* handleGetPrice(action: ReturnType<typeof priceGet>) {\n  try {\n    const res = yield all([\n      call(getEth), \n      call(getEos)\n    ])\n\n    const prices: ICurrencyPrice[] = res.map((item: any) => ({\n      symbol: item.data.symbol.toLowerCase(),\n      price: item.data.quotes.USD.price\n    }))\n\n    yield put(priceSet(prices))\n\n  } catch (err) {\n    if (err instanceof Error) {\n     console.error(err)\n    }\n  }\n}\n\nfunction* watchFetchRequest() {\n  yield takeEvery(PriceActionTypes.PRICE_GET, handleGetPrice)\n}\n\nfunction* walletsSaga() {\n  yield all([fork(watchFetchRequest)])\n}\n\nexport default walletsSaga\n","import { Reducer } from 'redux'\nimport { IPriceState, PriceActionTypes, ICurrencyPrice } from './types'\nimport { ActionType } from 'typesafe-actions'\nimport * as price from './actions'\n\nconst initialState: IPriceState = {\n  eth: 0,\n  eos: 0\n}\n\nexport type PriceAction = ActionType<typeof price>\n\nconst reducer: Reducer<IPriceState, PriceAction> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case PriceActionTypes.PRICE_SET: {\n      const prices = {}\n      action.payload.map((item: ICurrencyPrice) => prices[item.symbol] = item.price)\n\n      return {\n        ...state,\n        ...prices\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as priceReducer }\n","import { combineReducers, Dispatch, Action, AnyAction } from 'redux'\nimport { all, fork } from 'redux-saga/effects'\nimport { connectRouter, RouterState } from 'connected-react-router'\n\nimport walletsSaga from './wallets/sagas'\nimport { walletsReducer } from './wallets/reducer'\nimport { IWalletsState } from './wallets/types'\n\nimport { authReducer } from './auth/reducer'\nimport { IAuthState } from './auth/types'\n\nimport transportSaga from './transport/sagas'\nimport { transportReducer } from './transport/reducer'\nimport { ITransportState } from './transport/types'\n\nimport webrtcSaga from './webrtc/sagas'\nimport { webrtcReducer } from './webrtc/reducer'\nimport { IWebrtcState } from './webrtc/types'\n\nimport priceSaga from './price/sagas'\nimport { priceReducer } from './price/reducer'\nimport { IPriceState } from './price/types'\n\n// top-level state\nexport interface IApplicationState {\n  wallets: IWalletsState\n  auth: IAuthState\n  transport: ITransportState\n  price: IPriceState\n  webrtc: IWebrtcState\n  router: RouterState\n}\n\nexport interface IConnectedReduxProps<A extends Action = AnyAction> {\n  dispatch: Dispatch<A>\n}\n\nexport const rootReducer = (history: any) =>\n  combineReducers<IApplicationState>({\n    wallets: walletsReducer,\n    auth: authReducer,\n    transport: transportReducer,\n    webrtc: webrtcReducer,\n    price: priceReducer,\n    router: connectRouter(history),\n  })\n\nexport function* rootSaga() {\n  yield all([fork(walletsSaga), fork(transportSaga), fork(webrtcSaga), fork(priceSaga)])\n}\n","import { Store, createStore, applyMiddleware, AnyAction, DeepPartial } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { routerMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { History } from 'history'\n\nimport { IApplicationState, rootReducer, rootSaga } from './store'\n\nexport default function configureStore(\n  history: History\n): Store<IApplicationState> {\n  const composeEnhancers = composeWithDevTools({})\n  const sagaMiddleware = createSagaMiddleware()\n  const initialState = (JSON.parse(window.localStorage.getItem('state') || '{}') || {}) as DeepPartial<IApplicationState>\n\n  delete initialState.webrtc\n  delete initialState.transport\n\n  const store = createStore(\n    rootReducer(history),\n    initialState,\n    composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware))\n  )\n\n  sagaMiddleware.run(rootSaga)\n  return store\n}\n\nexport const subscriber = (store: Store<IApplicationState, AnyAction>) => () => {\n  window.localStorage.setItem('state', JSON.stringify(store.getState()))\n};","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { createBrowserHistory } from 'history'\n\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore, { subscriber } from './configureStore'\n\nlet basename\nif (location.pathname.includes('/cold-crypto-web'))\n  basename = '/cold-crypto-web'\nelse if (location.pathname.includes('/cold'))\n  basename = '/cold'\nelse\n  basename = '/'\n\nconsole.log(`using basename ${basename}`)\nconst history = createBrowserHistory({ basename })\n\nconst store = configureStore(history)\nstore.subscribe(subscriber(store))\n\nReactDOM.render(\n  <App store={store} history={history} />,\n  document.getElementById('root')\n)\n\n// unregister() or register()\nserviceWorker.unregister()\n"],"sourceRoot":""}