{"version":3,"sources":["components/atoms/Row.tsx","components/atoms/H1.tsx","components/atoms/H2.tsx","components/atoms/H3.tsx","components/atoms/Button.tsx","components/atoms/Column.tsx","components/atoms/A.tsx","components/atoms/ButtonClose.tsx","components/atoms/Centered.tsx","components/atoms/Hr.tsx","components/atoms/Link.tsx","components/atoms/ButtonBase.tsx","components/atoms/ButtonSecondary.tsx","components/atoms/TextInput.tsx","components/atoms/SelectOptions.tsx","components/atoms/Select.tsx","components/atoms/Label.tsx","components/atoms/SelectFloat.tsx","components/atoms/LabelAtop.tsx","components/atoms/TextArea.tsx","components/atoms/RangeInput.tsx","components/atoms/Wrap.tsx","components/moleculas/Logo.tsx","components/organisms/Header.tsx","components/organisms/Footer.tsx","components/layouts/DefaultLayout.tsx","components/organisms/Sidebar.tsx","components/layouts/MainLayout.tsx","components/layouts/ModalLayout.tsx","components/organisms/QrLogin.tsx","helpers/blockchains.ts","helpers/eos/eos-types.ts","helpers/eos/contract.ts","helpers/eos/index.ts","helpers/eth/eth-contracts.ts","helpers/eth/eth.ts","utils/callApi.ts","helpers/jsonrps.ts","store/transport/types.ts","store/transport/actions.ts","helpers/webrtc/jsonrpc.ts","helpers/webrtc/hostproto.ts","pages/Login.tsx","pages/Home.tsx","components/Spinner.tsx","store/wallets/types.ts","store/wallets/actions.ts","pages/TXList/common.tsx","pages/TXList/eth.tsx","pages/TXList/index.tsx","pages/TXList/eos.tsx","pages/Wallet.tsx","store/price/types.ts","store/price/actions.ts","pages/CreateTx/eth.tsx","pages/CreateTx/eos.tsx","pages/CreateTx/index.tsx","pages/Sign.tsx","pages/Status.tsx","pages/TxView.tsx","pages/Contracts/eth.tsx","helpers/func.ts","pages/Contracts/eos.tsx","pages/Contracts/index.tsx","routes.tsx","styles/theme.ts","styles/normalize.ts","styles/globals.ts","styles/index.ts","App.tsx","serviceWorker.ts","helpers/common.ts","store/wallets/sagas.ts","store/auth/types.ts","store/wallets/reducer.ts","store/auth/reducer.ts","utils/parseMessage.ts","store/webrtc/types.ts","helpers/sendtx.ts","store/auth/actions.ts","store/webrtc/actions.ts","store/transport/sagas.ts","constants/index.ts","store/transport/reducer.ts","store/webrtc/connectSaga.ts","store/webrtc/sagas.ts","helpers/webrtc/webrtc.ts","helpers/webrtc/webrtcsingleton.ts","store/webrtc/reducer.ts","helpers/prices/index.ts","store/price/sagas.ts","store/price/reducer.ts","store/index.ts","configureStore.ts","index.tsx"],"names":["Row","styled","display","justifyContent","width","H1","color","fontSize","margin","textTransform","H2","fontWeight","H3","Button","border","borderRadius","cursor","outline","padding","lineHeight","Column","flexFlow","A","Root","Link","alignSelf","marginLeft","textDecoration","XSpan","ButtonClose","react_default","a","createElement","to","Centered","alignItems","textAlign","Hr","backgroundColor","height","StyledLink","ButtonBase","background","transition","ButtonSecondary","TextInput","::placeholder","boxSizing","Select","_ref","flipToRight",":after","borderWidth","content","position","appearance","Wrapper","right","top","SelectOptions","children","onChange","SelectOptions_Select","Label","Container","LabelAtop","label","LabelAtop_Label","TextArea","RangeInput","Wrap","horizontal","vertical","concat","Logo","reverseColor","Sup","verticalAlign","moleculas_Logo","_ref2","gridArea","MainMenu","marginTop","marginRight","Header","logoColorReverse","Header_Root","Header_MainMenu","href","target","Footer","Footer_Root","style","paddingLeft","minHeight","Main","Modal","maxWidth","minWidth","DefaultLayout","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","props","Component","component","rest","objectWithoutProperties","Route","assign","render","matchProps","DefaultLayout_Root","Header_Header","Footer_Footer","React","boxShadow","items","id","title","MenuLink","selected","borderLeft","Sidebar_Container","map","Sidebar","Sidebar_Root","Sidebar_MainMenu","gridTemplateAreas","gridTemplateColumns","gridTemplateRows","MainLayout","MainLayout_Container","MainLayout_Main","Sidebar_Sidebar","left","maxHeight","ModalLayout","ModalLayout_Root","onClick","history","goBack","ModalLayout_Main","e","stopPropagation","ModalLayout_Container","QrLogin","subtitle","onScan","onError","readonly","errorHandle","error","console","react","ButtonClose_ButtonClose","qrcode_react_lib_default","renderAs","size","react_qr_reader_lib_default","delay","_onScan","_x","toString","result","getBcNetByChainId","bc","chainId","networks","network","find","item","eth","name","sign","url","explorerUrl","apiExplorerUrl","eos","normalizers","nothing","_nothing","asyncToGenerator","regenerator_default","mark","_callee","type","wrap","_context","prev","next","abrupt","stop","_x2","_x3","toNumber","_toNumber","_callee2","_context2","BN","_x4","_x5","_x6","validators","_nothing2","_callee3","_context3","_x7","_x8","_x9","defaults","string","_string","_callee4","_context4","_x10","_x11","knownTypes","uint64","config","validation","normalize","default","fixed_bytes20","fixed_bytes32","fixed_bytes64","fixed_bytes65","fixed_bytes33","fixed_string16","int64","time","uint32","timestamp","uint16","checksum_type","bytes","varuint32","uint8","lookUpBase","customs","r","array","endsWith","isArray","substr","length","isBase","chainTypes","isChainType","lookUpTypeCollection","collection","chain","base","toDictionary","keys","fields","k","checksum160","checksum256","checksum512","signature","public_key","message_type","symbol","symbol_code","field_name","account_name","permission_name","type_name","token_name","table_name","scope_name","action_name","time_point","time_point_sec","block_timestamp_type","block_id","checksum256_type","checksum512_type","checksum160_type","sha256","sha512","sha160","weight_type","block_num_type","share_type","digest_type","context_free_type","unsigned_int","bool","extensions_type","data","transaction_header","expiration","ref_block_num","ref_block_prefix","max_net_usage_words","max_cpu_usage_ms","delay_sec","transaction","context_free_actions","actions","transaction_extensions","signed_transaction","signatures","context_free_data","field_def","asset","amount","sym","producer_key","producer_name","block_signing_key","producer_schedule","version","producers","chain_config","target_block_size","max_block_size","target_block_acts_per_scope","max_block_acts_per_scope","target_block_acts","max_block_acts","real_threads","max_storage_size","max_transaction_lifetime","max_authority_depth","max_transaction_exec_time","max_inline_depth","max_inline_action_size","max_generated_transaction_size","type_def","new_type_name","struct_def","clause_pair","body","error_message","error_code","error_msg","abi_def","types","structs","tables","ricardian_clauses","error_messages","abi_extensions","table_def","index_type","key_names","key_types","permission_level","actor","permission","action","account","authorization","action_def","ricardian_contract","block_header","previous","transaction_mroot","action_mroot","block_mroot","producer","schedule_version","new_producers","packed_transaction","compression","packed_context_free_data","packed_trx","arr","val","reduce","acc","cur","expand","customTypes","dict","x","objectSpread","f","forEach","EosContract","_this","abi","custom","assignContract","contractName","getAbi","sent","getActions","getMethodFields","method","log","getMethodAbi","getInfo","wallet","net","blockchain","axios","get","address","then","res","txs","post","offset","pos","action_trace","getEos","Eos","httpEndpoint","sendTx","signedTx","txHash","pushTransaction","transaction_id","getTxHeaders","_getTxHeaders","info","chainDate","block","transactionHeaders","Date","head_block_time","getTime","expireInSeconds","toISOString","split","getBlock","last_irreversible_block_num","isFunction","abiEntry","methodSignature","inputs","join","getArguments","methodName","filter","require","web3","Web3","getWeb3","setProvider","providers","WebsocketProvider","getNonce","_getNonce","getTransactionCount","tx","sendSignedTransaction","transactionHash","getTx","_getTx","path","callApi","fetch","headers","Accept","Content-Type","mode","JSON","stringify","json","_getInfo","nonce","getContractData","args","encodeFunctionCall","convertParamsToEth","params","i","encodeParameter","getWalletListCommand","blockchains","form","Promise","resolve","gasPrice","utils","toWei","txHeaders","from","quantity","toFixed","memo","formData","argsTypes","gasLimit","walletBase","entries","TransportActionTypes","remoteSignTransferTx","REMOTE_SIGN_TRANSFER","sendTransaction","SEND_TX","login","message","LOGIN","setRtcSid","sid","SET_RTC_SID","call","undefined","jrpcs","obj","jsonrpc","jrpc","JsonRpc","send","onRequest","lastOutgoingMsgId","listeners","_callbacksQueue","_messageQueue","onMessage","msg","startsWith","parse","test","_msg$split$map","_msg$split$map2","slicedToArray","_id","prefixLength","match","parseInt","parseHostMessage","isMethodCall","m","isError","_this2","cb","shift","push","_nextMessage","_this3","rej","_len","_","Array","_key","_ping","_callRaw","_this4","getNextMsgId","err","_call","_len2","_key2","_args4","callRaw","LoginPage","search","scanLoginData","qrcodeData","isRtc","URLSearchParams","cmd","prepareCall","QrLogin_QrLogin","Login","connect","router","transport","location","dispatch","Home","paddingRight","WalletsActionTypes","Loader","LoadingOverlayInner","Spinner_LoadingSpinner","LoadingSpinner","Spinner","className","CubeMove","keyframes","_templateObject","_templateObject2","_templateObject3","fetchRequest","FETCH_REQUEST","fetchSuccess","FETCH_SUCCESS","fetchError","FETCH_ERROR","setSendingTxData","SET_SENDING_TX_DATA","OverflowTd","overflow","textOverflow","Table","borderCollapse","borderSpacing","td","th","tr","borderBottom","EthTx","index","timeStamp","toLocaleString","hash","TXList","block_time","act","payer","stake_cpu_quantity","stake_net_quantity","PriceActionTypes","TXListWrapper","Net","Wallet_templateObject","WalletPage","addWalletDispatch","addWallet","_this$props2","loading","flexBasis","Address","TXList_TXList","Spinner_Loader","Wallet","wallets","ADD_WALLET","priceGet","PRICE_GET","priceSet","prices","PRICE_SET","CreateTxPage","updatePrice","_e$target","setFieldValue","price","parseFloat","createTx","formik_esm","initialValues","onSubmit","values","formikBag","field","placeholder","RowMargined","LabelAtop_LabelAtop","_ref3","min","step","src","_ref4","_ref5","_ref6","max","CreateEthTx","_ref7","CREATE_ETH_TRANSFER","eos_RowMargined","CreateEosTx","CREATE_EOS_TRANSFER","CreateTx","Sign","command","sendingTxData","scaned","Status","status","webrtc","LoadingText","Status_templateObject","TxView","sendingData","_ref$sendingData","getExplrUrl","CreateEthContractPage","handleOnChangeAbi","file","reader","publicMethodNames","files","FileReader","readAsText","onload","setState","state","methodArgs","_this$state","onBlur","opacity","SelectOptions_SelectOptions","fill","arg","CallEthContract","CREATE_ETH_CONTRACT","formToJson","FormData","object","Error","eos_templateObject","styles","offtop","css","eos_templateObject2","select","eos_templateObject3","CreateEosContractPage","handleChangeAddress","handleSubmit","_contract","preventDefault","contract","t0","handleConfirm","handleMethodSelect","eos_Error","CallEosContract","CREATE_EOS_CONTRACT","ContractPage","CallContract","Routes","Switch","DefaultLayout_DefaultLayout","exact","MainLayout_MainLayout","ModalLayout_ModalLayout","theme","colors","black","white","fontSizes","h1","h2","h3","h4","breakpoints","xs","sm","md","lg","xl","widths","normalize_templateObject","globals_templateObject","injectGlobal","styles_templateObject","globals","App","store","react_redux_es","lib","emotion_theming_browser_esm","routes_Routes","Boolean","window","hostname","getBcInfo","ethInfo","eosInfo","handleSetWallet","watchFetchRequest","walletsSaga","payload","put","stack","_marked","takeEvery","_marked2","all","fork","_marked3","AuthActionTypes","initialState","errors","reducer","isAuth","AUTH_SUCCESS","AUTH_ERROR","parseMessage","replace","parseJsonString","WebrtcActionTypes","str","_sendTx","sendEth","sendEos","authSuccess","connectionReady","CONNECTION_OPEN","connectionClosing","CONNECTION_CLOSE","setStatus","SET_STATUS","sendCommand","SEND_COMMAND","handleLogin","handleRemoteSignTransfer","handleRemoteSignContract","handleSendTx","watchSendTx","watchCreateTx","watchRemoteSignTransfer","watchLogin","transportSaga","_parseMessage","sagas_marked","createContractHandler","getContractParams","handleCreateTransfer","createTransferHandler","getTransferTx","handleCreateEthTransfer","_getEthTransferTx","handleCreateEosTransfer","_getEosTransferTx","handleCreateEthContract","_getEthContractParams","handleCreateEosContract","_getEosContractParams","sagas_marked2","_context5","sagas_marked3","_parseMessage2","_context6","_marked4","_context7","_marked5","_context8","_marked6","_context9","REMOTE_SIGN_CONTRACT","_marked7","_context10","_marked8","_context11","_marked9","RTCCommands","lastWebrtcMsg","handshakeServerUrl","answerSaga","connectSaga","makeOfferRequest","offer","makeIceRequest","ice","onOpenChannel","ws","eventChannel","emit","addEventListener","removeEventListener","onMessageChannel","rtc","answer","sendIce","candidates","on","pushAnswer","sdp","waitConnection","close","connectSaga_marked","offerPromise","openChan","messageChan","_JSON$parse","createOffer","WebSocket","take","webrtcLogin","pushIceCandidate","cancelled","finish","connectSaga_marked2","watchDataChannel","handleOpeningConnection","handleSendCommand","watchActions","watchConnection","webrtcSaga","createDataChannel","dataChannel","onmessage","channelMessage","getWalletList","signTransferTx","signContractCall","webrtc_sagas_marked","readyState","webrtc_sagas_marked2","_ref3$webrtc","connected","webrtc_sagas_marked3","sagas_marked4","bgConectionTask","connectTask","cancel","sagas_marked5","sagas_marked6","RTCHelper","_EventEmitter","rpc","RTCPeerConnection","tag","onIceCandidate","ev","candidate","onDataChannel","channel","setChannel","onDataChannelOpen","c","onopen","setLocalDescription","pushOffer","setRemoteDescription","createAnswer","_callee5","addIceCandidate","onicecandidate","ondatachannel","EventEmitter","init","ii","singleton","getSingleton","CoinmarketcapTicker","pushedMessages","toConsumableArray","CoinmarketApi","ticker","getEth","_getEos","handleGetPrice","toLowerCase","quotes","USD","price_sagas_marked","price_sagas_marked2","price_sagas_marked3","rootSaga","rootReducer","combineReducers","walletsReducer","auth","authReducer","transportReducer","webrtcReducer","priceReducer","connectRouter","priceSaga","store_marked","basename","pathname","includes","createBrowserHistory","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","localStorage","getItem","createStore","applyMiddleware","routerMiddleware","run","configureStore","subscribe","setItem","getState","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.285c1b79.chunk.js","sourcesContent":["import styled from 'react-emotion'\n\nexport const Row = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  width: '100%',\n})\n","import styled from 'react-emotion'\n\nexport const H1 = styled('h1')({\n  color: '#160A2E',\n  fontSize: '1.6rem',\n  margin: 0,\n  textTransform: 'uppercase',\n})\n","import styled from 'react-emotion'\n\nexport const H2 = styled('h2')({\n  color: '#160A2E',\n  fontSize: '1.4rem',\n  fontWeight: 'normal',\n  margin: '0 0 .25rem 0',\n})\n","import styled from 'react-emotion'\n\nexport const H3 = styled('h3')({\n  color: 'rgba(22, 10, 46, 0.5)',\n  fontSize: '1.05rem',\n  fontWeight: 'normal',\n  margin: 0,\n})\n","import styled from 'react-emotion'\n\nexport const Button = styled('button')({\n  border: 0,\n  borderRadius: '.2rem',\n  cursor: 'pointer',\n  fontSize: '.9rem',\n  margin: '.25rem 0',\n  outline: 0,\n  padding: '.5rem 2rem',\n  lineHeight: '1.45rem',\n  width: '100%',\n})\n","import styled from 'react-emotion'\n\nexport const Column = styled('div')({\n  display: 'flex',\n  flexFlow: 'column nowrap',\n  width: '100%',\n})\n","import styled from 'react-emotion'\n\nexport const A = styled('a')({\n  color: '#160A2E'\n})\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Link } from 'react-router-dom'\n\nconst Root = styled(Link)({\n  alignSelf: 'center',\n  marginLeft: '1rem',\n  textDecoration: 'none',\n  color: 'black',\n  fontSize: '2rem',\n})\n\nconst XSpan = styled('span')({\n  textDecoration: \"none !important\"\n})\n\nexport const ButtonClose = () => (\n  <Root to=\"/\">\n    <XSpan>×</XSpan>\n  </Root>\n)\n","import styled from 'react-emotion'\n\nexport const Centered = styled('div')({\n  alignItems: 'center',\n  justifyContent: 'center',\n  textAlign: 'center',\n})\n","import styled from 'react-emotion'\n\nexport const Hr = styled('div')({\n  backgroundColor: 'transparent',\n  height: '1px',\n  margin: '1rem 0',\n  width: '100%',\n})\n","import { Link } from 'react-router-dom'\nimport styled from 'react-emotion'\n\nexport const StyledLink = styled(Link)({\n  display: 'block',\n  textDecoration: 'none',\n})\n","import styled from 'react-emotion'\n\nimport { Button } from './Button'\n\nexport const ButtonBase = styled(Button)({\n  // ':hover': {\n  //   background: 'rgb(13, 137, 180)',\n  // },\n  borderRadius: '6rem',\n  background: '#00BCF9',\n  color: '#fff',\n  transition: '.2s ease-in-out all',\n  fontSize: '1.1rem',\n})\n","import styled from 'react-emotion'\n\nimport { Button } from './Button'\n\nexport const ButtonSecondary = styled(Button)({\n  // ':hover': {\n  //   background: 'rgb(230, 247, 253)',\n  // },\n  borderRadius: '6rem',\n  background: 'transparent',\n  border: '3px solid #00BCF9',\n  color: '#00BCF9',\n  transition: '.2s ease-in-out all',\n  fontSize: '1rem',\n})\n","import styled from 'react-emotion'\n\nexport const TextInput = styled('input')({\n  '::placeholder': {\n    color: 'rgba(22, 10, 46, 0.6)',\n  },\n  background: '#F3F2F4',\n  border: '2px solid #736C82',\n  borderRadius: '6rem',\n  boxSizing: 'border-box',\n  color: 'rgba(22, 10, 46, 0.6)',\n  fontSize: '.9rem',\n  margin: '.25rem 0',\n  outline: 'none',\n  padding: '.75rem 1rem',\n  width: '100%',\n})\n","import React from 'react'\nimport styled from 'react-emotion'\n\nexport const Select = styled('select')({\n  appearance: 'none',\n  background: '#F3F2F4',\n  border: 0,\n  borderRadius: '6rem',\n  color: 'rgba(22, 10, 46, 0.6)',\n  padding: '.8rem 1.2rem',\n  boxSizing: 'border-box',\n  margin: '.25rem 0',\n  outline: 'none',\n  position: 'relative',\n  width: '100%',\n})\n\nconst Wrapper = styled('div')({\n  ':after': {\n    content: '\"\"',\n    position: 'absolute',\n    background: 'url(\"/icon-select-down.svg\")',\n    width: '1.5rem',\n    height: '1.5rem',\n    right: '.85rem',\n    top: '.85rem',\n  },\n  width: '100%',\n  position: 'relative',\n})\n\nexport const SelectOptions = ({ children, onChange }: any) => (\n  <Wrapper>\n    <Select onChange={onChange}>{ children }</Select>\n  </Wrapper>\n)","import styled from 'react-emotion'\n\nexport const Select = styled('select')(\n  ({ flipToRight }: { flipToRight?: boolean }) => ({\n    ':after': {\n      border: 'solid white',\n      borderWidth: '0 3px 3px 0',\n      content: '\"\"',\n      position: 'absolute',\n    },\n    appearance: 'none',\n    background: '#00BCF9',\n    border: 0,\n    borderRadius: '6rem',\n    color: '#f1faee',\n    padding: '0 1rem',\n    boxSizing: 'border-box',\n    margin: '.25rem 0',\n  })\n)\n","import styled from 'react-emotion'\n\nexport const Label = styled('span')({\n  display: 'block',\n  width: '100%',\n  color: 'rgba(22, 10, 46, 0.6)',\n})\n","import styled from 'react-emotion'\n\nexport const SelectFloat = styled('select')(\n  ({ flipToRight }: { flipToRight?: boolean }) => ({\n    ':after': {\n      border: 'solid white',\n      borderWidth: '0 3px 3px 0',\n      content: '\"\"',\n      position: 'absolute',\n    },\n    appearance: 'none',\n    background: '#00BCF9',\n    border: 0,\n    borderRadius: '6rem',\n    color: '#f1faee',\n    boxSizing: 'border-box',\n    margin: '.25rem 0',\n    position: 'absolute',\n    marginLeft: '15.25rem',\n    padding: '.82rem 1rem',\n  })\n)\n","import React from 'react'\nimport styled from 'react-emotion'\n\nconst Container = styled('strong')({\n  position: 'relative',\n})\n\nconst Label = styled('span')({\n  color: 'rgb(117, 118, 121)',\n  padding: '1rem',\n  position: 'absolute',\n  right: 0,\n})\n\nexport const LabelAtop = ({\n  label,\n  children,\n}: {\n  label: string\n  children: JSX.Element\n}) => (\n  <Container>\n    {children}\n    <Label>{label}</Label>\n  </Container>\n)\n","import styled from 'react-emotion'\n\nexport const TextArea = styled('textarea')({\n  background: '#F3F2F4',\n  border: '2px solid #736C82',\n  borderRadius: '2rem',\n  boxSizing: 'border-box',\n  color: 'rgb(84, 84, 86)',\n  fontSize: '.9rem',\n  margin: '.25rem 0',\n  outline: 'none',\n  padding: '.75rem 1rem',\n  width: '100%',\n})\n","import styled from 'react-emotion'\n\nexport const RangeInput = styled('input')({\n  '::placeholder': {\n    color: 'rgba(22, 10, 46, 0.6)',\n  },\n  background: 'transparent',\n  borderRadius: '6rem',\n  boxSizing: 'border-box',\n  fontSize: '.9rem',\n  margin: '.25rem 0',\n  padding: '.75rem 1rem',\n  width: '100%',\n  appearance: 'none',\n  outline: 'none',\n  color: 'transparent',\n  border: 0,\n})\n","import styled from 'react-emotion'\n\nexport const Wrap = styled('div')(\n  ({ horizontal, vertical }: { horizontal?: number; vertical?: number }) => ({\n    margin: `${vertical || 0}rem ${horizontal || 0}rem`,\n  })\n)\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Link, H1 } from '../atoms'\n\nconst Logo = styled(H1)(({ reverseColor }: { reverseColor?: boolean }) => ({\n  color: reverseColor ? '#171933' : '#fff',\n  padding: '2rem 1.6rem',\n  fontSize: '1.3rem',\n  lineHeight: '1.3rem',\n  width: 'inherit',\n}))\n\nconst Sup = styled('sup')({\n  color: '#f2494d',\n  fontSize: '0.5rem',\n  textTransform: 'lowercase',\n  verticalAlign: 'super',\n})\n\nexport default ({ to, reverseColor }: { to?: string, reverseColor?: boolean }) =>\n  <Link to={to || '/'}>\n    <Logo reverseColor={reverseColor}>\n      Cold Crypto\n      <Sup>beta mode</Sup>\n    </Logo>\n  </Link>\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { A } from '../atoms'\nimport Logo from '../moleculas/Logo'\n\nconst Root = styled('header')({\n  gridArea: 'header',\n  height: '4rem',\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nconst MainMenu = styled('div')({\n  display: 'flex',\n  flexFlow: 'row nowrap',\n  alignItems: 'center',\n  fontSize: '.9rem',\n  marginTop: '1rem',\n  marginRight: '1rem',\n  a: {\n    color: '#fff',\n    padding: '2rem',\n  }\n})\n\nexport const Header = ({ to, logoColorReverse }: { to?: string, logoColorReverse?: boolean }) => (\n  <Root>\n    <Logo reverseColor={false} to={to} />\n    <MainMenu>\n      {/* <Link to=\"#\">About</Link> */}\n      {/* <Link to=\"#\">Blog</Link> */}\n      <A href=\"https://github.com/DucaturFw/cold-crypto-web/issues\" target=\"blank\">Support</A>\n      <A href=\"https://duxi.io/cold/COLDCRYPTO_PRIVACY_POLICY.pdf\" target=\"blank\">Privacy policy</A>\n      <A href=\"https://duxi.io/cold/COLDCRYPTO_TERMS_OF_USE.pdf\" target=\"blank\">Terms of use</A>\n      {/* <Link to=\"#\">Sign up</Link> */}\n    </MainMenu>\n  </Root>\n)\n","import React from 'react'\nimport styled from 'react-emotion'\n\nconst Root = styled('header')({\n  gridArea: 'footer',\n  height: '4rem',\n})\n\n\nexport const Footer = () => (\n  <Root>\n    <div style={{\n      color: 'rgba(255, 255, 255, 0.2)',\n      fontSize: '.85rem',\n      paddingLeft: '2rem'\n    }}>\n      &copy; Cold Crypto 2018. All rights reserved.\n    </div>\n  </Root>\n)\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Route } from 'react-router-dom'\n\nimport { Header } from '../organisms/Header'\nimport { Footer } from '../organisms/Footer'\n\nconst Root = styled('div')({\n  background: 'linear-gradient(57deg, #0D0D0D 0%, #160A2E 100%)',\n  minHeight: '100vh',\n})\n\nconst Main = styled('main')({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'center',\n  minHeight: 'calc(100vh - 4rem - 4rem)',\n})\n\nconst Modal = styled('div')({\n  background: '#fff',\n  borderRadius: '.8rem',\n  maxWidth: '50rem',\n  minWidth: '30rem',\n  padding: '2rem',\n})\n\ninterface IDefaultProps {\n  component: any\n  path?: string\n  exact?: boolean\n}\n\nexport class DefaultLayout extends React.Component<IDefaultProps, any> {\n  public render() {\n    const { component: Component, ...rest } = this.props\n    return (\n      <Route\n        {...rest}\n        render={matchProps => (\n          <Root>\n            <Header />\n            <Main>\n              <Modal>\n                <Component {...matchProps} />\n              </Modal>\n            </Main>\n            <Footer />\n          </Root>\n        )}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Link } from '../atoms'\nimport Logo from '../moleculas/Logo'\n\nconst Root = styled('aside')({\n  background: '#fff',\n  boxShadow: '0px 0px 25px rgba(0, 0, 0, 0.04)',\n  gridArea: 'sidebar',\n})\n\nconst items = [{ id: 'wallets', title: 'Wallets' }]\n\nconst MenuLink = styled(Link)(({ selected }: { selected: boolean }) => ({\n  color: selected ? '#00BCF9' : '#171933',\n  borderLeft: `3px solid ${selected ? '#00BCF9' : 'transparent'}`,\n  fontWeight: selected ? 'bold' : 'normal',\n  padding: '.75rem 1.5rem',\n  background: selected ? 'rgba(179, 236, 254, 0.6)' : 'transparent'\n}))\n\nconst Container = styled('menu')({\n  padding: 0,\n  margin: 0,\n})\n\nconst MainMenu = () => (\n  <Container>\n    {items.map(({ id, title }) => (\n      <MenuLink to={`/${id}`} key={id} selected={true}>\n        {title}\n      </MenuLink>\n    ))}\n  </Container>\n)\n\nexport const Sidebar = () => (\n  <Root>\n    <Logo to='/' reverseColor={true} />\n    <MainMenu />\n  </Root>\n)\n","import React from 'react'\nimport styled from 'react-emotion'\n\nimport { Sidebar } from '../organisms/Sidebar'\n\nconst Container = styled('div')({\n  background: '#fff',\n  display: 'grid',\n  gridTemplateAreas: `\n    \"sidebar main main main\"\n    \"sidebar footer footer footer\"\n  `,\n  gridTemplateColumns: '16rem auto auto auto',\n  gridTemplateRows: 'auto auto',\n  minHeight: '100vh',\n})\n\nconst Main = styled('main')({\n  display: 'flex',\n  gridArea: 'main',\n  justifyContent: 'center',\n  minHeight: 'calc(100vh - 4rem)',\n  padding: '2rem',\n  background: '#FAFAFB',\n})\n\nexport const MainLayout: React.SFC = props => {\n  const { children } = props\n  return (\n    <Container>\n      <Main>{children}</Main>\n      <Sidebar />\n    </Container>\n  )\n}\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Route } from 'react-router-dom'\n// import { History } from 'history'\n\nconst Root = styled('header')({\n  alignItems: 'center',\n  background: 'linear-gradient(57deg, #0D0D0D 0%, #160A2E 100%)',\n  display: 'flex',\n  height: '100vh',\n  justifyContent: 'center',\n  left: 0,\n  position: 'fixed',\n  top: 0,\n  width: '100vw',\n})\n\nconst Main = styled('main')({\n  background: '#fff',\n  borderRadius: '.25rem',\n  boxShadow: 'rgba(0, 0, 0, 0.5) 0px .25rem 1.5rem',\n  maxHeight: '95vh',\n  maxWidth: '95vw',\n  minHeight: '50vh',\n  minWidth: '60vw',\n})\n\nconst Container = styled('div')({\n  boxSizing: 'border-box',\n  padding: '2rem',\n})\n\ninterface IDefaultProps {\n  component: any\n  path?: string\n  exact?: boolean\n}\n\nexport const ModalLayout: React.SFC<IDefaultProps> = props => {\n  const { component: Component, ...rest } = props\n  return (\n    <Route\n      {...rest}\n      render={matchProps => {\n        return (\n          <Root onClick={matchProps.history.goBack}>\n            <Main onClick={e => e.stopPropagation()}>\n              <Container>\n                <Component {...matchProps} />\n              </Container>\n            </Main>\n          </Root>\n        )\n      }}\n    />\n  )\n}\n","import * as React from 'react'\nimport { Row, Hr, ButtonClose, Column, H2, H3, Centered } from '../atoms'\nimport QrReader from 'react-qr-reader'\nimport QRCode from 'qrcode.react'\n\ninterface IPropsFromDispatch {\n  title: string\n  value: string\n  subtitle?: string\n  onScan: (data: string) => void\n  onError?: (e: Error) => void\n  readonly?: boolean\n}\n\ntype AllProps = IPropsFromDispatch\n\nexport const QrLogin: React.SFC<AllProps> = ({\n  title,\n  subtitle,\n  value,\n  onScan,\n  onError,\n  readonly,\n}) => {\n  const errorHandle = onError || ((error: Error) => console.error(error))\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Column>\n          <H2>{title}</H2>\n          <H3>\n            { subtitle || \"Follow these steps to sign your transaction using your mobile device\" }\n          </H3>\n        </Column>\n        <ButtonClose />\n      </Row>\n      <Hr />\n      <Row style={{ justifyContent: 'space-around' }}>\n        <Column style={{ width: '50%' }}>\n          <Centered>\n            <H2>Scan QR Code</H2>\n          </Centered>\n          <Centered style={{ display: 'flex' }}>\n            {value && <QRCode value={value} renderAs=\"svg\" size={200} />}\n          </Centered>\n        </Column>\n        {!readonly && (\n          <Column style={{ width: '50%' }}>\n            <Centered>\n              <H2>Show QR Code</H2>\n            </Centered>\n            <Centered style={{ display: 'flex' }}>\n              <QrReader\n                delay={300}\n                onScan={result => result && onScan(result)}\n                onError={error => errorHandle(error)}\n                style={{ width: 200 }}\n              />\n            </Centered>\n          </Column>\n        )}\n      </Row>\n    </React.Fragment>\n  )\n}\n","export interface INetwork {\n  name: string\n  sign: string\n  url: string\n  btc?: any\n  explorerUrl: string\n  apiExplorerUrl: string\n  chainId?: string | number\n}\n\nexport const getBcNetBySign = (bc: string, net: string): INetwork => networks[bc].network.find((item: INetwork) => item.sign === net);\nexport const getBcNetByChainId = (bc: string, chainId: string): INetwork => networks[bc].network.find((item: INetwork) => item.chainId === chainId);\n\nconst networks = {\n  eth: {\n    name: 'Ethereum',\n    network: [\n      {\n        name: 'Mainnet',\n        sign: 'mainnet',\n        url: 'wss://mainnet.infura.io/ws',\n        explorerUrl: 'https://etherscan.io',\n        apiExplorerUrl: 'https://api.etherscan.io',\n        chainId: '1'\n      },\n      {\n        name: 'Ropsten',\n        sign: 'ropsten',\n        url: 'wss://ropsten.infura.io/ws',\n        explorerUrl: 'https://ropsten.etherscan.io',\n        apiExplorerUrl: 'https://api-ropsten.etherscan.io',\n        chainId: '3'\n      },\n      {\n        name: 'Rinkeby',\n        sign: 'rinkeby',\n        url: 'wss://rinkeby.infura.io/ws',\n        explorerUrl: 'https://rinkeby.etherscan.io',\n        apiExplorerUrl: 'https://api-rinkeby.etherscan.io',\n        chainId: '4'\n      }\n    ]\n  },\n  eos: {\n    name: 'EOS',\n    network: [\n      {\n        name: 'Mainnet',\n        sign: 'mainnet',\n        chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906',\n        url: 'https://eos.greymass.com:443',\n        explorerUrl: 'https://eospark.com/MainNet',\n        apiExplorerUrl: 'https://eos.greymass.com:443'\n      },\n      {\n        name: 'Jungle Testnet',\n        sign: 'testnet',\n        chainId: 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473',\n        url: 'https://jungle2.cryptolions.io',\n        explorerUrl: 'https://jungle.eospark.com',\n        apiExplorerUrl: 'https://junglehistory.cryptolions.io:4433'\n      }\n    ]\n  },\n}\n\nexport default networks;","import BN from \"bn.js\";\n\nconst normalizers = {\n  nothing: async (value: any, type?: string, name?: string) => value,\n  toNumber: async (value: any, type?: string, name?: string) =>\n    new BN(value, 10).toNumber()\n};\n\nconst validators = {\n  nothing: async (value: any, type?: string, name?: string) => true\n};\n\nconst defaults = {\n  string: async (type?: string, name?: string) => \"\"\n};\n\nexport interface KnownType {\n  component: string;\n  config: any;\n  validation(value: any, type?: string, name?: string): Promise<boolean>;\n  normalize(value: any, type?: string, name?: string): Promise<any>;\n  default(type?: string, name?: string): Promise<any>;\n}\n\nexport const knownTypes: { [type: string]: KnownType } = {\n  uint64: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  },\n  fixed_bytes20: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  fixed_bytes32: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  fixed_bytes64: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  fixed_bytes65: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  fixed_bytes33: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  fixed_string16: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  string: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  name: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  int64: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  },\n  time: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  uint32: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  },\n  timestamp: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  uint16: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  },\n  checksum_type: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  bytes: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  varuint32: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  },\n  uint8: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  }\n};\n\nexport type TypeDef =\n  | string\n  | { [field: string]: TypeDef }\n  | [(string | { [field: string]: TypeDef })];\n\nfunction wrap(a: any, w: boolean): any {\n  return w ? [a] : a;\n}\n\nexport function lookUpBase(type: string, customs?: any): any {\n  const array = isArray(type);\n  if (array) {\n    type = type.substr(0, type.length - 2);\n  }\n\n  let r;\n\n  if (isBase(type)) {\n    r = type;\n  } else if (isChainType(type)) {\n    r = lookUpTypeCollection(chainTypes, type, customs);\n  } else if (customs && customs[type]) {\n    r = lookUpTypeCollection(customs, type, customs);\n  } else {\n    r = `unknown_${type}`;\n  }\n\n  return wrap(r, array);\n}\n\nfunction lookUpTypeCollection(\n  collection: any,\n  type: string,\n  customs?: any\n): any {\n  const chain = collection[type];\n  if (typeof chain === \"string\") {\n    return lookUpBase(chain, customs);\n  } else if (chain.base && chain.base.length) {\n    return Object.assign(\n      lookUpBase(chain.base, customs),\n      toDictionary(\n        Object.keys(chain.fields),\n        (k: any) => k,\n        (k: any) => lookUpBase(chain.fields[k], customs)\n      )\n    );\n  } else {\n    return toDictionary(\n      Object.keys(chain.fields),\n      (k: any) => k,\n      (k: any) => lookUpBase(chain.fields[k], customs)\n    );\n  }\n}\n\nexport function isArray(type: string): boolean {\n  return type.endsWith(\"[]\");\n}\n\nexport function isBase(type: string): boolean {\n  return typeof knownTypes[type] !== \"undefined\";\n}\n\nexport function isChainType(type: string): boolean {\n  return isBase(type) || typeof chainTypes[type] !== \"undefined\";\n}\n\nexport const chainTypes = {\n  checksum160: \"fixed_bytes20\",\n  checksum256: \"fixed_bytes32\",\n  checksum512: \"fixed_bytes64\",\n  signature: \"fixed_bytes65\",\n  public_key: \"fixed_bytes33\",\n  message_type: \"fixed_string16\",\n  symbol: \"uint64\",\n  symbol_code: \"uint64\",\n  field_name: \"string\",\n  account_name: \"name\",\n  permission_name: \"name\",\n  type_name: \"string\",\n  token_name: \"name\",\n  table_name: \"name\",\n  scope_name: \"name\",\n  action_name: \"name\",\n  time_point: \"int64\",\n  time_point_sec: \"time\",\n  timestamp: \"uint32\",\n  block_timestamp_type: \"timestamp\",\n  block_id: \"fixed_bytes32\",\n  checksum_type: \"fixed_bytes32\",\n  checksum256_type: \"fixed_bytes32\",\n  checksum512_type: \"fixed_bytes64\",\n  checksum160_type: \"fixed_bytes20\",\n  sha256: \"fixed_bytes32\",\n  sha512: \"fixed_bytes64\",\n  sha160: \"fixed_bytes20\",\n  weight_type: \"uint16\",\n  block_num_type: \"uint32\",\n  share_type: \"int64\",\n  digest_type: \"checksum_type\",\n  context_free_type: \"bytes\",\n  unsigned_int: \"varuint32\",\n  bool: \"uint8\",\n  extensions_type: {\n    base: \"\",\n    fields: {\n      type: \"uint16\",\n      data: \"bytes\"\n    }\n  },\n  transaction_header: {\n    base: \"\",\n    fields: {\n      expiration: \"time\",\n      ref_block_num: \"uint16\",\n      ref_block_prefix: \"uint32\",\n      max_net_usage_words: \"unsigned_int\",\n      max_cpu_usage_ms: \"uint8\",\n      delay_sec: \"unsigned_int\"\n    }\n  },\n  transaction: {\n    base: \"transaction_header\",\n    fields: {\n      context_free_actions: \"action[]\",\n      actions: \"action[]\",\n      transaction_extensions: \"extensions_type[]\"\n    }\n  },\n  signed_transaction: {\n    base: \"transaction\",\n    fields: {\n      signatures: \"signature[]\",\n      context_free_data: \"bytes[]\"\n    }\n  },\n  fields: \"field_def[]\",\n  field_def: {\n    fields: {\n      name: \"field_name\",\n      type: \"type_name\"\n    }\n  },\n  asset: {\n    fields: {\n      amount: \"share_type\",\n      sym: \"symbol\"\n    }\n  },\n  producer_key: {\n    fields: {\n      producer_name: \"account_name\",\n      block_signing_key: \"public_key\"\n    }\n  },\n  producer_schedule: {\n    fields: {\n      version: \"uint32\",\n      producers: \"producer_key[]\"\n    }\n  },\n  chain_config: {\n    fields: {\n      target_block_size: \"uint32\",\n      max_block_size: \"uint32\",\n      target_block_acts_per_scope: \"uint32\",\n      max_block_acts_per_scope: \"uint32\",\n      target_block_acts: \"uint32\",\n      max_block_acts: \"uint32\",\n      real_threads: \"uint64\",\n      max_storage_size: \"uint64\",\n      max_transaction_lifetime: \"uint32\",\n      max_authority_depth: \"uint16\",\n      max_transaction_exec_time: \"uint32\",\n      max_inline_depth: \"uint16\",\n      max_inline_action_size: \"uint32\",\n      max_generated_transaction_size: \"uint32\"\n    }\n  },\n  type_def: {\n    base: \"\",\n    fields: {\n      new_type_name: \"type_name\",\n      type: \"type_name\"\n    }\n  },\n  struct_def: {\n    base: \"\",\n    fields: {\n      name: \"type_name\",\n      base: \"type_name\",\n      fields: \"field_def[]\"\n    }\n  },\n  clause_pair: {\n    base: \"\",\n    fields: {\n      id: \"string\",\n      body: \"string\"\n    }\n  },\n  error_message: {\n    base: \"\",\n    fields: {\n      error_code: \"uint64\",\n      error_msg: \"string\"\n    }\n  },\n  abi_def: {\n    base: \"\",\n    fields: {\n      version: \"string\",\n      types: \"type_def[]\",\n      structs: \"struct_def[]\",\n      actions: \"action_def[]\",\n      tables: \"table_def[]\",\n      ricardian_clauses: \"clause_pair[]\",\n      error_messages: \"error_message[]\",\n      abi_extensions: \"extensions_type[]\"\n    }\n  },\n  table_def: {\n    base: \"\",\n    fields: {\n      name: \"table_name\",\n      index_type: \"type_name\",\n      key_names: \"field_name[]\",\n      key_types: \"type_name[]\",\n      type: \"type_name\"\n    }\n  },\n  permission_level: {\n    base: \"\",\n    fields: {\n      actor: \"account_name\",\n      permission: \"permission_name\"\n    }\n  },\n  action: {\n    base: \"\",\n    fields: {\n      account: \"account_name\",\n      name: \"action_name\",\n      authorization: \"permission_level[]\",\n      data: \"bytes\"\n    }\n  },\n  action_def: {\n    base: \"\",\n    fields: {\n      name: \"action_name\",\n      type: \"type_name\",\n      ricardian_contract: \"string\"\n    }\n  },\n  block_header: {\n    base: \"\",\n    fields: {\n      previous: \"checksum256\",\n      timestamp: \"timestamp\",\n      transaction_mroot: \"checksum256\",\n      action_mroot: \"checksum256\",\n      block_mroot: \"checksum256\",\n      producer: \"account_name\",\n      schedule_version: \"uint32\",\n      new_producers: \"producer_schedule?\"\n    }\n  },\n  packed_transaction: {\n    fields: {\n      signatures: \"signature[]\",\n      compression: \"uint8\",\n      packed_context_free_data: \"bytes\",\n      packed_trx: \"bytes\"\n    }\n  }\n};\n\nexport function toDictionary<T, V>(\n  arr: T[],\n  key: (obj: T) => string,\n  val: (obj: T) => V\n) {\n  return arr.reduce((acc, cur) => ((acc[key(cur)] = val(cur)), acc), {} as {\n    [key: string]: V;\n  });\n}","import { toDictionary, lookUpBase } from './eos-types'\n\nconst expand = (type: string, customs: any): any => {\n  try {\n    return lookUpBase(type, customs)\n  } catch (e) {\n    console.error('editor err', e)\n    return 'error_type_' + type\n  }\n}\n\nconst customTypes = (customs: any, types: any) => {\n  const dict = toDictionary(\n    customs,\n    (x: any) => x.name,\n    x => ({\n      ...x,\n      fields: toDictionary(x.fields, (f: any) => f.name, f => f.type),\n    })\n  )\n  ;(types as any[]).forEach(type => (dict[type.new_type_name] = type.type))\n\n  return dict\n}\n\nexport class EosContract {\n  public eos: any = null;\n\n  public abi: any = null;\n  public custom: any = null;\n\n  constructor(eos: any) {\n    this.eos = eos;\n  }\n\n  assignContract = async (contractName: string) => {\n    const abi = await this.eos.getAbi(contractName)\n\n    if (abi) {\n      this.abi = abi\n      this.custom = customTypes(this.abi.abi.structs, this.abi.abi.types)\n\n      return contractName\n    }\n\n    return null\n  }\n\n  getActions = () => {\n    return this.abi.abi.actions\n  }\n\n  getMethodFields = (method: string) => {\n    console.log(expand(method, this.custom))\n    return expand(method, this.custom)\n  }\n\n  getMethodAbi = (method: string) => {\n    return this.custom[method].fields\n  }\n}","import axios from 'axios'\nimport Eos from \"eosjs\"\nimport { getBcNetByChainId } from '../blockchains'\nimport { IWalletEos } from '../../store/wallets/types';\n\nexport { EosContract } from './contract'\n\nexport const getInfo = (wallet: IWalletEos) => {\n    const net = getBcNetByChainId(wallet.blockchain, wallet.chainId as string)\n\n    if (net.sign === 'testnet') {\n      return axios.get(`${net.apiExplorerUrl}/v1/history/get_actions/${wallet.address}?limit=100&skip=0`)\n        .then(res => res.data)\n        .then(result => ({ txs: result.actions }))\n    }\n\n    return axios.post(\n      `${net.apiExplorerUrl}/v1/history/get_actions`,\n      {\n        account_name: wallet.address,\n        offset: -100,\n        pos: -1\n      }\n    ).then(res => res.data)\n    .then(result => ({ txs: result.actions.map((item: any) => item.action_trace) }))\n  }\n;\n\nexport const getEos = (wallet: IWalletEos) => {\n  const net = getBcNetByChainId(wallet.blockchain, wallet.chainId as string)\n\n  return Eos({\n    httpEndpoint: net.url,\n    chainId: wallet.chainId,\n  })\n}\n\nexport const sendTx = async (wallet: IWalletEos, signedTx: string) => {\n  const eos = getEos(wallet);\n  const txHash = await eos.pushTransaction(signedTx);\n  console.log('txHash:', txHash)\n\n  return txHash.transaction_id\n}\n\nexport async function getTxHeaders(wallet: IWalletEos)\n{\n  const eos = getEos(wallet);\n\n  const info = await eos.getInfo({})\n\n  const expireInSeconds = 60 * 60 // 1 hour\n\n  const chainDate = new Date(info.head_block_time + 'Z')\n  const expiration = new Date(chainDate.getTime() + expireInSeconds * 1000).toISOString().split('.')[0]\n\n  const block = await eos.getBlock(info.last_irreversible_block_num)\n\n  const transactionHeaders = {\n    expiration,\n    ref_block_num: info.last_irreversible_block_num & 0xFFFF,\n    ref_block_prefix: block.ref_block_prefix\n  }\n\n  return transactionHeaders\n}","import { IUints, IInts, IBytes, IFixed, IUfixed } from './eth-abi-types'\n\nexport type IAbiArgumentType =\n  | 'string'\n  | 'address'\n  | 'bool'\n  | 'function'\n  | IUints\n  | IInts\n  | IFixed\n  | IBytes\n  | IUfixed\nexport interface IAbiArgument {\n  name: string\n  type: IAbiArgumentType\n  components?: IAbiArgument[]\n}\nexport interface IAbiEventInput extends IAbiArgument {\n  indexed: boolean\n}\nexport type IStateMutability = 'pure' | 'view' | 'nonpayable' | 'payable'\nexport interface IAbiFunctionEntry {\n  type?: 'function'\n  name: string\n  inputs: IAbiArgument[]\n  outputs?: IAbiArgument[]\n  stateMutability: IStateMutability\n  // payable?: boolean // deprecated\n  // constant?: boolean // deprecated\n}\nexport interface IAbiEventEntry {\n  type: 'event'\n  name: string\n  inputs: IAbiEventInput[]\n  anonymous: boolean\n}\nexport interface IAbiConstructorEntry {\n  type: 'constructor'\n  inputs: IAbiArgument[]\n  stateMutability: IStateMutability\n}\nexport interface IAbiFallbackEntry {\n  type: 'fallback'\n  stateMutability: IStateMutability\n}\nexport type IAbiEntry =\n  | IAbiFallbackEntry\n  | IAbiFunctionEntry\n  | IAbiEventEntry\n  | IAbiConstructorEntry\nexport type ABI = IAbiEntry[]\n\nfunction isFunction(abiEntry: IAbiEntry): abiEntry is IAbiFunctionEntry {\n  return abiEntry.type === 'function'\n}\nexport function isEvent(abiEntry: IAbiEntry): abiEntry is IAbiEventEntry {\n  return abiEntry.type === 'event'\n}\n\nexport function methodSignature(abiEntry: IAbiFunctionEntry): string {\n  return `${abiEntry.name}(${abiEntry.inputs.map(x => x.type).join(',')})`\n}\n\nexport function getPublicMethodNames(abi: ABI): string[] {\n  // console.log(abi.filter(isFunction))\n  return abi.filter(isFunction).map(methodSignature)\n}\nexport function isPayable(abi: ABI, methodName: string): boolean {\n  let f = abi.filter(isFunction).find(x => methodSignature(x) === methodName)\n  if (!f) throw new Error('function not found')\n\n  return f.stateMutability === 'payable'\n}\nexport function getArguments(abi: ABI, methodName: string): IAbiArgument[] {\n  return abi.filter(isFunction).find(x => methodSignature(x) === methodName)!\n    .inputs\n}\n\nconst erc20: ABI = require('./erc20abi.json')\n\nexport function isErc20(abi: ABI): boolean {\n  return implementsInterface(abi, erc20)\n}\nexport function implementsInterface(abi: ABI, intrfc: ABI): boolean {\n  for (let i = 0; i < intrfc.length; i++) {\n    let entry = intrfc[i]\n    let exists = abi.some(x => entryEquals(entry, x))\n    // console.log(`[${entry.type}]${(entry as any).name || ''}: ${exists}`)\n    if (!exists) return false\n  }\n  return true\n}\nexport function entryEquals(e1: IAbiEntry, e2: IAbiEntry): boolean {\n  if (e1.type !== e2.type) return false\n  switch (e1.type) {\n    case 'event':\n      return eventEquals(e1, e2 as IAbiEventEntry)\n    case 'function':\n      return functionEquals(e1, e2 as IAbiFunctionEntry)\n    default:\n      throw new Error('Type not exist')\n  }\n}\nexport function functionEquals(\n  f1: IAbiFunctionEntry,\n  f2: IAbiFunctionEntry\n): boolean {\n  // let str = (f: IAbiFunctionEntry) =>\n  //   `${f.name}(${f.inputs.map(x => x.type)}):${f.outputs!.map(x => x.type)}${\n  //     f.stateMutability\n  //   }`\n  // console.log(`comparing ${str(f1)} with ${str(f2)}`)\n  if (f1.name !== f2.name) return false\n\n  // TODO: temporary disabled (more research needed)\n  // if (f1.payable && !f2.payable) // if reference function is payable, second should also\n  // \treturn false               // be payable. doesn't matter otherwise.\n\n  if (!tupleEquivalent(f1.inputs, f2.inputs)) return false\n  if (!tupleEquivalent(f1.outputs!, f2.outputs!)) return false\n\n  return true\n}\nexport function eventEquals(e1: IAbiEventEntry, e2: IAbiEventEntry): boolean {\n  if (e1.name !== e2.name) return false\n  if (!tupleEquivalent(e1.inputs, e2.inputs)) return false\n\n  return true\n}\nexport function tupleEquivalent(\n  inputs1: { type: string }[],\n  inputs2: { type: string }[]\n): boolean {\n  if (inputs1.length !== inputs2.length) return false\n\n  for (let i = 0; i < inputs1.length; i++) {\n    if (inputs1[i].type !== inputs2[i].type) return false\n  }\n  return true\n}\n","import callApi from '../../utils/callApi'\nimport Web3 from 'web3'\n\nimport { getBcNetByChainId } from '../../helpers/blockchains'\nimport { IAbiArgumentType, getArguments, ABI } from './eth-contracts'\nimport { IWallet, IWalletEth } from '../../store/wallets/types'\n\nconst web3 = new Web3()\n\n\nexport function getEtherscanExploreUrl(chainId: string) {\n  return getBcNetByChainId('eth', chainId).explorerUrl\n}\n\nexport function getWeb3(chainId: string) {\n  web3.setProvider(\n    new Web3.providers.WebsocketProvider(getBcNetByChainId('eth', chainId).url)\n  )\n\n  return web3\n}\n\nexport async function getNonce(address: string, chainId: string): Promise<number> {\n  return getWeb3(chainId).eth.getTransactionCount(address)\n}\n\nexport async function sendTx(wallet: IWallet, tx: string): Promise<string> {\n  const result = await getWeb3(wallet.chainId as string).eth.sendSignedTransaction(tx)\n\n  return result.transactionHash\n}\n\nexport async function getTx(address: string, chainId: string) {\n  return callApi(\n    'get',\n    getBcNetByChainId('eth', chainId).apiExplorerUrl,\n    `/api?module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&page=1&offset=10&sort=asc&apikey=YourApiKeyToken`\n  )\n}\n\nexport async function getInfo(wallet: IWallet) {\n  const res = await getTx(wallet.address, wallet.chainId as string)\n  const nonce = await getNonce(wallet.address, wallet.chainId as string)\n\n  return {\n    txs: res.result,\n    nonce,\n  }\n}\n\nexport const getContractData = (wallet: IWalletEth, abi: ABI, method: string, args: string[]): string => {\n  const inputs = getArguments(abi, method)\n\n  return getWeb3(wallet.chainId as string).eth.abi.encodeFunctionCall({\n    name: method,\n    type: 'function',\n    inputs,\n  }, args);\n}\n\nexport const convertParamsToEth = (types: IAbiArgumentType[], params: any[]): string[] => types\n  .map((x,i) => [x, params[i]] as [string, any])\n  .map(x => web3.eth.abi.encodeParameter(x[0], x[1]))","export default function callApi(\n  method: string,\n  url: string,\n  path: string,\n  data?: any\n) {\n  return fetch(url + path, {\n    method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    mode: 'cors',\n    body: JSON.stringify(data),\n  }).then(res => res.json())\n}\n","import Web3 from 'web3'\nimport { getTxHeaders } from './eos'\nimport {\n  IEthTxFormValues,\n  IWalletEth,\n  IEosTxFormValues,\n  IEthContractFormValues,\n  IWalletEos,\n  IEosContractFormValues,\n  IWalletBase\n} from '../store/wallets/types'\nimport { getContractData, convertParamsToEth } from './eth/eth'\nimport { getArguments } from './eth/eth-contracts';\n\n// TODO: mobile app ignore blockchain array\nexport const getWalletListCommand = () => {\n  const params = { blockchains: ['eth', 'eos'] }\n  return {\n    id: 2,\n    method: 'getWalletList',\n    params,\n  }\n}\n\n\nexport async function getEthTransferTx(form: IEthTxFormValues, wallet: IWalletEth)\n{\n  return Promise.resolve({\n    gasPrice: Web3.utils.toWei(form.gasPrice.toString(), 'gwei'),\n    nonce: wallet.nonce,\n    to: form.to,\n    value: Web3.utils.toWei(form.amount.toString()),\n  })\n}\n\nexport async function getEosTransferTx(data: IEosTxFormValues, wallet: IWalletEos)\n{\n  const txHeaders = await getTxHeaders(wallet)\n  return {\n      method: 'transfer(from:name,to:name,quantity:asset,memo:string)',\n      transaction: {\n        ...txHeaders,\n        actions: [\n          {\n            name: 'transfer',\n            account: 'eosio.token',\n            authorization: [\n              {\n                actor: wallet.address,\n                permission: 'active',\n              },\n            ],\n            data: {\n              to: data.to,\n              from: wallet.address,\n              quantity: `${(+data.amount).toFixed(4) as string} EOS`,\n              memo: '',\n            },\n          },\n        ],\n      },\n    }\n}\n\nexport async function getEthContractParams (formData: IEthContractFormValues, wallet: IWalletEth) {\n  const tx  = {\n    gasPrice: Web3.utils.toWei(formData.gasPrice.toString(), \"gwei\"),\n    gasLimit: formData.gasLimit,\n    nonce: wallet.nonce,\n    to: formData.to,\n    data: getContractData(wallet, formData.abi, formData.method, formData.args)\n  };\n\n  const argsTypes = getArguments(formData.abi, formData.method).map(\n    item => item.type\n  );\n  const args = convertParamsToEth(argsTypes, formData.args);\n\n  const abi = { method: formData.method, args };\n\n  return Promise.resolve({ abi, wallet, tx })\n};\n\nexport async function getEosContractParams (formData: IEosContractFormValues, wallet: IWalletEos) {\n  const abi = Object.entries(formData.abi)\n      .map((params: string[]) => params.join(':'))\n      .join(',');\n\n    const walletBase: IWalletBase = {\n      address: wallet.address,\n      blockchain: wallet.blockchain,\n      chainId: wallet.chainId\n    }\n\n    const txHeaders = await getTxHeaders(wallet)\n    const tx = {\n      method: `${formData.method}(${abi})`,\n      transaction: {\n        ...txHeaders,\n        actions: [\n          {\n            name: formData.method,\n            account: formData.to,\n            authorization: [\n              {\n                actor: wallet.address,\n                permission: 'active',\n              },\n            ],\n            data: (formData as IEosContractFormValues).data\n          },\n        ],\n      },\n    }\n\n    return Promise.resolve({ abi, wallet: walletBase, tx })\n};","import { IHostCommand } from \"../../helpers/webrtc/hostproto\"\n\nexport enum TransportActionTypes {\n  SEND_TX = '@@transport/SEND_TX',\n  LOGIN = '@@transport/LOGIN',\n  SIGN_TX = '@@transport/SIGNTX',\n  CREATE_TX = '@@transport/CREATETX',\n\n  CREATE_ETH_TRANSFER = '@@transport/CREATE_ETH_TRANSFER',\n  CREATE_EOS_TRANSFER = '@@transport/CREATE_EOS_TRANSFER',\n  CREATE_ETH_CONTRACT = '@@transport/CREATE_ETH_CONTRACT',\n  CREATE_EOS_CONTRACT = '@@transport/CREATE_EOS_CONTRACT',\n\n  REMOTE_SIGN_TRANSFER = '@@transport/REMOTE_SIGN_TX',\n  REMOTE_SIGN_CONTRACT = '@@transport/REMOTE_SIGN_CONTRACT',\n\n\n  SET_RTC_SID = '@@transport/SET_RTC_SID',\n}\n\nexport interface ITransportState {\n  qrcodeData: string\n  lastWebrtcMsg: IHostCommand<unknown[], unknown> | null\n}\n","import { action } from 'typesafe-actions'\nimport { TransportActionTypes } from './types'\nimport { IEthTxFormValues, IEthContractFormValues, IEosTxFormValues, IEosContractFormValues } from '../wallets/types'\n\nexport const createEthTransfer = (formData: IEthTxFormValues) =>\n  action(TransportActionTypes.CREATE_ETH_TRANSFER, formData)\n\nexport const createEosTransfer = (formData: IEosTxFormValues) =>\n  action(TransportActionTypes.CREATE_EOS_TRANSFER, formData)\n\nexport const createEthContract = (formData: IEthContractFormValues) =>\n  action(TransportActionTypes.CREATE_ETH_CONTRACT, formData)\n\nexport const createEosContract = (formData: IEosContractFormValues) =>\n  action(TransportActionTypes.CREATE_EOS_CONTRACT, formData)\n\nexport const remoteSignTransferTx = (tx: unknown) =>\n  action(TransportActionTypes.REMOTE_SIGN_TRANSFER, tx)\n\nexport const remoteSignContractTx = (params: unknown) =>\n  action(TransportActionTypes.REMOTE_SIGN_CONTRACT, params)\n\nexport const signTransaction = (tx: string) =>\n  action(TransportActionTypes.SIGN_TX, tx)\n\nexport const sendTransaction = (tx: string) =>\n  action(TransportActionTypes.SEND_TX, tx)\n\nexport const login = (message: string) =>\n  action(TransportActionTypes.LOGIN, message)\n\nexport const setRtcSid = (sid: string) =>\n  action(TransportActionTypes.SET_RTC_SID, sid)\n","import {\n  parseHostMessage,\n  isMethodCall,\n  isError,\n  IHostCommandU,\n} from './hostproto'\n\nexport type Id = string | number | null\n\nexport function notify(\n  method: string,\n  params: {} | unknown[],\n  reduced: boolean = false\n) {\n  if (reduced) return `${method}||${JSON.stringify(params)}`\n\n  return jrpcs({\n    method,\n    params,\n  })\n}\nexport function error(id: Id | undefined, error: any) {\n  return jrpcs({\n    id,\n    error,\n  })\n}\nexport function result<T>(\n  id: Id | undefined,\n  result: T,\n  reduced: boolean = false\n) {\n  if (reduced) return `|${id}|${JSON.stringify(result)}`\n\n  return jrpcs({\n    id,\n    result,\n  })\n}\nexport function call(\n  method: string,\n  id: Id,\n  params: unknown | unknown[],\n  reduced: boolean = false\n) {\n  if (reduced) return `${method}|${id}|${JSON.stringify(params)}`\n\n  return jrpcs({\n    method,\n    id,\n    params,\n  })\n}\nexport function jrpc<\n  T extends { id?: string | number | null; method?: string }\n>(obj: T): T & { jsonrpc: '2.0' } {\n  return Object.assign({}, obj, { jsonrpc: '2.0' } as { jsonrpc: '2.0' })\n}\nexport function jrpcs<\n  T extends { id?: string | number | null; method?: string }\n>(obj: T) {\n  return JSON.stringify(jrpc(obj))\n}\n\nexport type RequestHandler = (\n  json: { id: Id; method: string; params: any[] | any },\n  callback: (err: any, result: any) => void\n) => void\n\nexport type RequestHandlerTuple<\n  TCmd extends IHostCommandU,\n  TRes\n> = [TCmd, (err: any, result: TRes) => void]\ntype RequestHandlerTupleU = RequestHandlerTuple<\n  IHostCommandU,\n  unknown\n>\n\nexport class JsonRpc {\n  public send: (msg: string) => void\n  public onRequest: RequestHandler\n\n  lastOutgoingMsgId: number = 1\n\n  listeners: { [id: number]: (err: any, json: any) => void } = {}\n\n  constructor(send: (msg: string) => void, onRequest: RequestHandler) {\n    this.send = send\n    this.onRequest = onRequest\n  }\n\n  private _callbacksQueue = [] as RequestHandler[]\n  private _messageQueue = [] as RequestHandlerTupleU[]\n  public switchToQueueMode() {\n    this.onRequest = (json, cb) => {\n      // console.log('*** 1')\n      if (this._callbacksQueue.length) {\n        // console.log('*** 2')\n        let m = this._callbacksQueue.shift()!\n        // console.log('*** 3')\n        m(json, cb)\n        // console.log('*** 4')\n      } else {\n        // console.log('*** 5')\n        this._messageQueue.push([json, cb])\n        // console.log('*** 6')\n      }\n    }\n  }\n  public async nextMessage(): Promise<RequestHandlerTupleU> {\n    if (this._messageQueue.length)\n      return Promise.resolve(this._messageQueue.shift()!)\n    else\n      return new Promise<RequestHandlerTupleU>((res, rej) =>\n        this._callbacksQueue.push((..._) => res(_))\n      )\n  }\n  public onMessage = (data: string) => {\n    // console.log('%%%! 1')\n    let json = parseHostMessage(data)\n    // console.log('%%%! 2')\n    if (!json)\n      return console.error(`JsonRpc: error parsing data!\\n${data}`)\n    \n    // console.log('%%%! 3')\n    let id = json.id as number\n    // console.log('%%%! 4')\n    if (isMethodCall(json)) {\n      // console.log('%%%! 5')\n      this.onRequest(json, (error, result) =>\n        (/* console.log('%%%! 6'),\n        console.log(this.send.toString()), */\n        this.send(\n          JSON.stringify({\n            id,\n            jsonrpc: '2.0',\n            ...(error ? { error } : { result }),\n          })\n        ))\n      )\n    } else if (this.listeners[id]) {\n      let m = this.listeners[id]\n      delete this.listeners[id]\n      if (isError(json))\n        m(json.error, undefined)\n      else\n        m(undefined, json.result)\n    }\n  }\n  public async ping() {\n    let response = await this.call('ping')\n    if (response != 'pong') throw 'JSON-RPC: unknown ping error!'\n  }\n  public async callRaw(method: string, args: {}): Promise<any> {\n    console.log(`JSON.RAW: ${method}(${JSON.stringify(args)})`)\n    return new Promise((res, rej) => {\n      let id = this.getNextMsgId()\n      this.listeners[id] = (err, msg) => (err ? rej(err) : res(msg))\n      console.log(`outgoing: ${call(method, id, args)}`)\n      this.send(call(method, id, args))\n    })\n  }\n  public async call(method: string, ...args: any[]): Promise<any> {\n    return this.callRaw(method, args)\n  }\n  getNextMsgId() {\n    return this.lastOutgoingMsgId++\n  }\n}\n","import { Id } from './jsonrpc'\n\nexport interface IHostCommand<\n  TArr extends TObj[keyof TObj][] | unknown[],\n  TObj\n> {\n  method: string\n  id: Id\n  params: TArr | TObj\n}\nexport type IHostCommandU = IHostCommand<unknown[], unknown>\nexport interface IHostError {\n  id?: Id\n  error: unknown\n}\nexport interface IHostResult<T> {\n  id: Id\n  result: T\n}\nexport type IJsonRpcMessage =\n  | IHostCommandU\n  | IHostResult<unknown>\n  | IHostError\n\nexport type IHCSimple<\n  T1 = unknown,\n  T2 = unknown,\n  T3 = unknown,\n  T4 = unknown,\n  T5 = unknown,\n  T6 = unknown,\n  T7 = unknown\n> = IHostCommand<\n  [\n    T1[keyof T1],\n    T2[keyof T2],\n    T3[keyof T3],\n    T4[keyof T4],\n    T5[keyof T5],\n    T6[keyof T6],\n    T7[keyof T7]\n  ],\n  T1 & T2 & T3 & T4 & T5 & T6 & T7\n>\n\nexport function isMethodCall(json: IJsonRpcMessage): json is IHostCommandU\n{\n  return \"method\" in json\n}\nexport function isResult(json: IJsonRpcMessage): json is IHostResult<unknown>\n{\n  return \"result\" in json\n}\nexport function isError(json: IJsonRpcMessage): json is IHostError\n{\n  return \"error\" in json\n}\n\nexport function parseHostMessage(msg: string): IJsonRpcMessage | undefined {\n  if (!msg) return undefined // empty message\n\n  if (msg.startsWith('{')) return JSON.parse(msg)\n\n  let regex = /^.*|.*|.*$/\n\n  if (!regex.test(msg)) return undefined // not enough data to parse\n\n  let [method, _id, data] = msg.split('|', 3).map(x => x || '')\n\n  let prefixLength = method.length + _id.length + data.length + 2\n  if (msg.length > prefixLength) data += msg.substr(prefixLength)\n\n  let id = _id.match(/^\\d+/) ? parseInt(_id) : _id\n\n  let params = JSON.parse(data || '[]')\n\n  if (!method)\n    return {\n      id,\n      result: params,\n    }\n\n  return {\n    method,\n    id,\n    params,\n  }\n}\nexport function arrayToObj<TArr extends any[], TObj>(\n  args: TArr,\n  mapping: (keyof TObj)[]\n): TObj {\n  return args.reduce((acc, cur, idx) => ((acc[mapping[idx]] = cur), acc), {})\n}\nexport function objToArray<TArr extends TObj[keyof TObj][], TObj extends {}>(\n  args: TObj,\n  mapping: (keyof TObj)[]\n): TArr {\n  return mapping.map(name => args[name]) as TArr\n}\nexport function allToObj<TObj>(\n  msg: IHostCommand<TObj[keyof TObj][], TObj>,\n  mapping: (keyof TObj)[]\n): TObj {\n  return Array.isArray(msg.params)\n    ? arrayToObj(msg.params, mapping)\n    : msg.params\n}\nexport function allToArray<TArr extends TObj[keyof TObj][], TObj>(\n  msg: IHostCommand<TArr, TObj>,\n  mapping: (keyof TObj)[]\n): TArr {\n  return Array.isArray(msg.params)\n    ? msg.params\n    : objToArray(msg.params, mapping)\n}\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { QrLogin } from '../components/organisms/QrLogin'\n\nimport { getWalletListCommand } from '../helpers/jsonrps'\nimport { login } from '../store/transport/actions'\nimport { IConnectedReduxProps, IApplicationState } from '../store'\nimport { call as prepareCall } from '../helpers/webrtc/jsonrpc'\n\n// TODO: map errorfrom qrcode state and show if we will have it\ninterface IPropsFromState {\n  search: string\n  qrcodeData: string\n}\n\ninterface IPropsFromDispatch {\n  scanLoginData: typeof login\n}\n\ntype AllProps = IPropsFromState &\n  IPropsFromDispatch &\n  IConnectedReduxProps &\n  RouteComponentProps\n\nclass LoginPage extends React.Component<AllProps> {\n  public render() {\n    const { search, scanLoginData, qrcodeData } = this.props\n\n    const isRtc = new URLSearchParams(search).get('rtc') === 'true'\n    let cmd = getWalletListCommand()\n    const value = isRtc\n      ? qrcodeData\n      : prepareCall(cmd.method, cmd.id, cmd.params, true)\n    return (\n      <React.Fragment>\n        <QrLogin\n          title={'Mobile Login'}\n          subtitle={'Scan QR code with Cold Crypto mobile app to login'}\n          value={value}\n          onScan={scanLoginData}\n          readonly={isRtc}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({ router, transport }: IApplicationState) => ({\n  search: router.location.search,\n  qrcodeData: transport.qrcodeData,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  scanLoginData: (data: string) => dispatch(login(data)),\n})\n\nexport const Login = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginPage)\n","import * as React from 'react'\nimport {\n  Row,\n  H2,\n  H3,\n  Column,\n  Hr,\n  ButtonBase,\n  ButtonSecondary,\n  Link,\n} from '../components/atoms'\n\nexport const Home: React.SFC<{}> = () => (\n  <div style={{ width: '38rem' }}>\n    <H2>Welcome!</H2>\n    <H3>Sign in to your wallet below</H3>\n    <Hr />\n\n    <Row>\n      <Column\n        style={{\n          width: '50%',\n          display: 'flex',\n          justifyContent: 'center',\n          paddingRight: '1rem',\n        }}\n      >\n        <Link to=\"/login\">\n          <ButtonBase>Airgapped login</ButtonBase>\n        </Link>\n      </Column>\n      <Column\n        style={{\n          width: '50%',\n          display: 'flex',\n          justifyContent: 'center',\n          paddingRight: '1rem',\n        }}\n      >\n        <Link to=\"/login?rtc=true\">\n          <ButtonSecondary>Online login</ButtonSecondary>\n        </Link>\n      </Column>\n    </Row>\n  </div>\n)\n","import * as React from 'react'\nimport styled, { keyframes } from 'react-emotion'\n\nexport const Loader = () => (\n  <LoadingOverlayInner>\n    <LoadingSpinner />\n  </LoadingOverlayInner>\n)\n\nconst LoadingSpinner: React.SFC = () => (\n  <Spinner>\n    <div className=\"cube1\" />\n    <div className=\"cube2\" />\n  </Spinner>\n)\n\nconst CubeMove = keyframes`\n  25% {\n    transform: translateX(42px) rotate(-90deg) scale(0.5);\n    -webkit-transform: translateX(42px) rotate(-90deg) scale(0.5);\n  } 50% {\n    transform: translateX(42px) translateY(42px) rotate(-179deg);\n    -webkit-transform: translateX(42px) translateY(42px) rotate(-179deg);\n  } 50.1% {\n    transform: translateX(42px) translateY(42px) rotate(-180deg);\n    -webkit-transform: translateX(42px) translateY(42px) rotate(-180deg);\n  } 75% {\n    transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);\n    -webkit-transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);\n  } 100% {\n    transform: rotate(-360deg);\n    -webkit-transform: rotate(-360deg);\n  }\n`\n\nconst Spinner = styled('div')`\n  margin: 100px auto;\n  width: 40px;\n  height: 40px;\n  position: relative;\n  & .cube1,\n  & .cube2 {\n    background-color: black;\n    width: 15px;\n    height: 15px;\n    position: absolute;\n    top: 0;\n    left: 0;\n    -webkit-animation: ${CubeMove} 1.8s infinite ease-in-out;\n    animation: ${CubeMove} 1.8s infinite ease-in-out;\n  }\n  & .cube2 {\n    -webkit-animation-delay: -0.9s;\n    animation-delay: -0.9s;\n  }\n`\nconst LoadingOverlayInner = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 200px;\n`\n","import { IHostCommandU } from '../../helpers/webrtc/hostproto'\nimport { IAbiEntry } from '../../helpers/eth/eth-contracts';\n\nexport interface IWalletBase extends ApiResponse {\n  blockchain: string\n  address: string\n  chainId: string | number\n  balance?: string\n}\n\nexport interface IWalletEth extends IWalletBase {\n  nonce: number\n  txs?: IEthTx[]\n}\n\n// TODO: autogenrate, validate this !!!!\nexport interface IEthTx {\n  blockHash: string\n  blockNumber: string\n  confirmations: string\n  contractAddress: string\n  cumulativeGasUsed: string\n  from: string\n  gas: string\n  gasPrice: string\n  gasUsed: string\n  hash: string\n  input: string\n  isError: string\n  nonce: string\n  timeStamp: number\n  to: string\n  transactionIndex: string\n  txreceipt_status: string\n  value: string\n}\n\nexport interface IEosTx {\n  act: any\n  block_time: string\n}\n\nexport interface IWalletEos extends IWalletBase {}\n\nexport type IWallet = IWalletBase | IWalletEos | IWalletEth\nexport type ApiResponse = Record<string, any>\n\nexport enum WalletsActionTypes {\n  FETCH_REQUEST = '@@wallets/FETCH_DATA_REQUEST',\n  FETCH_SUCCESS = '@@wallets/FETCH_DATA_SUCCESS',\n  FETCH_ERROR = '@@wallets/FETCH_DATA_ERROR',\n  ADD_WALLET = '@@wallets/ADD_WALLET',\n  SET_SENDING_TX_DATA = '@@wallets/SET_SENDING_TX_DATA',\n}\n\nexport interface IWalletsState {\n  readonly item: IWalletEth | IWalletEos\n  readonly items: IWalletEth[] | IWalletEos[]\n  readonly sendingTxData: ISendingTxData\n  readonly errors?: string\n  readonly loading: boolean\n}\n\nexport interface ISendingTxData {\n  command?: IHostCommandU\n  hash?: string\n  formData?: FormValues\n  error?: string\n}\n\nexport type FormValues = IEthTxFormValues \n  | IEthContractFormValues\n  | IEosTxFormValues\n  | IEosContractFormValues\n\nexport interface IEthTxFormValues {\n  to: string\n  gasPrice: number\n  data: string\n  amount: number\n}\n\nexport interface IEthContractFormValues {\n  to: string\n  abi: IAbiEntry[]\n  method: string\n  gasPrice: string\n  args: string[]\n  gasLimit: string\n}\n\nexport interface IEosTxFormValues {\n  to: string\n  memo: string\n  amount: number\n}\n\nexport interface IEosContractFormValues {\n  to: string\n  method: string\n  data: any\n  abi: string\n}","import { action } from 'typesafe-actions'\nimport {\n  WalletsActionTypes,\n  IWalletEth,\n  IWalletEos,\n  IWalletBase,\n  ISendingTxData,\n} from './types'\n\nexport const fetchRequest = () => action(WalletsActionTypes.FETCH_REQUEST)\nexport const fetchSuccess = (item: IWalletEth | IWalletEos) =>\n  action(WalletsActionTypes.FETCH_SUCCESS, item)\nexport const fetchError = (message: string) =>\n  action(WalletsActionTypes.FETCH_ERROR, message)\n\nexport const addWallet = (wallet: IWalletBase) =>\n  action(WalletsActionTypes.ADD_WALLET, wallet)\n\nexport const setSendingTxData = (data: ISendingTxData) =>\n  action(WalletsActionTypes.SET_SENDING_TX_DATA, data)\n","import styled from 'react-emotion'\n\nexport const OverflowTd = styled('td')({\n  maxWidth: '20vw',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n})\n\nexport const Table = styled('table')({\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  td: {\n    color: '#2e3d3f',\n    padding: '1rem .5rem',\n  },\n  th: {\n    color: '#457b9d',\n    padding: '.5rem',\n  },\n  tr: {\n    borderBottom: '1px solid #b2bcb9',\n  },\n  width: '100%',\n})\n","import * as React from 'react'\n\nimport { OverflowTd, Table } from './common'\nimport { A } from '../../components/atoms'\nimport { IEthTx, IWalletEth } from '../../store/wallets/types'\nimport { getEtherscanExploreUrl } from '../../helpers/eth/eth'\n\nexport const EthTx = (wallet: IWalletEth) => {\n  if (!wallet || !wallet.txs) {\n    return null\n  }\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>TxHash</th>\n          <th>Address</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {wallet.txs!.map((item: IEthTx, index: number) => (\n          <tr key={index}>\n            <td>{new Date(item.timeStamp * 1000).toLocaleString()}</td>\n            <OverflowTd>\n              <A\n                target=\"_blank\"\n                // TODO: make genrator explorer url for blockchains\n                href={`${getEtherscanExploreUrl(wallet.chainId as string)}/tx/${\n                  item.hash\n                }`}\n              >\n                {item.hash}\n              </A>\n            </OverflowTd>\n            <OverflowTd>{item.from}</OverflowTd>\n            <td>{item.value}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )\n}\n","import * as React from 'react'\nimport { IWalletBase, IWalletEth } from '../../store/wallets/types'\n\nimport { EthTx } from './eth'\nimport { EosTX } from './eos'\n\ninterface IProps {\n  wallet: IWalletBase | IWalletEth\n}\n\nexport const TXList: React.SFC<IProps> = ({ wallet }) => {\n  if (!wallet.txs) return <div />\n\n  if (wallet.blockchain === 'eth') {\n    return EthTx(wallet as IWalletEth)\n  }\n\n  if (wallet.blockchain === 'eos') {\n    return EosTX(wallet.txs)\n  }\n\n  return <div>hi</div>\n}\n","import * as React from 'react'\n\nimport { Table } from './common'\nimport { IEosTx } from '../../store/wallets/types'\n\nexport const EosTX = (txs: IEosTx[]) => {\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>Type</th>\n          <th>Act</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {txs.map((item: IEosTx, index: number) => (\n          <tr key={index}>\n            <td>{new Date(item.block_time).toLocaleString()}</td>\n            <td>{item.act.name}</td>\n            <td>\n              {item.act.name === 'transfer' &&\n                `${item.act.data.from} -> ${item.act.data.to}`}\n              {item.act.name === 'delegatebw' && `${item.act.data.from}`}\n              {item.act.name === 'buyrambytes' && `${item.act.data.payer}`}\n            </td>\n            <td>\n              {item.act.name === 'transfer' && `${item.act.data.quantity}`}\n              {item.act.name === 'delegatebw' && (\n                <React.Fragment>\n                  <span>{`CPU ${item.act.data.stake_cpu_quantity}`}</span>\n                  <br />\n                  <span>{`RAM ${item.act.data.stake_net_quantity}`}</span>\n                </React.Fragment>\n              )}\n              {item.act.name === 'buyrambytes' &&\n                `${item.act.data.bytes} bytes`}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )\n}\n","import * as React from 'react'\nimport styled from 'react-emotion'\nimport { Row, H2, Column, ButtonBase, H1, Hr } from '../components/atoms'\nimport { Loader } from '../components/Spinner'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState, IConnectedReduxProps } from '../store'\nimport { addWallet } from '../store/wallets/actions'\nimport { IWallet, IWalletBase } from '../store/wallets/types'\nimport { TXList } from './TXList'\nimport { getBcNetByChainId } from '../helpers/blockchains'\n\nconst TXListWrapper = styled('div')({\n  background: '#fff',\n  padding: '2rem',\n  boxShadow: '0px 0px 25px rgba(0, 0, 0, 0.04)',\n  borderRadius: '.8rem',\n})\n\nconst Net = styled('h3')`\n  margin: 0;\n  padding: 0;\n  font-weight: normal;\n  font-size: 14px;\n`\n\ninterface IPropsFromState {\n  loading: boolean\n  wallet: IWallet\n}\n\ninterface IPropsFromDispatch {\n  addWallet: typeof addWallet\n}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch & IConnectedReduxProps\n\nclass WalletPage extends React.Component<AllProps> {\n  public componentDidMount() {\n    const { wallet, addWallet: addWalletDispatch } = this.props\n\n    addWalletDispatch(wallet)\n  }\n\n  public render() {\n    const { wallet, loading } = this.props\n    const net = getBcNetByChainId(wallet.blockchain, wallet.chainId as string)\n    return (\n      <React.Fragment>\n        <Column>\n          <Row>\n            <Column style={{ flexBasis: '15rem', marginRight: '2rem' }}>\n              <Link to={`/wallets/${wallet.address}/tx/create`}>\n                <ButtonBase style={{ minWidth: '13rem' }}>\n                  Create New Tx\n                </ButtonBase>\n              </Link>\n              <Link to={`/wallets/${wallet.address}/contract/create`}>\n                <ButtonBase>Call Contract</ButtonBase>\n              </Link>\n            </Column>\n            <Column style={{ display: 'flex', justifyContent: 'center' }}>\n              <H1>{wallet.blockchain} Wallet</H1>\n              <H2>\n                <Address>{wallet.address}</Address>\n              </H2>\n              <Net>\n                Network: <b>{net.name}</b>\n              </Net>\n            </Column>\n          </Row>\n          <Hr />\n          <TXListWrapper>\n            <TXList wallet={wallet} />\n          </TXListWrapper>\n          {loading && <Loader />}\n        </Column>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  loading: wallets.loading,\n  wallet: wallets.item,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  addWallet: (wallet: IWalletBase) => dispatch(addWallet(wallet)),\n})\n\nexport const Wallet = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WalletPage)\n\nconst Address = styled('div')({\n  fontSize: '.8rem',\n  lineHeight: '1.5rem',\n})\n","export enum PriceActionTypes {\n  PRICE_GET = '@@price/PRICE_GET',\n  PRICE_SET = '@@price/PRICE_SET',\n}\n\nexport interface ICurrencyPrice {\n  symbol: string\n  price: number\n}\n\nexport interface IPriceState {\n  readonly eth: number\n  readonly eos: number\n}\n","import { action } from 'typesafe-actions'\nimport { PriceActionTypes, ICurrencyPrice } from './types'\n\nexport const priceGet = () => action(PriceActionTypes.PRICE_GET)\nexport const priceSet = (prices: ICurrencyPrice[]) => action(PriceActionTypes.PRICE_SET, prices)\n","import * as React from 'react'\nimport { Formik, FormikProps, Form, Field, FieldProps } from 'formik'\nimport {\n  Row,\n  H1,\n  Hr,\n  ButtonClose,\n  Column,\n  Label,\n  TextInput,\n  LabelAtop,\n  TextArea,\n  ButtonBase,\n  RangeInput,\n} from '../../components/atoms'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState } from '../../store'\nimport { IWallet, IEthTxFormValues } from '../../store/wallets/types'\nimport { createEthTransfer } from '../../store/transport/actions'\nimport { priceGet } from '../../store/price/actions'\nimport styled from 'react-emotion'\n\ninterface IPropsFromState {\n  wallet: IWallet\n  price: number\n}\n\ninterface IPropsFromDispatch {\n  createTx: typeof createEthTransfer\n  priceGet: typeof priceGet\n}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch\n\nclass CreateTxPage extends React.Component<AllProps, {}> {\n  componentDidMount() {\n    this.props.priceGet()\n  }\n\n  updatePrice = async (e: React.ChangeEvent<HTMLInputElement>, form: any) => {\n    const { name, value } = e.target\n\n    form.setFieldValue(name, value)\n    \n    if (!this.props.price) // don't do magic if price is 0 or NaN\n      return\n    \n    if (name === 'amount') {\n      form.setFieldValue('price', parseFloat(value || \"0\") * this.props.price)\n    } else {\n      form.setFieldValue('amount', parseFloat(value || \"0\") / this.props.price)\n    }\n  }\n\n  render() {\n    const { wallet, createTx } = this.props\n    return (\n      <React.Fragment>\n        <Row>\n          <H1>Send {wallet.blockchain}</H1>\n          <ButtonClose />\n        </Row>\n        <Hr />\n        <Formik\n          initialValues={{ to: '', gasPrice: 3, data: '', amount: 0 }}\n          onSubmit={(values: IEthTxFormValues) => createTx(values)}\n          render={(formikBag: FormikProps<IEthTxFormValues>) => (\n            <Form>\n              <Column>\n                <Label>To:</Label>\n                <Field\n                  name=\"to\"\n                  render={({ field, form }: FieldProps<IEthTxFormValues>) => (\n                    <TextInput type=\"text\" placeholder=\"Address\" {...field} />\n                  )}\n                />\n                <RowMargined>\n                  <Column>\n                    <Label>Enter amount:</Label>\n                    <Row>\n                      <LabelAtop label={wallet.blockchain}>\n                        <Field\n                          name=\"amount\"\n                          render={({\n                            field,\n                            form,\n                          }: FieldProps<IEthTxFormValues>) => (\n                            <TextInput\n                              type=\"number\"\n                              min=\"0\"\n                              name=\"amount\"\n                              step={(1e-18).toFixed(20)}\n                              value={field.value}\n                              onChange={e => this.updatePrice(e, form)}\n                            />\n                          )}\n                        />\n                      </LabelAtop>\n                      <img src=\"/icon-change.svg\" />\n                      <LabelAtop label=\"usd\">\n                        <Field\n                          name=\"price\"\n                          render={({\n                            field,\n                            form,\n                          }: FieldProps<IEthTxFormValues>) => (\n                            <TextInput\n                              type=\"number\"\n                              name=\"price\"\n                              step={(1e-18).toFixed(20)}\n                              value={field.value}\n                              onChange={e => this.updatePrice(e, form)}\n                            />\n                          )}\n                        />\n                      </LabelAtop>\n                    </Row>\n                  </Column>\n                </RowMargined>\n                <RowMargined>\n                  <Column>\n                    <Label>Description:</Label>\n                    <Field\n                      name=\"data\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEthTxFormValues>) => (\n                        <TextArea {...field} />\n                      )}\n                    />\n                  </Column>\n                </RowMargined>\n                <RowMargined>\n                  <Column>\n                    <Field\n                      name=\"gasPrice\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEthTxFormValues>) => (\n                        <React.Fragment>\n                          <Label>Gas price {field.value} GWEI</Label>\n                          <RangeInput type=\"range\" min=\"1\" max=\"7\" {...field} />\n                        </React.Fragment>\n                      )}\n                    />\n                    <Row>\n                      {/* // TODO: Calca gasprice and await time */}\n                      <span>gweiPrice</span>\n                      <span> {`< awaitTime min`}</span>\n                    </Row>\n                  </Column>\n                </RowMargined>\n                <ButtonBase type=\"submit\">Continue</ButtonBase>\n              </Column>\n            </Form>\n          )}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({ wallets, price }: IApplicationState) => ({\n  wallet: wallets.item,\n  price: price.eth,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  createTx: (data: IEthTxFormValues) => dispatch(createEthTransfer(data)),\n  priceGet: () => dispatch(priceGet()),\n})\n\nexport const CreateEthTx = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateTxPage)\n\nconst RowMargined = styled(Row)({\n  margin: '1rem 0',\n})\n","import * as React from 'react'\nimport { Formik, FormikProps, Form, Field, FieldProps } from 'formik'\nimport {\n  Row,\n  H1,\n  Hr,\n  ButtonClose,\n  Column,\n  Label,\n  TextInput,\n  LabelAtop,\n  TextArea,\n  ButtonBase,\n} from '../../components/atoms'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState } from '../../store'\nimport { IWallet, IEosTxFormValues } from '../../store/wallets/types'\nimport { createEosTransfer } from '../../store/transport/actions'\nimport { priceGet } from '../../store/price/actions'\nimport styled from 'react-emotion'\n\ninterface IPropsFromState {\n  wallet: IWallet\n  price: number\n}\n\ninterface IPropsFromDispatch {\n  createTx: typeof createEosTransfer\n  priceGet: typeof priceGet\n}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch\n\nclass CreateTxPage extends React.Component<AllProps, {}> {\n  componentDidMount() {\n    this.props.priceGet()\n  }\n\n  updatePrice = async (e: React.ChangeEvent<HTMLInputElement>, form: any) => {\n    const { name, value } = e.target\n\n    form.setFieldValue(name, value)\n    \n    if (!this.props.price) // don't do magic if price is 0 or NaN\n      return\n    \n    if (name === 'amount') {\n      form.setFieldValue('price', parseFloat(value || \"0\") * this.props.price)\n    } else {\n      form.setFieldValue('amount', parseFloat(value || \"0\") / this.props.price)\n    }\n  }\n\n  render() {\n    const { wallet, createTx } = this.props\n    return (\n      <React.Fragment>\n        <Row>\n          <H1>Send {wallet.blockchain}</H1>\n          <ButtonClose />\n        </Row>\n        <Hr />\n        <Formik\n          initialValues={{ to: '', memo: '', amount: 0 }}\n          onSubmit={(values: IEosTxFormValues) => createTx(values)}\n          render={(formikBag: FormikProps<IEosTxFormValues>) => (\n            <Form>\n              <Column>\n                <Label>To:</Label>\n                <Field\n                  name=\"to\"\n                  render={({ field, form }: FieldProps<IEosTxFormValues>) => (\n                    <TextInput type=\"text\" placeholder=\"Address\" {...field} />\n                  )}\n                />\n                <RowMargined>\n                  <Column>\n                    <Label>Enter amount:</Label>\n                    <Row>\n                      <LabelAtop label={wallet.blockchain}>\n                        <Field\n                          name=\"amount\"\n                          render={({\n                            field,\n                            form,\n                          }: FieldProps<IEosTxFormValues>) => (\n                            <TextInput\n                              type=\"number\"\n                              min=\"0\"\n                              name=\"amount\"\n                              step={(1e-4).toFixed(4)}\n                              value={field.value}\n                              onChange={e => this.updatePrice(e, form)}\n                            />\n                          )}\n                        />\n                      </LabelAtop>\n                      <img src=\"/icon-change.svg\" />\n                      <LabelAtop label=\"usd\">\n                        <Field\n                          name=\"price\"\n                          render={({\n                            field,\n                            form,\n                          }: FieldProps<IEosTxFormValues>) => (\n                            <TextInput\n                              type=\"number\"\n                              name=\"price\"\n                              step={(1e-4).toFixed(4)}\n                              value={field.value}\n                              onChange={e => this.updatePrice(e, form)}\n                            />\n                          )}\n                        />\n                      </LabelAtop>\n                    </Row>\n                  </Column>\n                </RowMargined>\n                <RowMargined>\n                  <Column>\n                    <Label>Description:</Label>\n                    <Field\n                      name=\"memo\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEosTxFormValues>) => (\n                        <TextArea {...field} />\n                      )}\n                    />\n                  </Column>\n                </RowMargined>\n                <ButtonBase type=\"submit\">Continue</ButtonBase>\n              </Column>\n            </Form>\n          )}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({ wallets, price }: IApplicationState) => ({\n  wallet: wallets.item,\n  price: price.eos,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  createTx: (data: IEosTxFormValues) => dispatch(createEosTransfer(data)),\n  priceGet: () => dispatch(priceGet()),\n})\n\nexport const CreateEosTx = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateTxPage as any)\n\nconst RowMargined = styled(Row)({\n  margin: '1rem 0',\n})\n","import * as React from 'react'\nimport { connect } from 'react-redux'\n\nimport { IApplicationState } from '../../store'\nimport { IWallet } from '../../store/wallets/types'\nimport { CreateEthTx } from './eth'\nimport { CreateEosTx } from './eos'\n\ninterface IPropsFromState {\n  wallet: IWallet\n}\n\nconst CreateTxPage: React.SFC<IPropsFromState> = ({ wallet }) => {\n  return (\n    <React.Fragment>\n      {wallet.blockchain === 'eth' && <CreateEthTx />}\n      {wallet.blockchain === 'eos' && <CreateEosTx />}\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  wallet: wallets.item,\n})\n\nexport const CreateTx = connect(\n  mapStateToProps,\n  null\n)(CreateTxPage)\n","import * as React from 'react'\nimport { QrLogin } from '../components/organisms/QrLogin'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState, IConnectedReduxProps } from '../store'\nimport { sendTransaction } from '../store/transport/actions'\nimport { call as prepareCall } from '../helpers/webrtc/jsonrpc'\nimport { IHostCommandU } from '../helpers/webrtc/hostproto'\n\ninterface IPropsFromState {\n  command: IHostCommandU\n}\n\ninterface IPropsFromDispatch {\n  sendTx: typeof sendTransaction\n}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch & IConnectedReduxProps\n\nconst SignPage: React.SFC<AllProps> = ({ command, sendTx }) => {\n  let scaned = false\n  const value = prepareCall(command.method, command.id, command.params, true)\n  const handleScan = (result: string) => {\n    if (!scaned) {\n      scaned = true\n      sendTx(result)\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <QrLogin\n        title={'Scan QR code with Cold Crypto mobile app to sign transaction'}\n        value={value || ''}\n        onScan={handleScan}\n      />\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  command: wallets.sendingTxData.command!,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  sendTx: (data: string) => dispatch(sendTransaction(data)),\n})\n\nexport const Sign = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignPage as any)\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState, IConnectedReduxProps } from '../store'\nimport { Row, H2, ButtonClose, H1, Hr } from '../components/atoms'\nimport styled from 'react-emotion'\n\ninterface IPropsFromState {\n  status: string\n}\n\ninterface IPropsFromDispatch {}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch & IConnectedReduxProps\n\nconst StatusPage: React.SFC<AllProps> = ({ status }) => (\n  <React.Fragment>\n    {status}\n    <Row>\n      <H1>Tx sent result</H1>\n      <ButtonClose />\n    </Row>\n    <Hr />\n    <LoadingText>Status : {status}</LoadingText>\n  </React.Fragment>\n)\n\nconst mapStateToProps = ({ webrtc }: IApplicationState) => ({\n  status: webrtc.status,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({})\n\nexport const Status = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StatusPage)\n\nconst LoadingText = styled(H2)`\n  &:after {\n    content: ' .';\n    animation: dots 1s steps(5, end) infinite;\n  }\n\n  @keyframes dots {\n    0%,\n    20% {\n      color: rgba(0, 0, 0, 0);\n      text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);\n    }\n    40% {\n      color: black;\n      text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);\n    }\n    60% {\n      text-shadow: 0.25em 0 0 black, 0.5em 0 0 rgba(0, 0, 0, 0);\n    }\n    80%,\n    100% {\n      text-shadow: 0.25em 0 0 black, 0.5em 0 0 black;\n    }\n  }\n`\n","import { H1, H2, Row, ButtonClose, Hr } from '../components/atoms'\nimport styled from 'react-emotion'\nimport * as React from 'react'\nimport { connect } from 'react-redux'\nimport { IApplicationState, IConnectedReduxProps } from '../store'\nimport { ISendingTxData, IWalletBase, IWallet } from '../store/wallets/types'\nimport { getBcNetByChainId } from '../helpers/blockchains'\n\ninterface IPropsFromState {\n  sendingData: ISendingTxData\n  wallet: IWalletBase\n}\n\ntype AllProps = IPropsFromState & IConnectedReduxProps\n\nconst getExplrUrl = (wallet: IWallet, hash: string | undefined) => {\n  return `${\n    getBcNetByChainId(wallet.blockchain, wallet.chainId as string).explorerUrl\n  }/tx/${hash}`\n}\n\nconst TxViewPage: React.SFC<AllProps> = ({\n  sendingData: { formData, hash, error },\n  wallet,\n}) => {\n  return (\n    <React.Fragment>\n      <Row>\n        <H1>Tx sent result</H1>\n        <ButtonClose />\n      </Row>\n      <Hr />\n      {error ? (\n        <H2>Error : {error}</H2>\n      ) : (\n        <div>\n          <H2>To : {formData!.to}</H2>\n          <a target=\"_blank\" href={getExplrUrl(wallet, hash)}>\n            {hash}\n          </a>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  sendingData: wallets.sendingTxData,\n  wallet: wallets.item,\n})\n\nexport const TxView = connect(mapStateToProps)(TxViewPage)\n\nexport const Container = styled('main')({\n  alignItems: 'center',\n  background: '#f1faee',\n  display: 'flex',\n  justifyContent: 'center',\n  minHeight: 'calc(100vh - 8rem - 4vh)',\n  width: '100vw',\n})\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\n\nimport { createEthContract } from '../../store/transport/actions'\nimport { IEthContractFormValues } from '../../store/wallets/types'\n\nimport {\n  Formik,\n  FormikProps,\n  Form,\n  Field,\n  FieldProps,\n  FieldArray,\n  ArrayHelpers,\n} from 'formik'\n\nimport {\n  Column,\n  Label,\n  TextInput,\n  RangeInput,\n  ButtonBase,\n  Row,\n  Wrap,\n  SelectOptions,\n  H1,\n  Hr,\n} from '../../components/atoms'\nimport {\n  getPublicMethodNames,\n  IAbiEntry,\n  getArguments,\n  IAbiArgument,\n} from '../../helpers/eth/eth-contracts'\n\ninterface IPropsFromDispatch {\n  createTx: typeof createEthContract\n}\n\ninterface IStateProps {\n  publicMethodNames: string[]\n  methodArgs: IAbiArgument[]\n}\n\ntype AllProps = IPropsFromDispatch\n\nclass CreateEthContractPage extends React.Component<AllProps, IStateProps> {\n  constructor(props: AllProps) {\n    super(props)\n\n    this.state = {\n      publicMethodNames: [],\n      methodArgs: [],\n    }\n  }\n\n  handleOnChangeAbi = async (\n    e: React.ChangeEvent<HTMLInputElement>,\n    form: any\n  ) => {\n    if (!e.target.files) {\n      return\n    }\n\n    let file = e.target.files[0]\n    const reader = new FileReader()\n\n    reader.readAsText(file)\n    const result = (await new Promise(resolve => {\n      reader.onload = () => {\n        resolve(JSON.parse(reader.result as string))\n      }\n    })) as IAbiEntry[]\n\n    form.setFieldValue('abi', result)\n\n    const publicMethodNames = getPublicMethodNames(result)\n    this.setState({ publicMethodNames })\n  }\n\n  render() {\n    const { publicMethodNames, methodArgs } = this.state\n    const { createTx } = this.props\n    return (\n      <React.Fragment>\n        <Formik\n          initialValues={{\n            to: '',\n            abi: [],\n            method: '',\n            gasPrice: '5',\n            gasLimit: '300000',\n            args: [],\n          }}\n          onSubmit={(values: IEthContractFormValues) => createTx(values)}\n          render={(formikBag: FormikProps<IEthContractFormValues>) => (\n            <Form style={{ width: 600 }}>\n              <Column>\n                <Row>\n                  <H1>Call Contract ETH</H1>\n                </Row>\n                <Hr />\n                <Row>\n                  <Column style={{ flexBasis: '65%', marginRight: '5%' }}>\n                    <Label>Address:</Label>\n                    <Field\n                      name=\"to\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEthContractFormValues>) => (\n                        <TextInput\n                          type=\"text\"\n                          placeholder=\"Address\"\n                          {...field}\n                        />\n                      )}\n                    />\n                  </Column>\n                  <Column style={{ flexBasis: '30%' }}>\n                    <Label>Select from computer:</Label>\n                    <div style={{ flexBasis: '30%', position: 'relative' }}>\n                      <ButtonBase>Upload ABI</ButtonBase>\n                      <Field\n                        name=\"abi\"\n                        render={({\n                          field,\n                          form,\n                        }: FieldProps<IEthContractFormValues>) => (\n                          <TextInput\n                            type=\"file\"\n                            name={field.name}\n                            onBlur={field.onBlur}\n                            onChange={e => this.handleOnChangeAbi(e, form)}\n                            style={{\n                              position: 'absolute',\n                              left: 0,\n                              top: 0,\n                              opacity: 0,\n                            }}\n                          />\n                        )}\n                      />\n                    </div>\n                    <Wrap vertical={1} />\n                  </Column>\n                </Row>\n                <Row>\n                  <Column style={{ flexBasis: '65%', marginRight: '5%' }}>\n                    <Label>Method:</Label>\n                    <Field\n                      name=\"method\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEthContractFormValues>) => (\n                        <SelectOptions\n                          {...field}\n                          onChange={(e: any) => {\n                            form.setFieldValue('method', e.target.value)\n                            const args = getArguments(\n                              form.values.abi,\n                              e.target.value\n                            )\n                            form.setFieldValue(\n                              'args',\n                              new Array(args.length).fill('')\n                            )\n                            this.setState({ methodArgs: args })\n                          }}\n                        >\n                          <option value=\"\">Select method</option>\n                          {publicMethodNames.map(item => (\n                            <option key={item} value={item}>\n                              {item}\n                            </option>\n                          ))}\n                        </SelectOptions>\n                      )}\n                    />\n                    <Wrap vertical={1} />\n                    <FieldArray\n                      name=\"args\"\n                      render={({\n                        form,\n                      }: ArrayHelpers & {\n                        form: FormikProps<IEthContractFormValues>\n                      }) =>\n                        form.values.args &&\n                        form.values.args.length > 0 && (\n                          <React.Fragment>\n                            <Label>Parameters:</Label>\n                            {form.values.args.map((arg, index: number) => (\n                              <Field\n                                key={index}\n                                name={`args[${index}`}\n                                render={({\n                                  field,\n                                }: FieldProps<IEthContractFormValues>) => (\n                                  <TextInput\n                                    type=\"text\"\n                                    placeholder={methodArgs[index].name}\n                                    {...field}\n                                  />\n                                )}\n                              />\n                            ))}\n                          </React.Fragment>\n                        )\n                      }\n                    />\n                  </Column>\n                  <Column style={{ flexBasis: '30%', textAlign: 'left' }}>\n                    <Wrap horizontal={0}>\n                      <Label>Estimated GAS: {formikBag.values.gasLimit}</Label>\n                      <Wrap vertical={1} />\n                      <Label>GAS price: {formikBag.values.gasPrice} GWEI</Label>\n                      <Field\n                        name=\"gasPrice\"\n                        render={({\n                          field,\n                          form,\n                        }: FieldProps<IEthContractFormValues>) => (\n                          <RangeInput\n                            type=\"range\"\n                            placeholder=\"Address\"\n                            {...field}\n                            min=\"1\"\n                            max=\"7\"\n                          />\n                        )}\n                      />\n                    </Wrap>\n                  </Column>\n                </Row>\n                <ButtonBase type=\"submit\">Continue</ButtonBase>\n              </Column>\n            </Form>\n          )}\n        />\n      </React.Fragment>\n    )\n  }\n}\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  createTx: (data: any) => dispatch(createEthContract(data)),\n})\n\nexport const CallEthContract = connect(\n  null,\n  mapDispatchToProps\n)(CreateEthContractPage)\n","export const formToJson = (form: any) => {\n  const data = new FormData(form);\n  const object = {};\n\n  data.forEach((value, key) => {\n    if (object[key]) {\n      if (Array.isArray(object[key])) {\n        object[key].push(value);\n      } else {\n        object[key] = [object[key], value];\n      }\n    } else {\n      object[key] = value;\n    }\n  });\n\n  return object;\n};","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport styled from 'react-emotion'\nimport { css } from 'emotion'\nimport { createEosContract } from '../../store/transport/actions'\nimport { IEosContractFormValues, IWalletEos } from '../../store/wallets/types'\nimport {\n  H2,\n  H3,\n  Column,\n  Label,\n  TextInput,\n  ButtonBase,\n  Row,\n  SelectOptions,\n} from '../../components/atoms'\n\nimport { getEos, EosContract } from '../../helpers/eos'\nimport { formToJson } from '../../helpers/func'\nimport { IApplicationState } from '../../store'\n\nconst Error = styled('div')`\n  margin-top: 10px;\n  font-weight: bold;\n`\n\nconst styles = {\n  offtop: css`\n    margin-top: 25px;\n  `,\n  select: css`\n    padding: 0.8rem 1rem;\n  `,\n}\n\ninterface IPropsFromDispatch {\n  createTx: typeof createEosContract\n  wallet: IWalletEos\n}\n\ninterface IStateProps {\n  address: string\n  contract: EosContract | null\n  action: string\n  error: string\n}\n\ntype AllProps = IPropsFromDispatch\n\nclass CreateEosContractPage extends React.Component<AllProps, IStateProps> {\n  constructor(props: AllProps) {\n    super(props)\n\n    this.state = {\n      address: '',\n      contract: null,\n      action: '',\n      error: '',\n    }\n  }\n\n  handleChangeAddress = async (e: any) => {\n    const value = e.target.value\n\n    this.setState({\n      address: value,\n    })\n  }\n\n  handleSubmit = async (e: any) => {\n    e.preventDefault()\n\n    try {\n      const eos = getEos(this.props.wallet)\n      const contract = new EosContract(eos)\n\n      if (await contract.assignContract(this.state.address)) {\n        this.setState({\n          contract,\n        })\n      }\n    } catch (e) {\n      this.setState({\n        error: 'Contract not found',\n      })\n    }\n  }\n\n  handleConfirm = (e: any) => {\n    e.preventDefault()\n\n    const data = formToJson(e.target)\n    this.props.createTx({\n      to: this.state.address,\n      method: this.state.action,\n      data,\n      abi: this.state.contract!.getMethodAbi(this.state.action),\n    })\n  }\n\n  handleMethodSelect = (e: any) => {\n    const value = e.target.value\n    this.setState({\n      action: value,\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {!this.state.contract && (\n          <form onSubmit={this.handleSubmit}>\n            <H2>Call Contract EOS</H2>\n            <Column>\n              <Row>\n                <Column style={{ flexBasis: '100%', marginRight: '0%' }}>\n                  <TextInput\n                    type=\"text\"\n                    placeholder=\"contract name\"\n                    value={this.state.address}\n                    onChange={this.handleChangeAddress}\n                  />\n                </Column>\n              </Row>\n              <Row>{this.state.error && <Error>{this.state.error}</Error>}</Row>\n              <Column\n                style={{ width: '40%', marginLeft: '30%', marginTop: '50px' }}\n              >\n                <ButtonBase type=\"submit\">Find contract</ButtonBase>\n              </Column>\n            </Column>\n          </form>\n        )}\n        {this.state.contract && (\n          <React.Fragment>\n            <H2>Call Contract EOS</H2>\n            <H3>{this.state.address}</H3>\n            <Row className={styles.offtop}>\n              <Column>\n                <Label>Contract method:</Label>\n                <SelectOptions\n                  onChange={this.handleMethodSelect}\n                  name=\"method\"\n                  className={styles.select}\n                >\n                  <option value=\"\">Select method</option>\n                  {this.state.contract.getActions().map((item: any) => (\n                    <option key={item.type} value={item.type}>\n                      {item.name}\n                    </option>\n                  ))}\n                </SelectOptions>\n              </Column>\n            </Row>\n            <form onSubmit={this.handleConfirm}>\n              {this.state.action && (\n                <React.Fragment>\n                  <H3 className={styles.offtop}>Parameters:</H3>\n                  {Object.entries(\n                    this.state.contract.getMethodFields(this.state.action)\n                  ).map((item: any[]) => {\n                    return (\n                      <Row key={item[0]}>\n                        <Column>\n                          <Label>{item[0]}:</Label>\n                          <TextInput\n                            name={item[0]}\n                            type=\"text\"\n                            placeholder={item[0]}\n                          />\n                        </Column>\n                      </Row>\n                    )\n                  })}\n                </React.Fragment>\n              )}\n              {this.state.action && (\n                <ButtonBase type=\"submit\" className={styles.offtop}>\n                  Sign\n                </ButtonBase>\n              )}\n            </form>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  wallet: wallets.item,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  createTx: (data: IEosContractFormValues) => dispatch(createEosContract(data)),\n})\n\nexport const CallEosContract = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateEosContractPage)\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { IApplicationState } from '../../store'\n\nimport { IWalletBase } from '../../store/wallets/types'\n\nimport { CallEthContract } from './eth'\nimport { CallEosContract } from './eos'\n\ninterface IPropsFromDispatch {\n  wallet: IWalletBase\n}\n\ntype AllProps = IPropsFromDispatch\n\nclass ContractPage extends React.Component<AllProps, {}> {\n  render() {\n    const { wallet } = this.props\n\n    switch (wallet.blockchain) {\n      case 'eth':\n        return <CallEthContract />\n      case 'eos':\n        return <CallEosContract />\n    }\n    return null\n  }\n}\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  wallet: wallets.item,\n})\n\nexport const CallContract = connect(mapStateToProps)(ContractPage)\n","import * as React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport { DefaultLayout, MainLayout, ModalLayout } from './components/layouts'\nimport {\n  Login,\n  Home,\n  Wallet,\n  CreateTx,\n  Sign,\n  Status,\n  TxView,\n  CallContract,\n} from './pages'\n\nexport const Routes: React.SFC = () => {\n  return (\n    <div>\n      <Switch>\n        <DefaultLayout exact path=\"/\" component={Home} />>\n        <DefaultLayout path=\"/login\" component={Login} />\n        <MainLayout>\n          <Route exact path=\"/wallets/:id\" component={Wallet} />\n          <ModalLayout path=\"/wallets/:id/tx/create\" component={CreateTx} />\n          <ModalLayout path=\"/wallets/:id/contract/create\" component={CallContract} />\n          <ModalLayout path=\"/wallets/:id/tx/sign\" component={Sign} />\n          <ModalLayout path=\"/tx/:id\" component={TxView} />\n          <ModalLayout path=\"/status\" component={Status} />        \n        </MainLayout>\n      </Switch>\n    </div>\n  )\n}\n","import { ITheme } from '../utils/styled'\n\n//for example\nexport const theme: ITheme = {\n  colors: {\n    background: '#000000',\n    body: '#2e2e2c',\n    black: '#000000',\n    white: '#2e2e2c',\n  },\n  fontSizes: {\n    h1: '2.441rem',\n    h2: '1.953rem',\n    h3: '1.563rem',\n    h4: '1.25rem',\n  },\n  breakpoints: {\n    xs: '0px',\n    sm: '576px',\n    md: '768px',\n    lg: '992px',\n    xl: '1200px',\n  },\n  widths: {\n    md: '720px',\n    lg: '960px',\n    xl: '1140px',\n  },\n}\n","import { css } from 'react-emotion'\n\nexport default css`\n  /*! modern-normalize | MIT License | https://github.com/sindresorhus/modern-normalize */\n  /* Document\n    ========================================================================== */\n  /**\n  * Use a better box model (opinionated).\n  */\n  html {\n    box-sizing: border-box;\n  }\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n  /**\n  * Use a more readable tab size (opinionated).\n  */\n  :root {\n    -moz-tab-size: 4;\n    tab-size: 4;\n  }\n  /**\n  * Correct the line height in all browsers.\n  */\n  html {\n    line-height: 1.15;\n  }\n  /* Sections\n    ========================================================================== */\n  /**\n  * Remove the margin in all browsers.\n  */\n  body {\n    margin: 0;\n  }\n  /**\n  * Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  */\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n      Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\n      'Segoe UI Symbol';\n  }\n  /**\n  * Correct the font size and margin on \\`h1\\` elements within \\`section\\` and\n  * \\`article\\` contexts in Chrome, Firefox, and Safari.\n  */\n  h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n  }\n  /* Grouping content\n    ========================================================================== */\n  /**\n  * Add the correct height in Firefox.\n  */\n  hr {\n    height: 0;\n  }\n  /* Text-level semantics\n    ========================================================================== */\n  /**\n  * Add the correct text decoration in Chrome, Edge, and Safari.\n  */\n  abbr[title] {\n    text-decoration: underline dotted;\n  }\n  /**\n  * Add the correct font weight in Chrome, Edge, and Safari.\n  */\n  b,\n  strong {\n    font-weight: bolder;\n  }\n  /**\n  * 1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  * 2. Correct the odd \\`em\\` font sizing in all browsers.\n  */\n  code,\n  kbd,\n  samp,\n  pre {\n    font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier,\n      monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n  /**\n  * Add the correct font size in all browsers.\n  */\n  small {\n    font-size: 80%;\n  }\n  /**\n  * Prevent \\`sub\\` and \\`sup\\` elements from affecting the line height in\n  * all browsers.\n  */\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  sup {\n    top: -0.5em;\n  }\n  /* Forms\n    ========================================================================== */\n  /**\n  * 1. Change the font styles in all browsers.\n  * 2. Remove the margin in Firefox and Safari.\n  */\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 1 */\n    line-height: 1.15; /* 1 */\n    margin: 0; /* 2 */\n  }\n  /**\n  * Remove the inheritance of text transform in Edge and Firefox.\n  * 1. Remove the inheritance of text transform in Firefox.\n  */\n  button,\n  select {\n    /* 1 */\n    text-transform: none;\n  }\n  /**\n  * Correct the inability to style clickable types in iOS and Safari.\n  */\n  button,\n  [type='button'],\n  [type='reset'],\n  [type='submit'] {\n    -webkit-appearance: button;\n  }\n  /**\n  * Remove the inner border and padding in Firefox.\n  */\n  button::-moz-focus-inner,\n  [type='button']::-moz-focus-inner,\n  [type='reset']::-moz-focus-inner,\n  [type='submit']::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n  /**\n  * Restore the focus styles unset by the previous rule.\n  */\n  button:-moz-focusring,\n  [type='button']:-moz-focusring,\n  [type='reset']:-moz-focusring,\n  [type='submit']:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n  /**\n  * Correct the padding in Firefox.\n  */\n  fieldset {\n    padding: 0.35em 0.75em 0.625em;\n  }\n  /**\n  * Remove the padding so developers are not caught out when they zero out\n  *    \\`fieldset\\` elements in all browsers.\n  */\n  legend {\n    padding: 0;\n  }\n  /**\n  * Add the correct vertical alignment in Chrome and Firefox.\n  */\n  progress {\n    vertical-align: baseline;\n  }\n  /**\n  * Correct the cursor style of increment and decrement buttons in Chrome.\n  */\n  [type='number']::-webkit-inner-spin-button,\n  [type='number']::-webkit-outer-spin-button {\n    height: auto;\n  }\n  /**\n  * 1. Correct the odd appearance in Chrome and Safari.\n  * 2. Correct the outline style in Safari.\n  */\n  [type='search'] {\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n  }\n  /**\n  * Remove the inner padding in Chrome and Safari on macOS.\n  */\n  [type='search']::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  /**\n  * 1. Correct the inability to style clickable types in iOS and Safari.\n  * 2. Change font properties to \\`inherit\\` in Safari.\n  */\n  ::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n  }\n  /* Interactive\n    ========================================================================== */\n  /*\n  * Add the correct display in Edge and Firefox.\n  */\n  details {\n    display: block;\n  }\n  /*\n  * Add the correct display in all browsers.\n  */\n  summary {\n    display: list-item;\n  }\n`\n","import { css } from 'react-emotion'\n\nexport default css`\n  @font-face {\n    font-family: 'GothamPro';\n    src: url(GothamPro.woff);\n  }\n  html,\n  body {\n    font-family: 'GothamPro', 'Lato', 'Arial', sans-serif;\n    margin: 0;\n  }\n  #root {\n    height: 100%;\n  }\n  input[type=range] {\n    -webkit-appearance: none;\n    margin: 18px 0;\n    width: 100%;\n  }\n  input[type=range]:focus {\n    outline: none;\n  }\n  input[type=range]::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 3px;\n    cursor: pointer;\n    animate: 0.2s;\n    box-shadow: none;\n    background: #736C82;\n    border-radius: 1.3px;\n    border: 0;\n  }\n  input[type=range]::-webkit-slider-thumb {\n    box-shadow: none;\n    border: 0;\n    height: 16px;\n    width: 16px;\n    border-radius: 50%;\n    background: #00BCF9;\n    cursor: pointer;\n    -webkit-appearance: none;\n    margin-top: -6px;\n  }\n  input[type=range]:focus::-webkit-slider-runnable-track {\n    background: #736C82;\n  }\n  input[type=range]::-moz-range-track {\n    width: 100%;\n    height: 8.4px;\n    cursor: pointer;\n    animate: 0.2s;\n    box-shadow: none;\n    background: #736C82;\n    border-radius: 1.3px;\n    border: 0;\n  }\n  input[type=range]::-moz-range-thumb {\n    box-shadow: none;\n    border: 0;\n    height: 36px;\n    width: 16px;\n    border-radius: 3px;\n    background: #00BCF9;\n    cursor: pointer;\n  }\n`\n","import { injectGlobal } from 'react-emotion'\nimport normalize from './normalize'\nimport globals from './globals'\n\n// tslint:disable-next-line:no-unused-expression\ninjectGlobal`\n  ${normalize}\n  ${globals}\n`\n","import * as React from 'react'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { Store } from 'redux'\nimport { History } from 'history'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport { Routes } from './routes'\nimport { IApplicationState } from './store'\nimport { theme } from './styles/theme'\nimport './styles'\n\n\ninterface IOwnProps {\n  store: Store<IApplicationState>\n  history: History\n}\n\ntype AllProps = IOwnProps\n\nexport class App extends React.Component<AllProps> {\n  public render() {\n    const { store, history } = this.props\n\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <ThemeProvider theme={theme}>\n            <Routes />\n          </ThemeProvider>\n        </ConnectedRouter>\n      </Provider>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { IWallet } from \"../store/wallets/types\"\n\nimport { getInfo as ethInfo } from './eth/eth'\nimport { getInfo as eosInfo } from './eos'\n\nexport const getBcInfo = async (wallet: IWallet) => {\n  if (wallet.blockchain === 'eth') {\n    return ethInfo(wallet)\n  }\n\n  if (wallet.blockchain === 'eos') {\n    return eosInfo(wallet)\n  }\n\n  throw new Error(`blockchain ${wallet.blockchain} is not supported!`)\n}","import { all, call, fork, put, takeEvery } from 'redux-saga/effects'\nimport { WalletsActionTypes } from './types'\nimport { fetchError, fetchSuccess, addWallet, fetchRequest } from './actions'\nimport { getBcInfo } from '../../helpers/common'\n\nfunction* handleSetWallet(action: ReturnType<typeof addWallet>) {\n  try {\n    let wallet = action.payload\n    // start fetch request for update wallet data\n    yield put(fetchRequest())\n    // fetch wallets txs history\n    const res = yield call(getBcInfo, wallet)\n\n    // added txs history\n    wallet = { ...wallet, ...res }\n\n    if (res.error) {\n      yield put(fetchError(res.error))\n    } else {\n      yield put(fetchSuccess(wallet))\n    }\n  } catch (err) {\n    if (err instanceof Error) {\n      yield put(fetchError(err.stack!))\n    } else {\n      yield put(fetchError('An unknown error occured.'))\n    }\n  }\n}\n\nfunction* watchFetchRequest() {\n  yield takeEvery(WalletsActionTypes.ADD_WALLET, handleSetWallet)\n}\n\nfunction* walletsSaga() {\n  yield all([fork(watchFetchRequest)])\n}\n\nexport default walletsSaga\n","export enum AuthActionTypes {\n  AUTH_SUCCESS = '@@auth/AUTH_SUCCESS',\n  AUTH_ERROR = '@@auth/AUTH_ERROR',\n}\n\nexport interface IAuthState {\n  readonly isAuth: boolean\n}\n","import { Reducer } from 'redux'\nimport { ActionType } from 'typesafe-actions'\nimport * as wallets from './actions'\nimport {\n  IWalletsState,\n  WalletsActionTypes,\n  IWalletEth,\n  IWalletEos,\n  IEthTxFormValues,\n} from './types'\nimport { IHostCommandU } from '../../helpers/webrtc/hostproto'\n\nconst initialState: IWalletsState = {\n  item: {} as IWalletEth | IWalletEos,\n  items: [],\n  sendingTxData: {\n    command: {} as IHostCommandU,\n    hash: '',\n    formData: {} as IEthTxFormValues,\n    error: '',\n  },\n  errors: undefined,\n  loading: false,\n}\n\nexport type WalletsAction = ActionType<typeof wallets>\n\nconst reducer: Reducer<IWalletsState, WalletsAction> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case WalletsActionTypes.FETCH_REQUEST: {\n      return { ...state, loading: true }\n    }\n    case WalletsActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, item: action.payload }\n    }\n    case WalletsActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload }\n    }\n    case WalletsActionTypes.ADD_WALLET: {\n      return { ...state, item: action.payload }\n    }\n    case WalletsActionTypes.SET_SENDING_TX_DATA: {\n      return {\n        ...state,\n        sendingTxData: { ...state.sendingTxData, ...action.payload },\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as walletsReducer }\n","import { Reducer } from 'redux'\nimport { IAuthState, AuthActionTypes } from './types'\nimport { ActionType } from 'typesafe-actions'\nimport * as auth from './actions'\n\nconst initialState: IAuthState = {\n  isAuth: false,\n}\n\nexport type AuthAction = ActionType<typeof auth>\n\nconst reducer: Reducer<IAuthState, AuthAction> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case AuthActionTypes.AUTH_SUCCESS: {\n      return { ...state, isAuth: true }\n    }\n    case AuthActionTypes.AUTH_ERROR: {\n      return { ...state, isAuth: false }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as authReducer }\n","export default function parseMessage(data: string) {\n  const result = data\n    .replace(/^([^|]*)\\|(.*\\D.*)\\|(.*)$/, '$1|\"$2\"|$3')\n    .replace(/^([^|]+)\\|([^|]*)\\|(.*)$/, '{\"method\":\"$1\",\"id\":$2,\"params\":$3}')\n    .replace(/^\\|([^|]*)\\|(.*)$/, '{\"id\":$1,\"result\":$2}')\n  return parseJsonString(result)\n}\n\nconst parseJsonString = (str: string) => {\n  try {\n    return JSON.parse(str)\n  } catch (err) {\n    return Error(err)\n  }\n}\n","import { RTCHelper } from '../../helpers/webrtc/webrtc'\nimport { IHostCommandU } from '../../helpers/webrtc/hostproto'\n\nexport enum WebrtcActionTypes {\n  CONNECTION_OPEN = '@@Webrtc/CONNECTION_OPEN',\n  CONNECTION_CLOSE = '@@Webrtc/CONNECTION_CLOSE',\n  SET_CONNECTION_SID = '@@Webrtc/SET_CONNECTION_SID',\n  SET_STATUS = '@@Webrtc/SET_STATUS',\n  SEND_COMMAND = '@@Webrtc/SEND_COMMAND',\n}\n\nexport interface IWebrtcState {\n  readonly rtc: RTCHelper\n  readonly connected: boolean\n  readonly status: string\n  pushedMessages: IHostCommandU[]\n}\n","import { IWalletBase } from '../store/wallets/types'\nimport { sendTx as sendEth } from './eth/eth'\nimport { sendTx as sendEos } from './eos'\n\nexport const sendTx = (tx: string, wallet: IWalletBase) => {\n  switch (wallet.blockchain) {\n    case 'eth':\n      return sendEth(wallet, tx)\n    case 'eos':\n      return sendEos(wallet, tx)\n\n    default:\n      return null\n  }\n}\n","import { action } from 'typesafe-actions'\nimport { AuthActionTypes } from './types'\n\nexport const authSuccess = () => action(AuthActionTypes.AUTH_SUCCESS)\nexport const authError = () => action(AuthActionTypes.AUTH_ERROR)\n","import { action } from 'typesafe-actions'\nimport { WebrtcActionTypes } from './types'\nimport { IHostCommandU } from '../../helpers/webrtc/hostproto'\n\nexport const connectionReady = () =>\n  action(WebrtcActionTypes.CONNECTION_OPEN)\n\nexport const connectionClosing = () =>\n  action(WebrtcActionTypes.CONNECTION_CLOSE)\n\nexport const setConnectionSid = () =>\n  action(WebrtcActionTypes.SET_CONNECTION_SID)\n\nexport const setStatus = (status: string) =>\n  action(WebrtcActionTypes.SET_STATUS, status)\n\nexport const sendCommand = (command: IHostCommandU) =>\n  action(WebrtcActionTypes.SEND_COMMAND, command)\n","import { all, fork, put, takeEvery, select } from 'redux-saga/effects'\nimport { login, sendTransaction, remoteSignTransferTx, remoteSignContractTx } from './actions'\nimport { TransportActionTypes } from './types'\nimport { IApplicationState } from '..'\nimport { push } from 'connected-react-router'\nimport { getEthTransferTx, getEosTransferTx, getEthContractParams, getEosContractParams } from '../../helpers/jsonrps'\nimport parseMessage from '../../utils/parseMessage'\nimport { sendTx } from '../../helpers/sendtx'\nimport { setSendingTxData, fetchSuccess } from '../wallets/actions'\nimport { authSuccess } from '../auth/actions'\nimport { sendCommand } from '../webrtc/actions'\nimport { IWallet } from '../wallets/types'\nimport { PayloadAction } from 'typesafe-actions/dist/types'\n\nfunction* handleLogin(action: ReturnType<typeof login>) {\n  try {\n    // TODO: check correct message id\n    const { result: wallets } = parseMessage(action.payload)\n    // console.log(`logging in with wallets`, wallets)\n    const wallet = wallets[0]\n    wallet.chainId = \"\" + wallet.chainId\n    // console.log(`logging in with wallet ${JSON.stringify(wallet)}`)\n\n    // call addWallet and authSuccess after success read and parse qrcode from login page\n    yield put(authSuccess())\n    yield put(fetchSuccess(wallet))\n    yield put(push(`/wallets/${wallet.address}`))\n  } catch (err) {\n    console.log('handleLogin error', err)\n  }\n}\n\nfunction createContractHandler<TFormData, TWallet extends IWallet>(getContractParams: (form: TFormData, wallet: TWallet) => Promise<unknown>)\n{\n  return function* handleCreateTransfer(action: PayloadAction<TransportActionTypes, TFormData>)\n  {\n    const wallet = yield select((state: IApplicationState) => state.wallets.item)\n    delete wallet.txs\n\n    try\n    {\n      const params = yield getContractParams(action.payload, wallet)\n      yield handleRemoteSignContract(params)\n    }\n    catch(e)\n    {\n      console.error(e)\n    }\n  }\n}\n\nfunction createTransferHandler<TFormData, TWallet extends IWallet>(getTransferTx: (form: TFormData, wallet: TWallet) => Promise<unknown>)\n{\n  return function* handleCreateTransfer(action: PayloadAction<TransportActionTypes, TFormData>)\n  {\n    const wallet = yield select((state: IApplicationState) => state.wallets.item)\n    delete wallet.txs\n\n    try\n    {\n      const tx = yield getTransferTx(action.payload, wallet)\n      yield put(remoteSignTransferTx(tx))\n    }\n    catch(e)\n    {\n      console.error(e)\n    }\n  }\n}\n\nconst handleCreateEthTransfer = createTransferHandler(getEthTransferTx)\nconst handleCreateEosTransfer = createTransferHandler(getEosTransferTx)\nconst handleCreateEthContract = createContractHandler(getEthContractParams)\nconst handleCreateEosContract = createContractHandler(getEosContractParams)\n\nfunction* handleRemoteSignTransfer(action: ReturnType<typeof remoteSignTransferTx>)\n{\n  const wallet = yield select((state: IApplicationState) => state.wallets.item)\n  \n  try\n  {\n    let cmd = { id: 3, method: 'signTransferTx', params: { tx: action.payload, wallet } }\n\n    yield put(sendCommand(cmd))\n  }\n  catch (e)\n  {\n    console.error(e)\n  }\n}\n\nfunction* handleRemoteSignContract(action: ReturnType<typeof remoteSignContractTx>)\n{\n  try\n  {\n    let cmd = { id: 4, method: 'signContractCall', params: action}\n    yield put(sendCommand(cmd))\n  }\n  catch (e)\n  {\n    console.error(e)\n  }\n}\n\n\nfunction* handleSendTx(action: ReturnType<typeof sendTransaction>) {\n  const wallet = yield select((state: IApplicationState) => state.wallets.item)\n  try {\n    const { result } = parseMessage(action.payload)\n\n    const hash = yield sendTx(result, wallet)\n\n    yield all([put(setSendingTxData({ hash })), put(push(`/tx/${hash}`))])\n  } catch (err) {\n    yield all([\n      put(setSendingTxData({ error: err.message })),\n      put(push(`/tx/error`)),\n    ])\n    console.error(err)\n  }\n}\n\nfunction* watchSendTx() {\n  yield takeEvery(TransportActionTypes.SEND_TX, handleSendTx)\n}\n\nfunction* watchCreateTx() {\n  yield takeEvery(TransportActionTypes.CREATE_ETH_TRANSFER, handleCreateEthTransfer)\n  yield takeEvery(TransportActionTypes.CREATE_EOS_TRANSFER, handleCreateEosTransfer)\n  yield takeEvery(TransportActionTypes.CREATE_ETH_CONTRACT, handleCreateEthContract)\n  yield takeEvery(TransportActionTypes.CREATE_EOS_CONTRACT, handleCreateEosContract)\n}\n\nfunction* watchRemoteSignTransfer() {\n  yield takeEvery(TransportActionTypes.REMOTE_SIGN_TRANSFER, handleRemoteSignTransfer)\n  yield takeEvery(TransportActionTypes.REMOTE_SIGN_CONTRACT, handleRemoteSignContract)\n}\n\nfunction* watchLogin() {\n  yield takeEvery(TransportActionTypes.LOGIN, handleLogin)\n}\n\nfunction* transportSaga() {\n  yield all([fork(watchLogin), fork(watchCreateTx), fork(watchSendTx), fork(watchRemoteSignTransfer)])\n}\n\nexport default transportSaga\n","export const handshakeServerUrl = `wss://duxi.io/shake` // `ws://localhost:3077`\n\nexport enum RTCCommands {\n  webrtcLogin = 1,\n  getWalletList = 2,\n  signTransferTx = 3,\n  signContractCall = 4,\n}\n","import { ActionType } from 'typesafe-actions'\nimport { Reducer } from 'redux'\nimport * as transports from './actions'\nimport { ITransportState, TransportActionTypes } from './types'\n\nconst initialState: ITransportState = {\n  qrcodeData: '',\n  lastWebrtcMsg: null,\n}\nexport type TransportsAction = ActionType<typeof transports>\n\nconst reducer: Reducer<ITransportState, TransportsAction> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case TransportActionTypes.SET_RTC_SID: {\n      return { ...state, qrcodeData: action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as transportReducer }\n","import { call, take, put, cancelled, select } from 'redux-saga/effects'\nimport { eventChannel } from 'redux-saga'\n\nimport { handshakeServerUrl } from '../../constants'\nimport { connectionReady, sendCommand } from './actions'\nimport { getWalletListCommand } from '../../helpers/jsonrps'\nimport { setRtcSid } from '../transport/actions'\nimport { IApplicationState } from '..'\nimport { RTCHelper } from '../../helpers/webrtc/webrtc'\n\nconst makeOfferRequest = (offer: string) =>\n  JSON.stringify({ jsonrpc: '2.0', id: 1, method: 'offer', params: { offer } })\n\nconst makeIceRequest = (ice: RTCIceCandidate) =>\n  JSON.stringify({ jsonrpc: '2.0', id: 2, method: 'ice', params: { ice } })\n\nconst onOpenChannel = (ws: WebSocket) =>\n  eventChannel(emit => {\n    ws.addEventListener('open', emit)\n    ws.addEventListener('error', err => emit(err))\n    return () => ws.removeEventListener('open', emit)\n  })\n\nconst onMessageChannel = (ws: WebSocket) =>\n  eventChannel(emit => {\n    ws.addEventListener('message', emit)\n    return () => ws.removeEventListener('message', emit)\n  })\n\nfunction* answerSaga(ws: WebSocket, rtc: RTCHelper, answer: string) {\n  const sendIce = (ice: RTCIceCandidate) => ws.send(makeIceRequest(ice)) // TODO: Add typings\n  rtc.candidates.map(sendIce)\n  rtc.on('ice', sendIce)\n  yield call(rtc.pushAnswer, { type: 'answer' as RTCSdpType, sdp: answer })\n  yield call(rtc.waitConnection)\n  yield put(connectionReady())\n  return ws.close()\n}\n\nexport default function* connectSaga() {\n  const rtc = yield select((state: IApplicationState) => state.webrtc.rtc)\n  const offerPromise = yield call(rtc.createOffer)\n  const ws = new WebSocket(handshakeServerUrl)\n  const openChan = onOpenChannel(ws)\n  const messageChan = onMessageChannel(ws)\n  yield take(openChan)\n\n  ws.send(makeOfferRequest(offerPromise.sdp))\n\n  while (true)\n    try {\n      const { data } = yield take(messageChan)\n      const { id, method, result, params } = JSON.parse(data.toString())\n\n      if (id === 1) yield put(setRtcSid(webrtcLogin(result.sid)))\n      if (method === 'ice') yield call(rtc.pushIceCandidate, params.ice)\n      if (method === 'answer')\n        return yield call(answerSaga, ws, rtc, params.answer)\n    } catch (err) {\n      console.log(err)\n    } finally {\n      if (yield cancelled()) {\n        openChan.close()\n        messageChan.close()\n        console.log('ws connection closed')\n        yield put(sendCommand(getWalletListCommand()))\n      }\n    }\n}\n\nexport const webrtcLogin = (sid: string) => {\n  const params = { sid, url: handshakeServerUrl }\n\n  return `webrtcLogin|1|${JSON.stringify(params)}`\n}\n","import { fork, all, take, select, call, put, takeEvery, cancel } from 'redux-saga/effects'\nimport { eventChannel, delay } from 'redux-saga'\n\nimport connectTask from './connectSaga'\nimport parseMessage from '../../utils/parseMessage'\nimport { RTCCommands } from '../../constants'\nimport { login, sendTransaction } from '../transport/actions'\nimport { WebrtcActionTypes } from './types'\nimport { IApplicationState } from '..'\nimport { setStatus, connectionClosing, sendCommand } from './actions'\nimport { call as prepareCall } from '../../helpers/webrtc/jsonrpc'\nimport { push } from 'connected-react-router';\nimport { setSendingTxData } from '../wallets/actions';\nimport { IHostCommand } from '../../helpers/webrtc/hostproto'\nimport { RTCHelper } from '../../helpers/webrtc/webrtc';\n\nfunction createDataChannel(dataChannel: RTCDataChannel) {\n  return eventChannel(emit => {\n    dataChannel.onmessage = (message: MessageEvent) => emit(message.data)\n\n    const unsubscribe = () => {\n      dataChannel.close()\n    }\n\n    return unsubscribe\n  })\n}\n\nfunction* watchDataChannel() {\n  const rtc = yield select((state: IApplicationState) => state.webrtc.rtc)\n  const channelMessage = yield call(createDataChannel, rtc.dataChannel)\n\n  while (true) {\n    const message = yield take(channelMessage)\n    const { id } = parseMessage(message)\n\n    switch (id) {\n      case RTCCommands.getWalletList:\n        yield put(login(message))\n        break\n      case RTCCommands.signTransferTx:\n        yield put(setStatus('Sending'))\n        yield put(sendTransaction(message))\n        break\n      case RTCCommands.signContractCall:\n        yield put(setStatus('Sending'))\n        yield put(sendTransaction(message))\n        break\n      default:\n        break\n    }\n  }\n}\n\nfunction* handleOpeningConnection() {\n  const [rtc, msg] = (yield select((state: IApplicationState) => [state.webrtc.rtc, state.transport.lastWebrtcMsg])) as [RTCHelper, IHostCommand<unknown[], unknown>]\n  if (msg)\n    yield put(sendCommand(msg))\n\n  while (true) {\n    yield delay(3000)\n    if (rtc.dataChannel!.readyState === 'closing') yield put(connectionClosing())\n  }\n}\n\nfunction* handleSendCommand(action: ReturnType<typeof sendCommand>) {\n  const { webrtc: {rtc, connected}, wallets:{item: wallet} } = yield select((state: IApplicationState) => state)\n  try\n  {  \n    let msg = prepareCall(action.payload.method, action.payload.id, action.payload.params, true)\n    \n    yield put(setSendingTxData({ command: action.payload, error: '', hash: '' }))\n    yield put(setStatus('Verification'))\n\n    if(connected) {\n      yield call((msg: string) => rtc.dataChannel!.send(msg), msg)\n      yield put(push('/status'))\n    } else {\n      yield put(push(`/wallets/${wallet.address}/tx/sign`))\n    }\n    \n  } catch (error)\n  {\n    console.error(error)  \n  }\n}\n\nfunction* watchActions() {\n  yield takeEvery(WebrtcActionTypes.CONNECTION_OPEN, handleOpeningConnection)\n  yield takeEvery(WebrtcActionTypes.SEND_COMMAND, handleSendCommand)\n}\n\nfunction* watchConnection() {\n  const bgConectionTask = yield fork(connectTask)\n\n  // dispose connection task\n  yield takeEvery(WebrtcActionTypes.CONNECTION_OPEN, function*() {\n    yield cancel(bgConectionTask)\n  })\n}\n\nfunction* webrtcSaga() {\n  yield all([fork(watchConnection), fork(watchDataChannel), fork(watchActions)])\n}\n\nexport default webrtcSaga\n","import { EventEmitter } from 'events'\n\nexport class RTCHelper extends EventEmitter {\n  rpc = new RTCPeerConnection()\n  candidates: RTCIceCandidate[] = []\n  dataChannel?: RTCDataChannel\n  offer?: RTCSessionDescriptionInit\n  connected = false\n  tag = ''\n\n  constructor(public name?: string) {\n    super()\n\n    if (name) this.tag = `[${name}] `\n\n    this.rpc.onicecandidate = this.onIceCandidate\n    this.rpc.ondatachannel = this.onDataChannel\n  }\n  onIceCandidate = (ev: RTCPeerConnectionIceEvent) => {\n    console.log(`${this.tag}onIceCandidate: ${JSON.stringify(ev.candidate)}`)\n    if (ev.candidate) this.candidates.push(ev.candidate)\n\n    this.emit('ice', ev.candidate)\n  }\n  onDataChannel = (ev: RTCDataChannelEvent) => {\n    console.log(`${this.tag}onDataChannel: ${JSON.stringify(ev.channel)}`)\n    this.setChannel(ev.channel)\n  }\n  onDataChannelOpen = (ev: Event) => {\n    console.log(`${this.tag}onDataChannelOpen: ${ev.type}`)\n    this.connected = true\n    this.emit('connected')\n  }\n  onMessage = (ev: MessageEvent) => {\n    console.log(`${this.tag}${ev.type}: ${ev.data}`)\n  }\n  setChannel = (c: RTCDataChannel) => {\n    this.dataChannel = c\n    this.dataChannel.onopen = this.onDataChannelOpen\n    this.dataChannel.onmessage = this.onMessage\n  }\n  waitConnection = async (): Promise<void> => {\n    if (this.connected) return Promise.resolve()\n\n    return new Promise<void>((res, rej) => this.on('connected', () => res()))\n  }\n\n  createOffer = async (): Promise<RTCSessionDescriptionInit> => {\n    console.log(`${this.tag}createOffer`)\n    this.setChannel(this.rpc.createDataChannel('chat'))\n    this.offer = await this.rpc.createOffer()\n    await this.rpc.setLocalDescription(this.offer)\n    return this.offer\n  }\n\n  pushOffer = async (\n    offer: RTCSessionDescriptionInit\n  ): Promise<RTCSessionDescriptionInit> => {\n    console.log(`${this.tag}pushOffer: ${JSON.stringify(offer)}`)\n    if (this.offer) throw new Error(\"can't push offer to already inited rtc connection!\")\n\n    await this.rpc.setRemoteDescription(offer)\n    let answer = await this.rpc.createAnswer()\n    await this.rpc.setLocalDescription(answer)\n    return answer\n  }\n\n  pushAnswer = async (answer: RTCSessionDescriptionInit) => {\n    console.log(`${this.tag}pushAnswer: ${JSON.stringify(answer)}`)\n    await this.rpc.setRemoteDescription(answer)\n  }\n  pushIceCandidate = async (\n    candidate: RTCIceCandidateInit | RTCIceCandidate\n  ) => {\n    await this.rpc.addIceCandidate(candidate)\n  }\n}\n","import { RTCHelper } from './webrtc'\nimport { JsonRpc } from './jsonrpc'\nimport { timedPromise } from './promise'\n\nlet i = 0\n\nexport function init() {\n  let rtc = new RTCHelper('webrtc')\n  let ii = i++\n\n  let jrpc = new JsonRpc(\n    msg => (console.log(`JSONRPC ${ii}: ${msg}`), rtc.dataChannel!.send(msg)),\n    (json, cb) => {\n      console.log(`ignored remote signer request:`, json)\n      cb(undefined, null)\n    }\n  )\n\n  rtc.onMessage = ev => (console.log(`webrtc jrpc incoming:`, ev), jrpc.onMessage(ev.data.toString()))\n  let connected = false\n\n  return {\n    rtc,\n    jrpc,\n    connected,\n  }\n}\nexport async function checkConnection(): Promise<boolean> {\n  if (!singleton.connected) return false\n\n  try {\n    await timedPromise(singleton.jrpc.ping(), 5000)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nlet singleton = init()\nexport let getSingleton = () => singleton\n\nexport function reset() {\n  singleton = init()\n}\n","import { ActionType } from 'typesafe-actions'\nimport * as webrtc from './actions'\nimport { Reducer } from 'redux'\nimport { IWebrtcState, WebrtcActionTypes } from './types'\nimport { getSingleton } from '../../helpers/webrtc/webrtcsingleton'\n\nconst initialState: IWebrtcState = {\n  rtc: getSingleton().rtc,\n  connected: getSingleton().connected,\n  status: '',\n  pushedMessages: [],\n}\n\nconst reducer: Reducer<IWebrtcState, ActionType<typeof webrtc>> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case WebrtcActionTypes.CONNECTION_OPEN: {\n      return { ...state, connected: true }\n    }\n    case WebrtcActionTypes.CONNECTION_CLOSE: {\n      return { ...state, connected: false }\n    }\n    case WebrtcActionTypes.SET_STATUS: {\n      return { ...state, status: action.payload }\n    }\n    case WebrtcActionTypes.SEND_COMMAND: {\n      return {\n        ...state,\n        pushedMessages: [...state.pushedMessages, action.payload],\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as webrtcReducer }\n","import axios from 'axios'\n\nenum CoinmarketcapTicker {\n  eth = '1027',\n  eos = '1765',\n}\n\nconst CoinmarketApi = (ticker: string) => \n  axios(`https://api.coinmarketcap.com/v2/ticker/${ticker}/`)\n    .then(res => res.data)\n\nexport function getEth() {\n  return CoinmarketApi(CoinmarketcapTicker.eth)\n}\n\nexport async function getEos() {\n  return CoinmarketApi(CoinmarketcapTicker.eos)\n}","import { all, call, put, fork, takeEvery } from 'redux-saga/effects'\nimport { PriceActionTypes, ICurrencyPrice } from './types'\nimport { priceGet, priceSet } from './actions'\nimport { getEth, getEos } from '../../helpers/prices'\n\nfunction* handleGetPrice(action: ReturnType<typeof priceGet>) {\n  try {\n    const res = yield all([\n      call(getEth), \n      call(getEos)\n    ])\n\n    const prices: ICurrencyPrice[] = res.map((item: any) => ({\n      symbol: item.data.symbol.toLowerCase(),\n      price: item.data.quotes.USD.price\n    }))\n\n    yield put(priceSet(prices))\n\n  } catch (err) {\n    if (err instanceof Error) {\n     console.error(err)\n    }\n  }\n}\n\nfunction* watchFetchRequest() {\n  yield takeEvery(PriceActionTypes.PRICE_GET, handleGetPrice)\n}\n\nfunction* walletsSaga() {\n  yield all([fork(watchFetchRequest)])\n}\n\nexport default walletsSaga\n","import { Reducer } from 'redux'\nimport { IPriceState, PriceActionTypes, ICurrencyPrice } from './types'\nimport { ActionType } from 'typesafe-actions'\nimport * as price from './actions'\n\nconst initialState: IPriceState = {\n  eth: 0,\n  eos: 0\n}\n\nexport type PriceAction = ActionType<typeof price>\n\nconst reducer: Reducer<IPriceState, PriceAction> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case PriceActionTypes.PRICE_SET: {\n      const prices = {}\n      action.payload.map((item: ICurrencyPrice) => prices[item.symbol] = item.price)\n\n      return {\n        ...state,\n        ...prices\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as priceReducer }\n","import { combineReducers, Dispatch, Action, AnyAction } from 'redux'\nimport { all, fork } from 'redux-saga/effects'\nimport { connectRouter, RouterState } from 'connected-react-router'\n\nimport walletsSaga from './wallets/sagas'\nimport { walletsReducer } from './wallets/reducer'\nimport { IWalletsState } from './wallets/types'\n\nimport { authReducer } from './auth/reducer'\nimport { IAuthState } from './auth/types'\n\nimport transportSaga from './transport/sagas'\nimport { transportReducer } from './transport/reducer'\nimport { ITransportState } from './transport/types'\n\nimport webrtcSaga from './webrtc/sagas'\nimport { webrtcReducer } from './webrtc/reducer'\nimport { IWebrtcState } from './webrtc/types'\n\nimport priceSaga from './price/sagas'\nimport { priceReducer } from './price/reducer'\nimport { IPriceState } from './price/types'\n\n// top-level state\nexport interface IApplicationState {\n  wallets: IWalletsState\n  auth: IAuthState\n  transport: ITransportState\n  price: IPriceState\n  webrtc: IWebrtcState\n  router: RouterState\n}\n\nexport interface IConnectedReduxProps<A extends Action = AnyAction> {\n  dispatch: Dispatch<A>\n}\n\nexport const rootReducer = (history: any) =>\n  combineReducers<IApplicationState>({\n    wallets: walletsReducer,\n    auth: authReducer,\n    transport: transportReducer,\n    webrtc: webrtcReducer,\n    price: priceReducer,\n    router: connectRouter(history),\n  })\n\nexport function* rootSaga() {\n  yield all([fork(walletsSaga), fork(transportSaga), fork(webrtcSaga), fork(priceSaga)])\n}\n","import { Store, createStore, applyMiddleware, AnyAction, DeepPartial } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { routerMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { History } from 'history'\n\nimport { IApplicationState, rootReducer, rootSaga } from './store'\n\nexport default function configureStore(\n  history: History\n): Store<IApplicationState> {\n  const composeEnhancers = composeWithDevTools({})\n  const sagaMiddleware = createSagaMiddleware()\n  const initialState = (JSON.parse(window.localStorage.getItem('state') || '{}') || {}) as DeepPartial<IApplicationState>\n\n  delete initialState.webrtc\n  delete initialState.transport\n\n  const store = createStore(\n    rootReducer(history),\n    initialState,\n    composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware))\n  )\n\n  sagaMiddleware.run(rootSaga)\n  return store\n}\n\nexport const subscriber = (store: Store<IApplicationState, AnyAction>) => () => {\n  window.localStorage.setItem('state', JSON.stringify(store.getState()))\n};","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { createBrowserHistory } from 'history'\n\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore, { subscriber } from './configureStore'\n\nlet basename\nif (location.pathname.includes('/cold-crypto-web'))\n  basename = '/cold-crypto-web'\nelse if (location.pathname.includes('/cold'))\n  basename = '/cold'\nelse\n  basename = '/'\n\nconsole.log(`using basename ${basename}`)\nconst history = createBrowserHistory({ basename })\n\nconst store = configureStore(history)\nstore.subscribe(subscriber(store))\n\nReactDOM.render(\n  <App store={store} history={history} />,\n  document.getElementById('root')\n)\n\n// unregister() or register()\nserviceWorker.unregister()\n"],"sourceRoot":""}