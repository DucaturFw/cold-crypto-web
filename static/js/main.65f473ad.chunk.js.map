{"version":3,"sources":["components/atoms/Row.tsx","components/atoms/H1.tsx","components/atoms/H2.tsx","components/atoms/H3.tsx","components/atoms/Button.tsx","components/atoms/Column.tsx","components/atoms/ButtonClose.tsx","components/atoms/Centered.tsx","components/atoms/Hr.tsx","components/atoms/Link.tsx","components/atoms/ButtonBase.tsx","components/atoms/ButtonSecondary.tsx","components/atoms/TextInput.tsx","components/atoms/Label.tsx","components/atoms/Select.tsx","components/atoms/LabelAtop.tsx","components/atoms/TextArea.tsx","components/atoms/QrLogin.tsx","components/layouts/Header.tsx","components/layouts/DefaultLayout.tsx","components/layouts/Sidebar.tsx","components/layouts/MainLayout.tsx","components/layouts/ModalLayout.tsx","helpers/eos-tx-helpers.ts","helpers/jsonrps.ts","store/transport/types.ts","store/transport/actions.ts","pages/Login.tsx","pages/Home.tsx","components/Spinner.tsx","store/wallets/types.ts","store/wallets/actions.ts","pages/TXList/common.tsx","pages/TXList/index.tsx","pages/TXList/eth.tsx","pages/TXList/eos.tsx","pages/Wallet.tsx","pages/CreateTx/eth.tsx","pages/CreateTx/eos.tsx","pages/CreateTx/index.tsx","pages/Sign.tsx","pages/Status.tsx","pages/TxView.tsx","routes.tsx","styles/theme.ts","styles/normalize.ts","styles/globals.ts","styles/index.ts","App.tsx","serviceWorker.ts","utils/callApi.ts","helpers/eth.ts","helpers/eos.ts","helpers/common.ts","store/wallets/sagas.ts","store/auth/types.ts","store/wallets/reducer.ts","store/auth/reducer.ts","utils/parseMessage.ts","store/webrtc/types.ts","helpers/sendtx.ts","store/auth/actions.ts","store/webrtc/actions.ts","store/transport/sagas.ts","constants/index.ts","store/transport/reducer.ts","store/webrtc/connectSaga.ts","store/webrtc/sagas.ts","helpers/webrtc/webrtc.ts","helpers/webrtc/jsonrpc.ts","helpers/webrtc/hostproto.ts","helpers/webrtc/webrtcsingleton.ts","store/webrtc/reducer.ts","store/index.ts","configureStore.ts","index.tsx"],"names":["Row","styled","display","justifyContent","width","H1","fontFamily","fontSize","margin","textTransform","H2","color","fontWeight","H3","Button","border","borderRadius","cursor","outline","padding","Column","flexFlow","Root","Link","alignSelf","marginLeft","Img","height","ButtonClose","react_default","a","createElement","to","src","Centered","alignItems","textAlign","Hr","backgroundColor","StyledLink","textDecoration","ButtonBase",":hover","background","transition","ButtonSecondary","TextInput","::placeholder","boxSizing","Label","Container","position","right","LabelAtop","_ref","label","children","LabelAtop_Label","TextArea","QrLogin","title","value","onScan","onError","readonly","errorHandle","error","console","react","ButtonClose_ButtonClose","style","qrcode_react_lib_default","renderAs","react_qr_reader_lib_default","delay","_onScan","_x","apply","this","arguments","toString","result","gridArea","Logo","_templateObject","Header","Header_Root","className","css","_templateObject2","minHeight","Main","Modal","maxWidth","minWidth","DefaultLayout","_React$Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","_this$props","props","Component","component","rest","objectWithoutProperties","Route","assign","render","matchProps","DefaultLayout_Root","Header_Header","React","borderRight","items","id","MenuLink","selected","borderLeft","concat","MainMenu","Sidebar_Container","map","_ref2","Sidebar","Sidebar_Root","Sidebar_MainMenu","gridTemplateAreas","gridTemplateColumns","gridTemplateRows","MainLayout","MainLayout_Container","MainLayout_Main","Sidebar_Sidebar","left","top","boxShadow","maxHeight","ModalLayout","ModalLayout_Root","onClick","history","goBack","ModalLayout_Main","e","stopPropagation","ModalLayout_Container","getTxHeaders","_getTxHeaders","_callee","chainId","eos","info","chainDate","expiration","block","transactionHeaders","regenerator_default","wrap","_context","prev","next","Eos","httpEndpoint","getInfo","sent","Date","head_block_time","getTime","expireInSeconds","toISOString","split","getBlock","last_irreversible_block_num","ref_block_num","ref_block_prefix","abrupt","stop","TransportActionTypes","getWalletListCommand","JSON","stringify","blockchains","getSignTransferTxCommand","asyncToGenerator","mark","data","wallet","tx","txHeaders","blockchain","gasPrice","Web3","utils","toWei","nonce","amount","method","transaction","objectSpread","actions","name","account","authorization","actor","address","permission","from","quantity","toFixed","memo","_x2","createTransaction","action","CREATE_TX","sendTransaction","SEND_TX","login","message","LOGIN","setRtcSid","sid","SET_RTC_SID","LoginPage","search","scanLoginData","qrcodeData","isRtc","URLSearchParams","get","QrLogin_QrLogin","Login","connect","router","transport","location","dispatch","Home","paddingRight","type","placeholder","Home_Select","flipToRight","Select",":after","borderWidth","content","appearance","WalletsActionTypes","Loader","LoadingOverlayInner","Spinner_LoadingSpinner","LoadingSpinner","Spinner","CubeMove","keyframes","Spinner_templateObject","Spinner_templateObject2","_templateObject3","fetchRequest","FETCH_REQUEST","fetchSuccess","item","FETCH_SUCCESS","fetchError","FETCH_ERROR","setSendingTxData","SET_SENDING_TX_DATA","OverflowTd","overflow","textOverflow","Table","borderCollapse","borderSpacing","td","th","tr","borderBottom","TXList","txs","index","timeStamp","toLocaleString","target","href","hash","createdAt","act","payer","stake_cpu_quantity","stake_net_quantity","bytes","EosTX","WalletPage","addWalletDispatch","addWallet","_this$props2","loading","flexBasis","marginRight","Address","TXList_TXList","Spinner_Loader","Wallet","wallets","ADD_WALLET","lineHeight","CreateEthTx","_ref7","createTx","formik_esm","initialValues","onSubmit","values","formikBag","field","form","RowMargined","LabelAtop_LabelAtop","_ref3","min","step","_ref4","readOnly","_ref5","_ref6","max","CreateEosTx","eos_RowMargined","CreateTx","Sign","signTx","sendingTxData","sendTx","Status","status","webrtc","LoadingText","Status_templateObject","TxView","sendingData","_ref$sendingData","formData","bc","getExplrUrl","Routes","Switch","DefaultLayout_DefaultLayout","exact","path","MainLayout_MainLayout","ModalLayout_ModalLayout","theme","colors","body","black","white","fontSizes","h1","h2","h3","h4","breakpoints","xs","sm","md","lg","xl","widths","normalize_templateObject","globals_templateObject","injectGlobal","styles_templateObject","normalize","globals","App","store","react_redux_es","lib","emotion_theming_browser_esm","routes_Routes","Boolean","window","hostname","match","callApi","url","fetch","headers","Accept","Content-Type","mode","then","res","json","web3","API_ENDPOINT","process","REACT_APP_API_ENDPOINT","getNonce","_getNonce","eth","getTransactionCount","_callee2","_context2","sendSignedTransaction","getTx","_x3","_getTx","_callee3","_context3","_x4","_getInfo","_callee4","_context4","setProvider","providers","WebsocketProvider","signedTx","txHash","pushTransaction","log","transaction_id","getBcInfo","ethInfo","handleSetWallet","watchFetchRequest","walletsSaga","payload","put","call","t0","Error","stack","_marked","takeEvery","_marked2","all","fork","_marked3","AuthActionTypes","initialState","errors","undefined","reducer","state","length","isAuth","AUTH_SUCCESS","AUTH_ERROR","parseMessage","replace","parseJsonString","WebrtcActionTypes","str","parse","err","_sendTx","sendEth","sendEos","authSuccess","connectionReady","CONNECTION_OPEN","connectionClosing","CONNECTION_CLOSE","setStatus","SET_STATUS","handleLogin","handleCreateTx","handleSendTx","watchSendTx","watchCreateTx","watchLogin","transportSaga","_parseMessage","push","sagas_marked","connected","rtc","txFormData","signedData","select","dataChannel","send","sagas_marked2","_parseMessage2","sagas_marked3","_marked4","_context5","_marked5","_context6","_marked6","_context7","_marked7","RTCCommands","handshakeServerUrl","answerSaga","connectSaga","makeOfferRequest","offer","jsonrpc","params","makeIceRequest","ice","onOpenChannel","ws","eventChannel","emit","addEventListener","removeEventListener","onMessageChannel","answer","sendIce","candidates","on","pushAnswer","sdp","waitConnection","close","connectSaga_marked","offerPromise","openChan","messageChan","_JSON$parse","createOffer","WebSocket","take","webrtcLogin","pushIceCandidate","cancelled","finish","connectSaga_marked2","watchDataChannel","handleOpeningConnection","watchStatusConnection","watchConnection","webrtcSaga","createDataChannel","onmessage","channelMessage","getWalletList","signTransferTx","webrtc_sagas_marked","readyState","webrtc_sagas_marked2","webrtc_sagas_marked3","bgConectionTask","connectTask","cancel","sagas_marked4","sagas_marked5","RTCHelper","_EventEmitter","_this","rpc","RTCPeerConnection","tag","onIceCandidate","ev","candidate","onDataChannel","channel","setChannel","onDataChannelOpen","onMessage","c","onopen","Promise","resolve","rej","setLocalDescription","pushOffer","setRemoteDescription","createAnswer","_callee5","addIceCandidate","onicecandidate","ondatachannel","EventEmitter","jrpcs","obj","jrpc","JsonRpc","onRequest","lastOutgoingMsgId","listeners","_callbacksQueue","_messageQueue","msg","startsWith","test","_msg$split$map","x","_msg$split$map2","slicedToArray","_id","prefixLength","substr","parseInt","parseHostMessage","isMethodCall","m","isError","_this2","cb","shift","_nextMessage","_this3","_len","_","Array","_key","_ping","_callRaw","args","_this4","getNextMsgId","_call","_len2","_key2","_args4","callRaw","init","singleton","rootSaga","rootReducer","combineReducers","walletsReducer","auth","authReducer","transportReducer","webrtcReducer","connectRouter","store_marked","createBrowserHistory","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","localStorage","getItem","createStore","applyMiddleware","routerMiddleware","run","configureStore","subscribe","setItem","getState","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.65f473ad.chunk.js","sourcesContent":["import styled from 'react-emotion'\n\nexport const Row = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  width: '100%',\n})\n","import styled from 'react-emotion'\n\nexport const H1 = styled('h1')({\n  fontFamily: 'Montserrat, sans-serif',\n  fontSize: '1.6rem',\n  margin: 0,\n  textTransform: 'uppercase',\n})\n","import styled from 'react-emotion'\n\nexport const H2 = styled('h2')({\n  color: 'rgb(84, 84, 86)',\n  fontFamily: 'Montserrat, sans-serif',\n  fontSize: '1.4rem',\n  fontWeight: 'normal',\n  margin: '0 0 .25rem 0',\n})\n","import styled from 'react-emotion'\n\nexport const H3 = styled('h3')({\n  color: 'rgb(84, 84, 86)',\n  fontFamily: 'Montserrat, sans-serif',\n  fontSize: '1.05rem',\n  fontWeight: 'normal',\n  margin: 0,\n})\n","import styled from 'react-emotion'\n\nexport const Button = styled('button')({\n  border: 0,\n  borderRadius: '.2rem',\n  cursor: 'pointer',\n  fontSize: '.9rem',\n  margin: '.25rem 0',\n  outline: 0,\n  padding: '.8rem 2rem',\n  width: '100%',\n})\n","import styled from 'react-emotion'\n\nexport const Column = styled('div')({\n  display: 'flex',\n  flexFlow: 'column nowrap',\n  width: '100%',\n})\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Link } from 'react-router-dom'\n\nconst Root = styled(Link)({\n  alignSelf: 'center',\n  marginLeft: '1rem',\n})\n\nconst Img = styled('img')({\n  height: '1.5rem',\n  width: '1.5rem',\n})\n\nexport const ButtonClose = () => (\n  <Root to=\"/\">\n    <Img src=\"/x-mark-thin.svg\" />\n  </Root>\n)\n","import styled from 'react-emotion'\n\nexport const Centered = styled('div')({\n  alignItems: 'center',\n  justifyContent: 'center',\n  textAlign: 'center',\n})\n","import styled from 'react-emotion'\n\nexport const Hr = styled('div')({\n  backgroundColor: 'rgb(204, 204, 204)',\n  height: '1px',\n  margin: '1rem 0',\n  width: '100%',\n})\n","import { Link } from 'react-router-dom'\nimport styled from 'react-emotion'\n\nexport const StyledLink = styled(Link)({\n  display: 'block',\n  textDecoration: 'none',\n  width: '100%',\n})\n","import styled from 'react-emotion'\n\nimport { Button } from './Button'\n\nexport const ButtonBase = styled(Button)({\n  ':hover': {\n    background: 'rgb(13, 137, 180)',\n  },\n  background: 'rgb(16, 173, 228)',\n  color: '#fff',\n  transition: '.2s ease-in-out all',\n})\n","import styled from 'react-emotion'\n\nimport { Button } from './Button'\n\nexport const ButtonSecondary = styled(Button)({\n  ':hover': {\n    background: 'rgb(230, 247, 253)',\n  },\n  background: 'transparent',\n  border: '1px solid rgb(0,74,124)',\n  color: 'rgb(84, 84, 86)',\n  transition: '.2s ease-in-out all',\n})\n","import styled from 'react-emotion'\n\nexport const TextInput = styled('input')({\n  '::placeholder': {\n    color: '#93a7b3',\n  },\n  background: 'rgb(255, 255, 255)',\n  border: '1px solid rgb(204, 204, 204)',\n  boxSizing: 'border-box',\n  color: 'rgb(84, 84, 86)',\n  fontSize: '.9rem',\n  margin: '.25rem 0',\n  outline: 'none',\n  padding: '.75rem 1rem',\n  width: '100%',\n})\n","import styled from 'react-emotion'\n\nexport const Label = styled('strong')({\n  display: 'block',\n  width: '100%',\n})\n","import styled from 'react-emotion'\n\nexport const Select = styled('select')({\n  background: '#fff',\n  border: '1px solid rgb(204, 204, 204)',\n  boxSizing: 'border-box',\n  display: 'block',\n  height: '2.5rem',\n  outline: 0,\n  padding: '.5rem',\n  width: '100%',\n})\n","import React from 'react'\nimport styled from 'react-emotion'\n\nconst Container = styled('strong')({\n  position: 'relative',\n})\n\nconst Label = styled('span')({\n  color: 'rgb(117, 118, 121)',\n  padding: '1rem',\n  position: 'absolute',\n  right: 0,\n})\n\nexport const LabelAtop = ({\n  label,\n  children,\n}: {\n  label: string\n  children: JSX.Element\n}) => (\n  <Container>\n    {children}\n    <Label>{label}</Label>\n  </Container>\n)\n","import styled from 'react-emotion'\n\nexport const TextArea = styled('textarea')({\n  background: 'rgb(255, 255, 255)',\n  border: '1px solid rgb(204, 204, 204)',\n  boxSizing: 'border-box',\n  color: 'rgb(84, 84, 86)',\n  fontSize: '.9rem',\n  margin: '.25rem 0',\n  outline: 'none',\n  padding: '.75rem 1rem',\n  width: '100%',\n})\n","import * as React from 'react'\nimport { Row, Hr, ButtonClose, Column, H2, H3, Centered } from '.'\nimport QrReader from 'react-qr-reader'\nimport QRCode from 'qrcode.react'\n\ninterface IPropsFromDispatch {\n  title: string\n  value: string\n  onScan: (data: string) => void\n  onError?: (e: Error) => void\n  readonly?: boolean\n}\n\ntype AllProps = IPropsFromDispatch\n\nexport const QrLogin: React.SFC<AllProps> = ({\n  title,\n  value,\n  onScan,\n  onError,\n  readonly,\n}) => {\n  const errorHandle = onError || ((error: Error) => console.error(error))\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Column>\n          <H2>{title}</H2>\n          <H3>\n            Follow these steps to sign your transaction using your mobile device\n          </H3>\n        </Column>\n        <ButtonClose />\n      </Row>\n      <Hr />\n      <Row>\n        <Column style={{ width: '50%' }}>\n          <Centered>\n            <H2>Scan QR Code</H2>\n          </Centered>\n          <Centered style={{ display: 'flex' }}>\n            <QRCode value={value} renderAs=\"svg\" />\n          </Centered>\n        </Column>\n        {!readonly && (\n          <Column style={{ width: '50%' }}>\n            <Centered>\n              <H2>Show QR Code</H2>\n            </Centered>\n            <Centered style={{ display: 'flex' }}>\n              <QrReader\n                delay={300}\n                onScan={result => result && onScan(result)}\n                onError={error => errorHandle(error)}\n                style={{ width: '30vh' }}\n              />\n            </Centered>\n          </Column>\n        )}\n      </Row>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'react-emotion'\nimport { H1, Link } from '../atoms'\n\nconst Root = styled('header')({\n  background: 'rgb(0, 74, 124)',\n  gridArea: 'header',\n  height: '4rem',\n})\n\nconst Logo = styled(H1)`\n  color: #fff;\n  padding: 1rem;\n`\n\nexport const Header = ({ to }: { to: string }) => (\n  <Root>\n    <Link to={to}>\n      <Logo>\n        Cold Crypto\n        <sup\n          className={css`\n            color: #f2494d;\n            font-size: 0.8rem;\n            text-transform: lowercase;\n            vertical-align: super;\n          `}\n        >\n          beta mode\n        </sup>\n      </Logo>\n    </Link>\n  </Root>\n)\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Route } from 'react-router-dom'\n\nimport { Header } from './Header'\n\nconst Root = styled('div')({\n  background: 'rgb(0, 74, 124)',\n  minHeight: '100vh',\n})\n\nconst Main = styled('main')({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'center',\n  minHeight: 'calc(100vh - 4rem)',\n})\n\nconst Modal = styled('div')({\n  background: '#fff',\n  maxWidth: '50rem',\n  minWidth: '30rem',\n  padding: '2rem',\n})\n\ninterface IDefaultProps {\n  component: any\n  path?: string\n  exact?: boolean\n}\n\nexport class DefaultLayout extends React.Component<IDefaultProps, any> {\n  public render() {\n    const { component: Component, ...rest } = this.props\n    return (\n      <Route\n        {...rest}\n        render={matchProps => (\n          <Root>\n            <Header to=\"/\" />\n            <Main>\n              <Modal>\n                <Component {...matchProps} />\n              </Modal>\n            </Main>\n          </Root>\n        )}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Link } from '../atoms'\n\nconst Root = styled('aside')({\n  background: 'rgb(245, 247, 249)',\n  borderRight: '1px solid rgb(234, 234, 234)',\n  gridArea: 'sidebar',\n})\n\nconst items = [{ id: 'wallets', title: 'Wallets' }]\n\nconst MenuLink = styled(Link)(({ selected }: { selected: boolean }) => ({\n  borderLeft: `4px solid ${selected ? 'rgb(53, 88, 168)' : 'transparent'}`,\n  color: selected ? 'rgb(53, 88, 168)' : 'rgb(84, 84, 86)',\n  fontWeight: selected ? 'bold' : 'normal',\n  padding: '.75rem 1.5rem',\n}))\n\nconst Container = styled('menu')({\n  padding: '.5rem 0',\n})\n\nconst MainMenu = () => (\n  <Container>\n    {items.map(({ id, title }) => (\n      <MenuLink to={`/${id}`} key={id} selected={true}>\n        {title}\n      </MenuLink>\n    ))}\n  </Container>\n)\n\nexport const Sidebar = () => (\n  <Root>\n    <MainMenu />\n  </Root>\n)\n","import React from 'react'\nimport styled from 'react-emotion'\n// import { Route } from 'react-router-dom'\n\nimport { Header } from './Header'\nimport { Sidebar } from './Sidebar'\n\nconst Container = styled('div')({\n  background: '#fff',\n  display: 'grid',\n  gridTemplateAreas: `\n      \"header header header header\"\n      \"sidebar main main main\"\n    `,\n  gridTemplateColumns: '16rem auto auto auto',\n  gridTemplateRows: '4rem auto',\n  minHeight: '100vh',\n})\n\nconst Main = styled('main')({\n  display: 'flex',\n  gridArea: 'main',\n  justifyContent: 'center',\n  minHeight: 'calc(100vh - 4rem)',\n  padding: '2rem',\n})\n\nexport const MainLayout: React.SFC = props => {\n  const { children } = props\n  return (\n    <Container>\n      <Header to=\"/\" />\n      <Main>{children}</Main>\n      <Sidebar />\n    </Container>\n  )\n}\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Route } from 'react-router-dom'\n// import { History } from 'history'\n\nconst Root = styled('header')({\n  alignItems: 'center',\n  background: 'rgba(0, 0, 0, 0.5)',\n  display: 'flex',\n  height: '100vh',\n  justifyContent: 'center',\n  left: 0,\n  position: 'fixed',\n  top: 0,\n  width: '100vw',\n})\n\nconst Main = styled('main')({\n  background: '#fff',\n  borderRadius: '.25rem',\n  boxShadow: 'rgba(0, 0, 0, 0.5) 0px .25rem 1.5rem',\n  maxHeight: '95vh',\n  maxWidth: '95vw',\n  minHeight: '50vh',\n  minWidth: '60vw',\n})\n\nconst Container = styled('div')({\n  boxSizing: 'border-box',\n  padding: '2rem',\n})\n\ninterface IDefaultProps {\n  component: any\n  path?: string\n  exact?: boolean\n}\n\nexport const ModalLayout: React.SFC<IDefaultProps> = props => {\n  const { component: Component, ...rest } = props\n  return (\n    <Route\n      {...rest}\n      render={matchProps => {\n        return (\n          <Root onClick={matchProps.history.goBack}>\n            <Main onClick={e => e.stopPropagation()}>\n              <Container>\n                <Component {...matchProps} />\n              </Container>\n            </Main>\n          </Root>\n        )\n      }}\n    />\n  )\n}\n","import Eos from \"eosjs\"\n\nexport async function getTxHeaders(chainId: string)\n{\n  const eos = Eos({\n    httpEndpoint: 'http://jungle2.cryptolions.io:80', // jungle2.cryptolions.io:9876\n    chainId,\n  })\n\n  const info = await eos.getInfo({})\n\n  const expireInSeconds = 60 * 60 // 1 hour\n\n  const chainDate = new Date(info.head_block_time + 'Z')\n  const expiration = new Date(chainDate.getTime() + expireInSeconds * 1000).toISOString().split('.')[0]\n\n  const block = await eos.getBlock(info.last_irreversible_block_num)\n\n  const transactionHeaders = {\n    expiration,\n    ref_block_num: info.last_irreversible_block_num & 0xFFFF,\n    ref_block_prefix: block.ref_block_prefix\n  }\n\n  return transactionHeaders\n}","import Web3 from 'web3'\nimport { getTxHeaders } from './eos-tx-helpers'\nimport {\n  IEthTxFormValues,\n  IWalletEth,\n  IEosTxFormValues,\n} from '../store/wallets/types'\n\n// TODO: mobile app ignore blockchain array\nexport const getWalletListCommand = () => {\n  const params = { blockchains: ['eth', 'eos'] }\n  return `getWalletList|2|${JSON.stringify(params)}`\n}\n\nexport const getSignTransferTxCommand = async (\n  data: IEthTxFormValues | IEosTxFormValues,\n  wallet: IWalletEth\n): Promise<string> => {\n  let tx\n  if (wallet.blockchain === 'eth') {\n    tx = {\n      gasPrice: Web3.utils.toWei(\n        (data as IEthTxFormValues).gasPrice.toString(),\n        'gwei'\n      ),\n      nonce: wallet.nonce,\n      to: data.to,\n      value: Web3.utils.toWei(data.amount.toString()),\n    }\n  }\n\n  if (wallet.blockchain === 'eos') {\n    const txHeaders = await getTxHeaders(wallet.chainId as string)\n    tx = {\n      method: 'transfer(from:name,to:name,quantity:asset,memo:string)',\n      transaction: {\n        ...txHeaders,\n        actions: [\n          {\n            name: 'transfer',\n            account: 'eosio.token',\n            authorization: [\n              {\n                actor: wallet.address,\n                permission: 'active',\n              },\n            ],\n            data: {\n              to: data.to,\n              from: wallet.address,\n              quantity: `${(+data.amount).toFixed(4) as string} EOS`,\n              memo: '',\n            },\n          },\n        ],\n      },\n    }\n  }\n\n  return `signTransferTx|3|${JSON.stringify({ wallet, tx })}`\n}\n","export enum TransportActionTypes {\n  SEND_TX = '@@transport/SEND_TX',\n  LOGIN = '@@transport/LOGIN',\n  SIGN_TX = '@@transport/SIGNTX',\n  CREATE_TX = '@@transport/CREATETX',\n\n  SET_RTC_SID = '@@transport/SET_RTC_SID',\n}\n\nexport interface ITransportState {\n  qrcodeData: string\n}\n","import { action } from 'typesafe-actions'\nimport { TransportActionTypes } from './types'\nimport { IEthTxFormValues, IEosTxFormValues, IWalletBase } from '../wallets/types'\n\nexport const createTransaction = (tx: IEthTxFormValues | IEosTxFormValues) =>\n  action(TransportActionTypes.CREATE_TX, tx)\n\nexport const signTransaction = (tx: string) =>\n  action(TransportActionTypes.SIGN_TX, tx)\n\nexport const sendTransaction = (tx: string, wallet: IWalletBase) =>\n  action(TransportActionTypes.SEND_TX, { tx, wallet })\n\nexport const login = (message: string) =>\n  action(TransportActionTypes.LOGIN, message)\n\nexport const setRtcSid = (sid: string) =>\n  action(TransportActionTypes.SET_RTC_SID, sid)\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { QrLogin } from '../components/atoms'\n\nimport { getWalletListCommand } from '../helpers/jsonrps'\nimport { login } from '../store/transport/actions'\nimport { IConnectedReduxProps, IApplicationState } from '../store'\n\n// TODO: map errorfrom qrcode state and show if we will have it\ninterface IPropsFromState {\n  search: string\n  qrcodeData: string\n}\n\ninterface IPropsFromDispatch {\n  scanLoginData: typeof login\n}\n\ntype AllProps = IPropsFromState &\n  IPropsFromDispatch &\n  IConnectedReduxProps &\n  RouteComponentProps\n\nclass LoginPage extends React.Component<AllProps> {\n  public render() {\n    const { search, scanLoginData, qrcodeData } = this.props\n\n    const isRtc: boolean = new URLSearchParams(search).get('rtc') === 'true'\n    const value = isRtc ? qrcodeData : getWalletListCommand()\n    // TODO: add back url to push\n    // const { location } = props\n    // let pathname: string\n    // if (location && location.state && location.state.from) {\n    //   pathname = location.state.from.pathname\n    // }\n    return (\n      <React.Fragment>\n        <QrLogin\n          title={'Mobile Login'}\n          value={value}\n          onScan={scanLoginData}\n          readonly={isRtc}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({ router, transport }: IApplicationState) => ({\n  search: router.location.search,\n  qrcodeData: transport.qrcodeData,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  scanLoginData: (data: string) => dispatch(login(data)),\n})\n\nexport const Login = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginPage)\n","import * as React from 'react'\nimport {\n  Row,\n  H2,\n  H3,\n  Column,\n  Hr,\n  ButtonBase,\n  ButtonSecondary,\n  TextInput,\n  Link,\n} from '../components/atoms'\nimport styled from 'react-emotion'\n\nexport const Home: React.SFC<{}> = () => (\n  <React.Fragment>\n    <H2>Welcome Back!</H2>\n    <H3>Sign in to your wallet below</H3>\n    <Hr />\n\n    <Row>\n      <Column\n        style={{\n          width: '50%',\n          display: 'flex',\n          justifyContent: 'center',\n          paddingRight: '1rem',\n        }}\n      >\n        <Row>\n          <Link to=\"/login\">\n            <ButtonBase>Login using QR code</ButtonBase>\n          </Link>\n        </Row>\n        <Row>\n          <Link to=\"/login?rtc=true\">\n            <ButtonSecondary>Webrtc login</ButtonSecondary>\n          </Link>\n        </Row>\n      </Column>\n      <Column style={{ width: '50%' }}>\n        <Row>\n          <TextInput type=\"text\" placeholder=\"Type your wallet address here\" />\n          <Select flipToRight>\n            <option value=\"eth\" key=\"eth\">\n              'eth\n            </option>\n          </Select>\n        </Row>\n        <Row>\n          <ButtonSecondary>Login with address</ButtonSecondary>\n        </Row>\n      </Column>\n    </Row>\n  </React.Fragment>\n)\n\nexport const Select = styled('select')(\n  ({ flipToRight }: { flipToRight: boolean }) => ({\n    ':after': {\n      border: 'solid white',\n      borderWidth: '0 3px 3px 0',\n      content: '\"\"',\n      position: 'absolute',\n    },\n    appearance: 'none',\n    background: '#457b9d',\n    border: 0,\n    borderRadius: flipToRight ? '0 .2rem .2rem 0' : '.2rem',\n    color: '#f1faee',\n    padding: '0 1rem',\n    boxSizing: 'border-box',\n    position: 'relative',\n    margin: '.25rem 0',\n  })\n)\n","import * as React from 'react'\nimport styled, { keyframes } from 'react-emotion'\n\nexport const Loader = () => (\n  <LoadingOverlayInner>\n    <LoadingSpinner />\n  </LoadingOverlayInner>\n)\n\nconst LoadingSpinner: React.SFC = () => (\n  <Spinner>\n    <div className=\"cube1\" />\n    <div className=\"cube2\" />\n  </Spinner>\n)\n\nconst CubeMove = keyframes`\n  25% {\n    transform: translateX(42px) rotate(-90deg) scale(0.5);\n    -webkit-transform: translateX(42px) rotate(-90deg) scale(0.5);\n  } 50% {\n    transform: translateX(42px) translateY(42px) rotate(-179deg);\n    -webkit-transform: translateX(42px) translateY(42px) rotate(-179deg);\n  } 50.1% {\n    transform: translateX(42px) translateY(42px) rotate(-180deg);\n    -webkit-transform: translateX(42px) translateY(42px) rotate(-180deg);\n  } 75% {\n    transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);\n    -webkit-transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);\n  } 100% {\n    transform: rotate(-360deg);\n    -webkit-transform: rotate(-360deg);\n  }\n`\n\nconst Spinner = styled('div')`\n  margin: 100px auto;\n  width: 40px;\n  height: 40px;\n  position: relative;\n  & .cube1,\n  & .cube2 {\n    background-color: black;\n    width: 15px;\n    height: 15px;\n    position: absolute;\n    top: 0;\n    left: 0;\n    -webkit-animation: ${CubeMove} 1.8s infinite ease-in-out;\n    animation: ${CubeMove} 1.8s infinite ease-in-out;\n  }\n  & .cube2 {\n    -webkit-animation-delay: -0.9s;\n    animation-delay: -0.9s;\n  }\n`\nconst LoadingOverlayInner = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 200px;\n`\n","export interface IWalletBase extends ApiResponse {\n  blockchain: string\n  address: string\n  chainId: string | number\n  balance?: string\n}\n\nexport interface IWalletEth extends IWalletBase {\n  nonce: number\n  txs?: IEthTx[]\n}\n\n// TODO: autogenrate, validate this !!!!\nexport interface IEthTx {\n  blockHash: string\n  blockNumber: string\n  confirmations: string\n  contractAddress: string\n  cumulativeGasUsed: string\n  from: string\n  gas: string\n  gasPrice: string\n  gasUsed: string\n  hash: string\n  input: string\n  isError: string\n  nonce: string\n  timeStamp: number\n  to: string\n  transactionIndex: string\n  txreceipt_status: string\n  value: string\n}\n\nexport interface IEosTx {\n  act: any\n  createdAt: string\n}\n\nexport interface IWalletEos extends IWalletBase {}\n\nexport type IWallet = IWalletBase | IWalletEos | IWalletEth\nexport type ApiResponse = Record<string, any>\n\nexport enum WalletsActionTypes {\n  FETCH_REQUEST = '@@wallets/FETCH_DATA_REQUEST',\n  FETCH_SUCCESS = '@@wallets/FETCH_DATA_SUCCESS',\n  FETCH_ERROR = '@@wallets/FETCH_DATA_ERROR',\n  ADD_WALLET = '@@wallets/ADD_WALLET',\n  SET_SENDING_TX_DATA = '@@wallets/SET_SENDING_TX_DATA',\n}\n\nexport interface IWalletsState {\n  readonly item: IWalletEth | IWalletEos\n  readonly items: IWalletEth[] | IWalletEos[]\n  readonly sendingTxData: ISendingTxData\n  readonly errors?: string\n  readonly loading: boolean\n}\n\nexport interface ISendingTxData {\n  signTx?: string\n  hash?: string\n  formData?: IEthTxFormValues | IEosTxFormValues\n  error?: string\n}\n\nexport interface IEthTxFormValues {\n  to: string\n  gasPrice: number\n  data: string\n  amount: number\n}\n\nexport interface IEosTxFormValues {\n  to: string\n  memo: string\n  amount: number\n}\n","import { action } from 'typesafe-actions'\nimport {\n  WalletsActionTypes,\n  IWalletEth,\n  IWalletEos,\n  IWalletBase,\n  ISendingTxData,\n} from './types'\n\nexport const fetchRequest = () => action(WalletsActionTypes.FETCH_REQUEST)\nexport const fetchSuccess = (item: IWalletEth | IWalletEos) =>\n  action(WalletsActionTypes.FETCH_SUCCESS, item)\nexport const fetchError = (message: string) =>\n  action(WalletsActionTypes.FETCH_ERROR, message)\n\nexport const addWallet = (wallet: IWalletBase) =>\n  action(WalletsActionTypes.ADD_WALLET, wallet)\n\nexport const setSendingTxData = (data: ISendingTxData) =>\n  action(WalletsActionTypes.SET_SENDING_TX_DATA, data)\n","import styled from 'react-emotion'\n\nexport const OverflowTd = styled('td')({\n  maxWidth: '20vw',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n})\n\nexport const Table = styled('table')({\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  td: {\n    color: '#2e3d3f',\n    padding: '1rem .5rem',\n  },\n  th: {\n    color: '#457b9d',\n    padding: '.5rem',\n  },\n  tr: {\n    borderBottom: '1px solid #b2bcb9',\n  },\n  width: '100%',\n})\n","import * as React from 'react'\nimport { IWalletBase, IWalletEth } from '../../store/wallets/types'\n\nimport { EthTx } from './eth'\nimport { EosTX } from './eos'\n\ninterface IProps {\n  wallet: IWalletBase | IWalletEth\n}\n\nexport const TXList: React.SFC<IProps> = ({ wallet }) => {\n  if (!wallet.txs) return <div />\n\n  if (wallet.blockchain === 'eth') {\n    return EthTx(wallet.txs)\n  }\n\n  if (wallet.blockchain === 'eos') {\n    return EosTX(wallet.txs)\n  }\n\n  return <div>hi</div>\n}\n","import * as React from 'react'\n\nimport { OverflowTd, Table } from './common'\nimport { IEthTx } from '../../store/wallets/types'\n\nconst API_URL = 'https://ropsten.etherscan.io/tx'\n\nexport const EthTx = (txs: IEthTx[]) => {\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>TxHash</th>\n          <th>Address</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {txs.map((item: IEthTx, index: number) => (\n          <tr key={index}>\n            <td>{new Date(item.timeStamp * 1000).toLocaleString()}</td>\n            <OverflowTd>\n              <a\n                target=\"_blank\"\n                // TODO: make genrator explorer url for blockchains\n                href={`${API_URL}/${item.hash}`}\n              >\n                {item.hash}\n              </a>\n            </OverflowTd>\n            <OverflowTd>{item.from}</OverflowTd>\n            <td>{item.value}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )\n}\n","import * as React from 'react'\n\nimport { Table } from './common'\nimport { IEosTx } from '../../store/wallets/types'\n\nexport const EosTX = (txs: IEosTx[]) => {\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>Type</th>\n          <th>Act</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {txs.map((item: IEosTx, index: number) => (\n          <tr key={index}>\n            <td>{new Date(item.createdAt).toLocaleString()}</td>\n            <td>{item.act.name}</td>\n            <td>\n              {item.act.name === 'transfer' &&\n                `${item.act.data.from} -> ${item.act.data.to}`}\n              {item.act.name === 'delegatebw' && `${item.act.data.from}`}\n              {item.act.name === 'buyrambytes' && `${item.act.data.payer}`}\n            </td>\n            <td>\n              {item.act.name === 'transfer' && `${item.act.data.quantity}`}\n              {item.act.name === 'delegatebw' && (\n                <React.Fragment>\n                  <span>{`CPU ${item.act.data.stake_cpu_quantity}`}</span>\n                  <br />\n                  <span>{`RAM ${item.act.data.stake_net_quantity}`}</span>\n                </React.Fragment>\n              )}\n              {item.act.name === 'buyrambytes' &&\n                `${item.act.data.bytes} bytes`}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )\n}\n","import * as React from 'react'\nimport styled from 'react-emotion'\nimport { Row, H2, Column, ButtonBase, H1, Hr } from '../components/atoms'\nimport { Loader } from '../components/Spinner'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState, IConnectedReduxProps } from '../store'\nimport { addWallet } from '../store/wallets/actions'\nimport { IWallet, IWalletBase } from '../store/wallets/types'\n\nimport { TXList } from './TXList'\n\ninterface IPropsFromState {\n  loading: boolean\n  wallet: IWallet\n}\n\ninterface IPropsFromDispatch {\n  addWallet: typeof addWallet\n}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch & IConnectedReduxProps\n\nclass WalletPage extends React.Component<AllProps> {\n  public componentDidMount() {\n    const { wallet, addWallet: addWalletDispatch } = this.props\n\n    addWalletDispatch(wallet)\n  }\n\n  public render() {\n    const { wallet, loading } = this.props\n    return (\n      <React.Fragment>\n        <Column>\n          <Row>\n            <Column style={{ flexBasis: '15rem', marginRight: '2rem' }}>\n              <Link to={`/wallets/${wallet.address}/tx/create`}>\n                <ButtonBase>Create New Tx</ButtonBase>\n              </Link>\n              <Link to={`/wallets/${wallet.address}/contract/create`}>\n                <ButtonBase>Call Contract</ButtonBase>\n              </Link>\n            </Column>\n            <Column>\n              <H1>{wallet.blockchain} Wallet</H1>\n              <H2>\n                <Address>{wallet.address}</Address>\n              </H2>\n            </Column>\n          </Row>\n          <Hr />\n          <TXList wallet={wallet} />\n          {loading && <Loader />}\n        </Column>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  loading: wallets.loading,\n  wallet: wallets.item,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  addWallet: (wallet: IWalletBase) => dispatch(addWallet(wallet)),\n})\n\nexport const Wallet = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WalletPage)\n\nconst Address = styled('div')({\n  fontSize: '.8rem',\n  lineHeight: '1.5rem',\n})\n","import * as React from 'react'\nimport { Formik, FormikProps, Form, Field, FieldProps } from 'formik'\nimport {\n  Row,\n  H1,\n  Hr,\n  ButtonClose,\n  Column,\n  Label,\n  TextInput,\n  LabelAtop,\n  TextArea,\n  ButtonBase,\n} from '../../components/atoms'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState } from '../../store'\nimport { IWallet, IEthTxFormValues } from '../../store/wallets/types'\nimport { createTransaction } from '../../store/transport/actions'\n\nimport styled from 'react-emotion'\n\ninterface IPropsFromState {\n  wallet: IWallet\n}\n\ninterface IPropsFromDispatch {\n  createTx: typeof createTransaction\n}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch\n\nconst CreateTxPage: React.SFC<AllProps> = ({ wallet, createTx }) => (\n  <React.Fragment>\n    <Row>\n      <H1>Send {wallet.blockchain}</H1>\n      <ButtonClose />\n    </Row>\n    <Hr />\n    <Formik\n      initialValues={{ to: '', gasPrice: 3, data: '', amount: 0 }}\n      onSubmit={(values: IEthTxFormValues) => createTx(values)}\n      render={(formikBag: FormikProps<IEthTxFormValues>) => (\n        <Form>\n          <Column>\n            <Label>To:</Label>\n            <Field\n              name=\"to\"\n              render={({ field, form }: FieldProps<IEthTxFormValues>) => (\n                <TextInput type=\"text\" placeholder=\"Address\" {...field} />\n              )}\n            />\n            <RowMargined>\n              <Column>\n                <Label>Enter amount:</Label>\n                <Row>\n                  <LabelAtop label={wallet.blockchain}>\n                    <Field\n                      name=\"amount\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEthTxFormValues>) => (\n                        <TextInput\n                          type=\"number\"\n                          min=\"0\"\n                          step={(1e-18).toFixed(20)}\n                          {...field}\n                        />\n                      )}\n                    />\n                  </LabelAtop>\n                  <LabelAtop label=\"usd\">\n                    <Field\n                      name=\"amount\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEthTxFormValues>) => (\n                        <TextInput\n                          type=\"number\"\n                          readOnly\n                          step={(1e-18).toFixed(20)}\n                          value={field.value}\n                          // TODO: add totalPrice\n                          // value={totalPrice}\n                        />\n                      )}\n                    />\n                  </LabelAtop>\n                </Row>\n              </Column>\n            </RowMargined>\n            <RowMargined>\n              <Column>\n                <Label>Description:</Label>\n                <Field\n                  name=\"data\"\n                  render={({ field, form }: FieldProps<IEthTxFormValues>) => (\n                    <TextArea {...field} />\n                  )}\n                />\n              </Column>\n            </RowMargined>\n            <RowMargined>\n              <Column>\n                <Field\n                  name=\"gasPrice\"\n                  render={({ field, form }: FieldProps<IEthTxFormValues>) => (\n                    <React.Fragment>\n                      <Label>Gas price {field.value} GWEI</Label>\n                      <TextInput type=\"range\" min=\"1\" max=\"7\" {...field} />\n                    </React.Fragment>\n                  )}\n                />\n                <Row>\n                  {/* // TODO: Calca gasprice and await time */}\n                  <span>gweiPrice</span>\n                  <span> {`< awaitTime min`}</span>\n                </Row>\n              </Column>\n            </RowMargined>\n            <ButtonBase type=\"submit\">Continue</ButtonBase>\n          </Column>\n        </Form>\n      )}\n    />\n  </React.Fragment>\n)\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  wallet: wallets.item,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  createTx: (data: IEthTxFormValues) => dispatch(createTransaction(data)),\n})\n\nexport const CreateEthTx = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateTxPage as any)\n\nconst RowMargined = styled(Row)({\n  margin: '1rem 0',\n})\n","import * as React from 'react'\nimport { Formik, FormikProps, Form, Field, FieldProps } from 'formik'\nimport {\n  Row,\n  H1,\n  Hr,\n  ButtonClose,\n  Column,\n  Label,\n  TextInput,\n  LabelAtop,\n  TextArea,\n  ButtonBase,\n} from '../../components/atoms'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState } from '../../store'\nimport { IWallet, IEosTxFormValues } from '../../store/wallets/types'\nimport { createTransaction } from '../../store/transport/actions'\n\nimport styled from 'react-emotion'\n\ninterface IPropsFromState {\n  wallet: IWallet\n}\n\ninterface IPropsFromDispatch {\n  createTx: typeof createTransaction\n}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch\n\nconst CreateTxPage: React.SFC<AllProps> = ({ wallet, createTx }) => (\n  <React.Fragment>\n    <Row>\n      <H1>Send {wallet.blockchain}</H1>\n      <ButtonClose />\n    </Row>\n    <Hr />\n    <Formik\n      initialValues={{ to: '', memo: '', amount: 0 }}\n      onSubmit={(values: IEosTxFormValues) => createTx(values)}\n      render={(formikBag: FormikProps<IEosTxFormValues>) => (\n        <Form>\n          <Column>\n            <Label>To:</Label>\n            <Field\n              name=\"to\"\n              render={({ field, form }: FieldProps<IEosTxFormValues>) => (\n                <TextInput type=\"text\" placeholder=\"Address\" {...field} />\n              )}\n            />\n            <RowMargined>\n              <Column>\n                <Label>Enter amount:</Label>\n                <Row>\n                  <LabelAtop label={wallet.blockchain}>\n                    <Field\n                      name=\"amount\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEosTxFormValues>) => (\n                        <TextInput\n                          type=\"number\"\n                          min=\"0\"\n                          step={(1e-4).toFixed(4)}\n                          {...field}\n                        />\n                      )}\n                    />\n                  </LabelAtop>\n                  <LabelAtop label=\"usd\">\n                    <Field\n                      name=\"amount\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEosTxFormValues>) => (\n                        <TextInput\n                          type=\"number\"\n                          readOnly\n                          step={(1e-4).toFixed(4)}\n                          value={field.value}\n                          // TODO: add totalPrice\n                          // value={totalPrice}\n                        />\n                      )}\n                    />\n                  </LabelAtop>\n                </Row>\n              </Column>\n            </RowMargined>\n            <RowMargined>\n              <Column>\n                <Label>Description:</Label>\n                <Field\n                  name=\"memo\"\n                  render={({ field, form }: FieldProps<IEosTxFormValues>) => (\n                    <TextArea {...field} />\n                  )}\n                />\n              </Column>\n            </RowMargined>\n            <ButtonBase type=\"submit\">Continue</ButtonBase>\n          </Column>\n        </Form>\n      )}\n    />\n  </React.Fragment>\n)\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  wallet: wallets.item,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  createTx: (data: IEosTxFormValues) => dispatch(createTransaction(data)),\n})\n\nexport const CreateEosTx = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateTxPage as any)\n\nconst RowMargined = styled(Row)({\n  margin: '1rem 0',\n})\n","import * as React from 'react'\nimport { connect } from 'react-redux'\n\nimport { IApplicationState } from '../../store'\nimport { IWallet } from '../../store/wallets/types'\nimport { CreateEthTx } from './eth'\nimport { CreateEosTx } from './eos'\n\ninterface IPropsFromState {\n  wallet: IWallet\n}\n\nconst CreateTxPage: React.SFC<IPropsFromState> = ({ wallet }) => {\n  return (\n    <React.Fragment>\n      {wallet.blockchain === 'eth' && <CreateEthTx />}\n      {wallet.blockchain === 'eos' && <CreateEosTx />}\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  wallet: wallets.item,\n})\n\nexport const CreateTx = connect(\n  mapStateToProps,\n  null\n)(CreateTxPage)\n","import * as React from 'react'\nimport { QrLogin } from '../components/atoms'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState, IConnectedReduxProps } from '../store'\nimport { sendTransaction } from '../store/transport/actions'\nimport { IWalletBase } from '../store/wallets/types'\n\ninterface IPropsFromState {\n  signTx: string\n  wallet: IWalletBase\n}\n\ninterface IPropsFromDispatch {\n  sendTx: typeof sendTransaction\n}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch & IConnectedReduxProps\n\nconst SignPage: React.SFC<AllProps> = ({ signTx, sendTx, wallet }) => {\n  const handleScan = (result: string) => sendTx(result, wallet)\n\n  return (\n    <React.Fragment>\n      <QrLogin\n        title={'Sign Transaction By Mobile'}\n        value={signTx || ''}\n        onScan={handleScan}\n      />\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  signTx: wallets.sendingTxData.signTx!,\n  wallet: wallets.item,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  sendTx: (data: string, wallet: IWalletBase) =>\n    dispatch(sendTransaction(data, wallet)),\n})\n\nexport const Sign = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignPage)\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState, IConnectedReduxProps } from '../store'\nimport { Row, H2, ButtonClose, H1, Hr } from '../components/atoms'\nimport styled from 'react-emotion'\n\ninterface IPropsFromState {\n  status: string\n}\n\ninterface IPropsFromDispatch {}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch & IConnectedReduxProps\n\nconst StatusPage: React.SFC<AllProps> = ({ status }) => (\n  <React.Fragment>\n    {status}\n    <Row>\n      <H1>Tx sent result</H1>\n      <ButtonClose />\n    </Row>\n    <Hr />\n    <LoadingText>Status : {status}</LoadingText>\n  </React.Fragment>\n)\n\nconst mapStateToProps = ({ webrtc }: IApplicationState) => ({\n  status: webrtc.status,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({})\n\nexport const Status = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StatusPage)\n\nconst LoadingText = styled(H2)`\n  &:after {\n    content: ' .';\n    animation: dots 1s steps(5, end) infinite;\n  }\n\n  @keyframes dots {\n    0%,\n    20% {\n      color: rgba(0, 0, 0, 0);\n      text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);\n    }\n    40% {\n      color: black;\n      text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);\n    }\n    60% {\n      text-shadow: 0.25em 0 0 black, 0.5em 0 0 rgba(0, 0, 0, 0);\n    }\n    80%,\n    100% {\n      text-shadow: 0.25em 0 0 black, 0.5em 0 0 black;\n    }\n  }\n`\n","import { H1, H2, Row, ButtonClose, Hr } from '../components/atoms'\nimport styled from 'react-emotion'\nimport * as React from 'react'\nimport { connect } from 'react-redux'\nimport { IApplicationState, IConnectedReduxProps } from '../store'\nimport { ISendingTxData, IWalletBase } from '../store/wallets/types'\n\ninterface IPropsFromState {\n  sendingData: ISendingTxData\n  wallet: IWalletBase\n}\n\ntype AllProps = IPropsFromState & IConnectedReduxProps\n\nconst getExplrUrl = (bc: string, hash: string | undefined) => {\n  switch (bc) {\n    case 'eth':\n      return `https://ropsten.etherscan.io/tx/${hash}`\n    case 'eos':\n      return `https://jungle.eospark.com/tx/${hash}`\n    default:\n      return ''\n  }\n}\n\nconst TxViewPage: React.SFC<AllProps> = ({\n  sendingData: { formData, hash, error },\n  wallet,\n}) => {\n  return (\n    <React.Fragment>\n      <Row>\n        <H1>Tx sent result</H1>\n        <ButtonClose />\n      </Row>\n      <Hr />\n      {error ? (\n        <H2>Error : {error}</H2>\n      ) : (\n        <div>\n          <H2>To : {formData!.to}</H2>\n          <a target=\"_blank\" href={getExplrUrl(wallet.blockchain, hash)}>\n            {hash}\n          </a>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  sendingData: wallets.sendingTxData,\n  wallet: wallets.item,\n})\n\nexport const TxView = connect(mapStateToProps)(TxViewPage)\n\nexport const Container = styled('main')({\n  alignItems: 'center',\n  background: '#f1faee',\n  display: 'flex',\n  justifyContent: 'center',\n  minHeight: 'calc(100vh - 8rem - 4vh)',\n  width: '100vw',\n})\n","import * as React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport { DefaultLayout, MainLayout, ModalLayout } from './components/layouts'\nimport { Login, Home, Wallet, CreateTx, Sign, Status, TxView } from './pages'\n\nexport const Routes: React.SFC = () => {\n  return (\n    <div>\n      <Switch>\n        <DefaultLayout exact path=\"/\" component={Home} />>\n        <DefaultLayout path=\"/login\" component={Login} />\n        <MainLayout>\n          <Route exact path=\"/wallets/:id\" component={Wallet} />\n          <ModalLayout path=\"/wallets/:id/tx/create\" component={CreateTx} />\n          <ModalLayout path=\"/wallets/:id/tx/sign\" component={Sign} />\n          <ModalLayout path=\"/tx/:id\" component={TxView} />\n          <ModalLayout path=\"/status\" component={Status} />\n        </MainLayout>\n      </Switch>\n    </div>\n  )\n}\n","import { ITheme } from '../utils/styled'\n\n//for example\nexport const theme: ITheme = {\n  colors: {\n    background: '#000000',\n    body: '#2e2e2c',\n    black: '#000000',\n    white: '#2e2e2c',\n  },\n  fontSizes: {\n    h1: '2.441rem',\n    h2: '1.953rem',\n    h3: '1.563rem',\n    h4: '1.25rem',\n  },\n  breakpoints: {\n    xs: '0px',\n    sm: '576px',\n    md: '768px',\n    lg: '992px',\n    xl: '1200px',\n  },\n  widths: {\n    md: '720px',\n    lg: '960px',\n    xl: '1140px',\n  },\n}\n","import { css } from 'react-emotion'\n\nexport default css`\n  /*! modern-normalize | MIT License | https://github.com/sindresorhus/modern-normalize */\n  /* Document\n    ========================================================================== */\n  /**\n  * Use a better box model (opinionated).\n  */\n  html {\n    box-sizing: border-box;\n  }\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n  /**\n  * Use a more readable tab size (opinionated).\n  */\n  :root {\n    -moz-tab-size: 4;\n    tab-size: 4;\n  }\n  /**\n  * Correct the line height in all browsers.\n  */\n  html {\n    line-height: 1.15;\n  }\n  /* Sections\n    ========================================================================== */\n  /**\n  * Remove the margin in all browsers.\n  */\n  body {\n    margin: 0;\n  }\n  /**\n  * Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  */\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n      Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\n      'Segoe UI Symbol';\n  }\n  /**\n  * Correct the font size and margin on \\`h1\\` elements within \\`section\\` and\n  * \\`article\\` contexts in Chrome, Firefox, and Safari.\n  */\n  h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n  }\n  /* Grouping content\n    ========================================================================== */\n  /**\n  * Add the correct height in Firefox.\n  */\n  hr {\n    height: 0;\n  }\n  /* Text-level semantics\n    ========================================================================== */\n  /**\n  * Add the correct text decoration in Chrome, Edge, and Safari.\n  */\n  abbr[title] {\n    text-decoration: underline dotted;\n  }\n  /**\n  * Add the correct font weight in Chrome, Edge, and Safari.\n  */\n  b,\n  strong {\n    font-weight: bolder;\n  }\n  /**\n  * 1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  * 2. Correct the odd \\`em\\` font sizing in all browsers.\n  */\n  code,\n  kbd,\n  samp,\n  pre {\n    font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier,\n      monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n  /**\n  * Add the correct font size in all browsers.\n  */\n  small {\n    font-size: 80%;\n  }\n  /**\n  * Prevent \\`sub\\` and \\`sup\\` elements from affecting the line height in\n  * all browsers.\n  */\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  sup {\n    top: -0.5em;\n  }\n  /* Forms\n    ========================================================================== */\n  /**\n  * 1. Change the font styles in all browsers.\n  * 2. Remove the margin in Firefox and Safari.\n  */\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 1 */\n    line-height: 1.15; /* 1 */\n    margin: 0; /* 2 */\n  }\n  /**\n  * Remove the inheritance of text transform in Edge and Firefox.\n  * 1. Remove the inheritance of text transform in Firefox.\n  */\n  button,\n  select {\n    /* 1 */\n    text-transform: none;\n  }\n  /**\n  * Correct the inability to style clickable types in iOS and Safari.\n  */\n  button,\n  [type='button'],\n  [type='reset'],\n  [type='submit'] {\n    -webkit-appearance: button;\n  }\n  /**\n  * Remove the inner border and padding in Firefox.\n  */\n  button::-moz-focus-inner,\n  [type='button']::-moz-focus-inner,\n  [type='reset']::-moz-focus-inner,\n  [type='submit']::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n  /**\n  * Restore the focus styles unset by the previous rule.\n  */\n  button:-moz-focusring,\n  [type='button']:-moz-focusring,\n  [type='reset']:-moz-focusring,\n  [type='submit']:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n  /**\n  * Correct the padding in Firefox.\n  */\n  fieldset {\n    padding: 0.35em 0.75em 0.625em;\n  }\n  /**\n  * Remove the padding so developers are not caught out when they zero out\n  *    \\`fieldset\\` elements in all browsers.\n  */\n  legend {\n    padding: 0;\n  }\n  /**\n  * Add the correct vertical alignment in Chrome and Firefox.\n  */\n  progress {\n    vertical-align: baseline;\n  }\n  /**\n  * Correct the cursor style of increment and decrement buttons in Chrome.\n  */\n  [type='number']::-webkit-inner-spin-button,\n  [type='number']::-webkit-outer-spin-button {\n    height: auto;\n  }\n  /**\n  * 1. Correct the odd appearance in Chrome and Safari.\n  * 2. Correct the outline style in Safari.\n  */\n  [type='search'] {\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n  }\n  /**\n  * Remove the inner padding in Chrome and Safari on macOS.\n  */\n  [type='search']::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  /**\n  * 1. Correct the inability to style clickable types in iOS and Safari.\n  * 2. Change font properties to \\`inherit\\` in Safari.\n  */\n  ::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n  }\n  /* Interactive\n    ========================================================================== */\n  /*\n  * Add the correct display in Edge and Firefox.\n  */\n  details {\n    display: block;\n  }\n  /*\n  * Add the correct display in all browsers.\n  */\n  summary {\n    display: list-item;\n  }\n`\n","import { css } from 'react-emotion'\n\nexport default css`\n  html,\n  body {\n    font-family: 'Lato', 'Arial', sans-serif;\n    margin: 0;\n  }\n  #root {\n    height: 100%;\n  }\n`\n","import { injectGlobal } from 'react-emotion'\nimport normalize from './normalize'\nimport globals from './globals'\n\n// tslint:disable-next-line:no-unused-expression\ninjectGlobal`\n  ${normalize}\n  ${globals}\n`\n","import * as React from 'react'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { Store } from 'redux'\nimport { History } from 'history'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport { Routes } from './routes'\nimport { IApplicationState } from './store'\nimport { theme } from './styles/theme'\nimport './styles'\n\n\ninterface IOwnProps {\n  store: Store<IApplicationState>\n  history: History\n}\n\ntype AllProps = IOwnProps\n\nexport class App extends React.Component<AllProps> {\n  public render() {\n    const { store, history } = this.props\n\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <ThemeProvider theme={theme}>\n            <Routes />\n          </ThemeProvider>\n        </ConnectedRouter>\n      </Provider>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","export default function callApi(\n  method: string,\n  url: string,\n  path: string,\n  data?: any\n) {\n  return fetch(url + path, {\n    method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    mode: 'cors',\n    body: JSON.stringify(data),\n  }).then(res => res.json())\n}\n","import callApi from './../utils/callApi'\nimport Web3 from 'web3'\nimport { TransactionReceipt } from 'web3/types'\nconst web3 = new Web3()\n\nconst API_ENDPOINT =\n  process.env.REACT_APP_API_ENDPOINT || 'https://api-ropsten.etherscan.io'\n\nweb3.setProvider(\n  new Web3.providers.WebsocketProvider('wss://ropsten.infura.io/ws')\n)\n\nexport async function getNonce(address: string): Promise<number> {\n  return web3.eth.getTransactionCount(address)\n}\n\nexport async function sendTx(tx: string): Promise<TransactionReceipt> {\n  // console.log(tx);\n  return web3.eth.sendSignedTransaction(tx)\n}\n\nexport async function getTx(address: string) {\n  return callApi(\n    'get',\n    API_ENDPOINT,\n    `/api?module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&page=1&offset=10&sort=asc&apikey=YourApiKeyToken`\n  )\n}\n\nexport async function getInfo(address: string) {\n  const res = await getTx(address)\n  const nonce = await getNonce(address)\n\n  return {\n    txs: res.result,\n    nonce,\n  }\n}\n","import callApi from './../utils/callApi';\nimport Eos from \"eosjs\"\n\nconst chain = {\n  main: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906', // main network\n  jungle: 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473', // jungle testnet\n  sys: 'cf057bbfb72640471fd910bcb67639c22df9f92470936cddc1ade0e2f2e7dc4f' // local developer\n};\n\nexport const getInfo = (account: string) => {\n    // TODO: get right block explorer\n    return callApi(\n      'GET',\n      `https://junglehistory.cryptolions.io:4433/v1`,\n      `/history/get_actions/${account}?limit=100&skip=0`\n    )\n  }\n;\n\n// Create instance Eosjs\nconst eos = Eos({\n  httpEndpoint: 'http://jungle2.cryptolions.io:80',\n  chainId: chain.jungle,\n});\n\nexport const sendTx = async (signedTx: string) => {\n  const txHash = await eos.pushTransaction(signedTx);\n  console.log('txHash:', txHash)\n\n  return txHash.transaction_id\n}","import { IWallet } from \"../store/wallets/types\";\n\nimport { getInfo as ethInfo } from './eth';\nimport { getInfo as eosInfo } from './eos';\n\nexport const getBcInfo = async (wallet: IWallet) => {\n  if (wallet.blockchain === 'eth') {\n    return ethInfo(wallet.address)\n  }\n\n  if (wallet.blockchain === 'eos') {\n    return eosInfo(wallet.address)\n      .then(result => ({ txs: result.actions }))\n  }\n\n  return null\n}","import { all, call, fork, put, takeEvery } from 'redux-saga/effects'\nimport { WalletsActionTypes } from './types'\nimport { fetchError, fetchSuccess, addWallet, fetchRequest } from './actions'\nimport { getBcInfo } from '../../helpers/common'\n\nfunction* handleSetWallet(action: ReturnType<typeof addWallet>) {\n  try {\n    let wallet = action.payload\n    // start fetch request for update wallet data\n    yield put(fetchRequest())\n    // fetch wallets txs history\n    const res = yield call(getBcInfo, wallet)\n\n    // added txs history\n    wallet = { ...wallet, ...res }\n\n    if (res.error) {\n      yield put(fetchError(res.error))\n    } else {\n      yield put(fetchSuccess(wallet))\n    }\n  } catch (err) {\n    if (err instanceof Error) {\n      yield put(fetchError(err.stack!))\n    } else {\n      yield put(fetchError('An unknown error occured.'))\n    }\n  }\n}\n\nfunction* watchFetchRequest() {\n  yield takeEvery(WalletsActionTypes.ADD_WALLET, handleSetWallet)\n}\n\nfunction* walletsSaga() {\n  yield all([fork(watchFetchRequest)])\n}\n\nexport default walletsSaga\n","export enum AuthActionTypes {\n  AUTH_SUCCESS = '@@auth/AUTH_SUCCESS',\n  AUTH_ERROR = '@@auth/AUTH_ERROR',\n}\n\nexport interface IAuthState {\n  readonly isAuth: boolean\n}\n","import { Reducer } from 'redux'\nimport {\n  IWalletsState,\n  WalletsActionTypes,\n  IWalletEth,\n  IWalletEos,\n  IEthTxFormValues,\n} from './types'\n\nconst initialState: IWalletsState = {\n  item: {} as IWalletEth | IWalletEos,\n  items: [],\n  sendingTxData: {\n    signTx: '',\n    hash: '',\n    formData: {} as IEthTxFormValues,\n    error: '',\n  },\n  errors: undefined,\n  loading: false,\n}\n\nconst reducer: Reducer<IWalletsState> = (state = initialState, action) => {\n  switch (action.type) {\n    case WalletsActionTypes.FETCH_REQUEST: {\n      return { ...state, loading: true }\n    }\n    case WalletsActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, item: action.payload }\n    }\n    case WalletsActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload }\n    }\n    case WalletsActionTypes.ADD_WALLET: {\n      return { ...state, item: action.payload }\n    }\n    case WalletsActionTypes.SET_SENDING_TX_DATA: {\n      return {\n        ...state,\n        sendingTxData: { ...state.sendingTxData, ...action.payload },\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as walletsReducer }\n","import { Reducer } from 'redux'\nimport { IAuthState, AuthActionTypes } from './types'\n\nconst initialState: IAuthState = {\n  isAuth: false,\n}\n\nconst reducer: Reducer<IAuthState> = (state = initialState, action) => {\n  switch (action.type) {\n    case AuthActionTypes.AUTH_SUCCESS: {\n      return { ...state, isAuth: true }\n    }\n    case AuthActionTypes.AUTH_ERROR: {\n      return { ...state, isAuth: false }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as authReducer }\n","export default function parseMessage(data: string) {\n  const result = data\n    .replace(/^([^|]*)\\|(.*\\D.*)\\|(.*)$/, '$1|\"$2\"|$3')\n    .replace(/^([^|]+)\\|([^|]*)\\|(.*)$/, '{\"method\":\"$1\",\"id\":$2,\"params\":$3}')\n    .replace(/^\\|([^|]*)\\|(.*)$/, '{\"id\":$1,\"result\":$2}')\n  return parseJsonString(result)\n}\n\nconst parseJsonString = (str: string) => {\n  try {\n    return JSON.parse(str)\n  } catch (err) {\n    return Error(err)\n  }\n}\n","import { RTCHelper } from '../../helpers/webrtc/webrtc'\n\nexport enum WebrtcActionTypes {\n  CONNECTION_OPEN = '@@Webrtc/CONNECTION_OPEN',\n  CONNECTION_CLOSE = '@@Webrtc/CONNECTION_CLOSE',\n  SET_CONNECTION_SID = '@@Webrtc/SET_CONNECTION_SID',\n  SET_STATUS = '@@Webrtc/SET_STATUS',\n}\n\nexport interface IWebrtcState {\n  readonly rtc: RTCHelper\n  readonly connected: boolean\n  readonly status: string\n}\n","import { IWalletBase } from \"../store/wallets/types\";\nimport { sendTx as sendEth } from './eth';\nimport { sendTx as sendEos } from './eos';\n\nexport const sendTx = (tx: string, wallet: IWalletBase) => {\n  console.log(tx, wallet);\n  switch (wallet.blockchain) {\n    case 'eth':\n      return sendEth(tx);\n    case 'eos':\n      return sendEos(tx);\n    \n    default:\n      return null;\n  }\n}","import { action } from 'typesafe-actions'\nimport { AuthActionTypes } from './types'\n\nexport const authSuccess = () => action(AuthActionTypes.AUTH_SUCCESS)\nexport const authError = () => action(AuthActionTypes.AUTH_ERROR)\n","import { action } from 'typesafe-actions'\nimport { WebrtcActionTypes } from './types'\n\nexport const connectionReady = () => action(WebrtcActionTypes.CONNECTION_OPEN)\n\nexport const connectionClosing = () =>\n  action(WebrtcActionTypes.CONNECTION_CLOSE)\n\nexport const setConnectionSid = () =>\n  action(WebrtcActionTypes.SET_CONNECTION_SID)\n\nexport const setStatus = (status: string) =>\n  action(WebrtcActionTypes.SET_STATUS, status)\n","import { all, fork, put, takeEvery, select } from 'redux-saga/effects'\nimport { login, createTransaction, sendTransaction } from './actions'\nimport { TransportActionTypes } from './types'\nimport { IApplicationState } from '..'\nimport { push } from 'connected-react-router'\nimport { getSignTransferTxCommand } from '../../helpers/jsonrps'\nimport parseMessage from '../../utils/parseMessage'\nimport { sendTx } from '../../helpers/sendtx'\nimport { setSendingTxData, fetchSuccess } from '../wallets/actions'\nimport { authSuccess } from '../auth/actions'\nimport { setStatus } from '../webrtc/actions'\n\nfunction* handleLogin(action: ReturnType<typeof login>) {\n  try {\n    // TODO: check correct message id\n    const { result: wallets } = parseMessage(action.payload)\n    const wallet = wallets[0]\n\n    // call addWallet and authSuccess after success read and parse qrcode from login page\n    yield put(authSuccess())\n    yield put(fetchSuccess(wallet))\n    yield put(push(`/wallets/${wallet.address}`))\n  } catch (err) {\n    console.log('handleLogin error', err)\n  }\n}\n\nfunction* handleCreateTx(action: ReturnType<typeof createTransaction>) {\n  const wallet = yield select((state: IApplicationState) => state.wallets.item)\n  const { connected, rtc } = yield select(\n    (state: IApplicationState) => state.webrtc\n  )\n  try {\n    const txFormData = action.payload\n\n    const signedData = yield getSignTransferTxCommand(txFormData, {\n      blockchain: wallet.blockchain,\n      chainId: wallet.chainId,\n      address: wallet.address,\n      nonce: wallet.nonce,\n    })\n    console.log(signedData)\n\n    yield put(\n      setSendingTxData({\n        signTx: signedData,\n        formData: txFormData,\n        error: '',\n        hash: '',\n      })\n    )\n\n    if (connected) {\n      // TODO: create action from webrtc store\n      yield all([put(setStatus('Verification')), put(push('/status'))])\n      rtc.dataChannel.send(signedData)\n    } else {\n      yield put(push(`/wallets/${wallet.address}/tx/sign`))\n    }\n  } catch (err) {\n    console.log('handleCreateTx error', err)\n  }\n}\n\nfunction* handleSendTx(action: ReturnType<typeof sendTransaction>) {\n  try {\n    const { result } = parseMessage(action.payload.tx)\n\n    const hash = yield sendTx(result, action.payload.wallet)\n\n    yield all([\n      put(setSendingTxData({ hash })),\n      put(push(`/tx/${hash}`)),\n    ])\n  } catch (err) {\n    yield all([\n      put(setSendingTxData({ error: err.message })),\n      put(push(`/tx/error`)),\n    ])\n    console.log('handleSendTx error', err)\n  }\n}\n\nfunction* watchSendTx() {\n  yield takeEvery(TransportActionTypes.SEND_TX, handleSendTx)\n}\n\nfunction* watchCreateTx() {\n  yield takeEvery(TransportActionTypes.CREATE_TX, handleCreateTx)\n}\n\nfunction* watchLogin() {\n  yield takeEvery(TransportActionTypes.LOGIN, handleLogin)\n}\n\nfunction* transportSaga() {\n  yield all([fork(watchLogin), fork(watchCreateTx), fork(watchSendTx)])\n}\n\nexport default transportSaga\n","export const handshakeServerUrl = `wss://duxi.io/shake`\n\nexport enum RTCCommands {\n  webrtcLogin = 1,\n  getWalletList = 2,\n  signTransferTx = 3,\n  signContractCall = 4,\n}\n","import { Reducer } from 'redux'\nimport { ITransportState, TransportActionTypes } from './types'\n\nconst initialState: ITransportState = {\n  qrcodeData: '',\n}\n\nconst reducer: Reducer<ITransportState> = (state = initialState, action) => {\n  switch (action.type) {\n    case TransportActionTypes.SET_RTC_SID: {\n      return { ...state, qrcodeData: action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as transportReducer }\n","import { call, take, put, cancelled, select } from 'redux-saga/effects'\nimport { eventChannel } from 'redux-saga'\n\nimport { handshakeServerUrl } from '../../constants'\nimport { connectionReady } from './actions'\nimport { getWalletListCommand } from '../../helpers/jsonrps'\nimport { setRtcSid } from '../transport/actions'\nimport { IApplicationState } from '..'\nimport { RTCHelper } from '../../helpers/webrtc/webrtc'\n\nconst makeOfferRequest = (offer: string) =>\n  JSON.stringify({ jsonrpc: '2.0', id: 1, method: 'offer', params: { offer } })\n\nconst makeIceRequest = (ice: RTCIceCandidate) =>\n  JSON.stringify({ jsonrpc: '2.0', id: 2, method: 'ice', params: { ice } })\n\nconst onOpenChannel = (ws: WebSocket) =>\n  eventChannel(emit => {\n    ws.addEventListener('open', emit)\n    ws.addEventListener('error', err => emit(err))\n    return () => ws.removeEventListener('open', emit)\n  })\n\nconst onMessageChannel = (ws: WebSocket) =>\n  eventChannel(emit => {\n    ws.addEventListener('message', emit)\n    return () => ws.removeEventListener('message', emit)\n  })\n\nfunction* answerSaga(ws: WebSocket, rtc: RTCHelper, answer: string) {\n  const sendIce = (ice: RTCIceCandidate) => ws.send(makeIceRequest(ice)) // TODO: Add typings\n  rtc.candidates.map(sendIce)\n  rtc.on('ice', sendIce)\n  yield call(rtc.pushAnswer, { type: 'answer' as RTCSdpType, sdp: answer })\n  yield call(rtc.waitConnection)\n\n  rtc.dataChannel!.send(getWalletListCommand())\n  yield put(connectionReady())\n  return ws.close()\n}\n\nexport default function* connectSaga() {\n  const rtc = yield select((state: IApplicationState) => state.webrtc.rtc)\n  const offerPromise = yield call(rtc.createOffer)\n  const ws = new WebSocket(handshakeServerUrl)\n  const openChan = onOpenChannel(ws)\n  const messageChan = onMessageChannel(ws)\n  yield take(openChan)\n\n  ws.send(makeOfferRequest(offerPromise.sdp))\n\n  while (true)\n    try {\n      const { data } = yield take(messageChan)\n      const { id, method, result, params } = JSON.parse(data.toString())\n\n      if (id === 1) yield put(setRtcSid(webrtcLogin(result.sid)))\n      if (method === 'ice') yield call(rtc.pushIceCandidate, params.ice)\n      if (method === 'answer')\n        return yield call(answerSaga, ws, rtc, params.answer)\n    } catch (err) {\n      console.log(err)\n    } finally {\n      if (yield cancelled()) {\n        openChan.close()\n        messageChan.close()\n        console.log('ws connection closed')\n      }\n    }\n}\n\nexport const webrtcLogin = (sid: string) => {\n  const params = { sid, url: handshakeServerUrl }\n\n  return `webrtcLogin|1|${JSON.stringify(params)}`\n}\n","import { fork, all, take, cancel, select, call, put } from 'redux-saga/effects'\nimport { eventChannel, takeEvery, delay } from 'redux-saga'\n\nimport connectTask from './connectSaga'\nimport parseMessage from '../../utils/parseMessage'\nimport { RTCCommands } from '../../constants'\nimport { login, sendTransaction } from '../transport/actions'\nimport { WebrtcActionTypes } from './types'\nimport { IApplicationState } from '..'\nimport { setStatus, connectionClosing } from './actions'\n\nfunction createDataChannel(dataChannel: RTCDataChannel) {\n  return eventChannel(emit => {\n    dataChannel.onmessage = (message: MessageEvent) => emit(message.data)\n\n    const unsubscribe = () => {\n      dataChannel.close()\n    }\n\n    return unsubscribe\n  })\n}\n\nfunction* watchDataChannel() {\n  const rtc = yield select((state: IApplicationState) => state.webrtc.rtc)\n  const wallet = yield select((state: IApplicationState) => state.wallets.item)\n  const channelMessage = yield call(createDataChannel, rtc.dataChannel)\n\n  while (true) {\n    const message = yield take(channelMessage)\n    const { id } = parseMessage(message)\n    switch (id) {\n      case RTCCommands.getWalletList:\n        yield put(login(message))\n        break\n      case RTCCommands.signTransferTx:\n        yield put(setStatus('Sending'))\n        yield put(sendTransaction(message, wallet))\n        break\n      default:\n        break\n    }\n  }\n}\n\nfunction* handleOpeningConnection() {\n  const rtc = yield select((state: IApplicationState) => state.webrtc.rtc)\n\n  while (true) {\n    yield delay(3000)\n    if (rtc.dataChannel.readyState === 'closing') yield put(connectionClosing())\n  }\n}\n\nfunction* watchStatusConnection() {\n  yield takeEvery(WebrtcActionTypes.CONNECTION_OPEN, handleOpeningConnection)\n  yield takeEvery(WebrtcActionTypes.CONNECTION_OPEN, handleOpeningConnection)\n}\n\nfunction* watchConnection() {\n  const bgConectionTask = yield fork(connectTask)\n\n  // dispose connection task\n  yield takeEvery(WebrtcActionTypes.CONNECTION_OPEN, function*() {\n    yield cancel(bgConectionTask)\n  })\n}\n\nfunction* webrtcSaga() {\n  yield all([\n    fork(watchConnection),\n    fork(watchDataChannel),\n    fork(watchStatusConnection),\n  ])\n}\n\nexport default webrtcSaga\n","import { EventEmitter } from 'events'\n\nexport class RTCHelper extends EventEmitter {\n  rpc = new RTCPeerConnection()\n  candidates: RTCIceCandidate[] = []\n  dataChannel?: RTCDataChannel\n  offer?: RTCSessionDescriptionInit\n  connected = false\n  tag = ''\n\n  constructor(public name?: string) {\n    super()\n\n    if (name) this.tag = `[${name}] `\n\n    this.rpc.onicecandidate = this.onIceCandidate\n    this.rpc.ondatachannel = this.onDataChannel\n  }\n  onIceCandidate = (ev: RTCPeerConnectionIceEvent) => {\n    console.log(`${this.tag}onIceCandidate: ${JSON.stringify(ev.candidate)}`)\n    if (ev.candidate) this.candidates.push(ev.candidate)\n\n    this.emit('ice', ev.candidate)\n  }\n  onDataChannel = (ev: RTCDataChannelEvent) => {\n    console.log(`${this.tag}onDataChannel: ${JSON.stringify(ev.channel)}`)\n    this.setChannel(ev.channel)\n  }\n  onDataChannelOpen = (ev: Event) => {\n    console.log(`${this.tag}onDataChannelOpen: ${ev.type}`)\n    this.connected = true\n    this.emit('connected')\n  }\n  onMessage = (ev: MessageEvent) => {\n    console.log(`${this.tag}${ev.type}: ${ev.data}`)\n  }\n  setChannel = (c: RTCDataChannel) => {\n    this.dataChannel = c\n    this.dataChannel.onopen = this.onDataChannelOpen\n    this.dataChannel.onmessage = this.onMessage\n  }\n  waitConnection = async (): Promise<void> => {\n    if (this.connected) return Promise.resolve()\n\n    return new Promise<void>((res, rej) => this.on('connected', () => res()))\n  }\n\n  createOffer = async (): Promise<RTCSessionDescriptionInit> => {\n    console.log(`${this.tag}createOffer`)\n    this.setChannel(this.rpc.createDataChannel('chat'))\n    this.offer = await this.rpc.createOffer()\n    await this.rpc.setLocalDescription(this.offer)\n    return this.offer\n  }\n\n  pushOffer = async (\n    offer: RTCSessionDescriptionInit\n  ): Promise<RTCSessionDescriptionInit> => {\n    console.log(`${this.tag}pushOffer: ${JSON.stringify(offer)}`)\n    if (this.offer) throw \"can't push offer to already inited rtc connection!\"\n\n    await this.rpc.setRemoteDescription(offer)\n    let answer = await this.rpc.createAnswer()\n    await this.rpc.setLocalDescription(answer)\n    return answer\n  }\n\n  pushAnswer = async (answer: RTCSessionDescriptionInit) => {\n    console.log(`${this.tag}pushAnswer: ${JSON.stringify(answer)}`)\n    await this.rpc.setRemoteDescription(answer)\n  }\n  pushIceCandidate = async (\n    candidate: RTCIceCandidateInit | RTCIceCandidate\n  ) => {\n    await this.rpc.addIceCandidate(candidate)\n  }\n}\n","import { parseHostMessage, isMethodCall, isError, IHostCommand } from \"./hostproto\"\n\nexport type Id = string | number | null\n\nexport function notify(\n  method: string,\n  params: {} | unknown[],\n  reduced: boolean = false\n) {\n  if (reduced) return `${method}||${JSON.stringify(params)}`\n\n  return jrpcs({\n    method,\n    params,\n  })\n}\nexport function error(id: Id | undefined, error: any) {\n  return jrpcs({\n    id,\n    error,\n  })\n}\nexport function result<T>(\n  id: Id | undefined,\n  result: T,\n  reduced: boolean = false\n) {\n  if (reduced) return `|${id}|${JSON.stringify(result)}`\n\n  return jrpcs({\n    id,\n    result,\n  })\n}\nexport function call(\n  method: string,\n  id: Id,\n  params: {} | unknown[],\n  reduced: boolean = false\n) {\n  if (reduced) return `${method}|${id}|${JSON.stringify(params)}`\n\n  return jrpcs({\n    method,\n    id,\n    params,\n  })\n}\nexport function jrpc<\n  T extends { id?: string | number | null; method?: string }\n>(obj: T): T & { jsonrpc: '2.0' } {\n  return Object.assign({}, obj, { jsonrpc: '2.0' } as { jsonrpc: '2.0' })\n}\nexport function jrpcs<\n  T extends { id?: string | number | null; method?: string }\n>(obj: T) {\n  return JSON.stringify(jrpc(obj))\n}\n\nexport type RequestHandler = (\n  json: { id: Id; method: string; params: any[] | any },\n  callback: (err: any, result: any) => void\n) => void\n\nexport type RequestHandlerTuple<TCmd extends IHostCommand<unknown[], unknown>, TRes> = [TCmd, (err: any, result: TRes) => void]\ntype RequestHandlerTupleU = RequestHandlerTuple<IHostCommand<unknown[], unknown>, unknown>\n\nexport class JsonRpc {\n  public send: (msg: string) => void\n  public onRequest: RequestHandler\n\n  lastOutgoingMsgId: number = 1\n\n  listeners: { [id: number]: (err: any, json: any) => void } = {}\n\n  constructor(send: (msg: string) => void, onRequest: RequestHandler) {\n    this.send = send\n    this.onRequest = onRequest\n  }\n\n  private _callbacksQueue = [] as RequestHandler[]\n  private _messageQueue = [] as RequestHandlerTupleU[]\n  public switchToQueueMode()\n  {\n    this.onRequest = (json, cb) =>\n    {\n      if (this._callbacksQueue.length)\n      {\n        let m = this._callbacksQueue.shift()!\n        m(json, cb)\n      }\n      else\n      {\n        this._messageQueue.push([json, cb])\n      }\n    }\n  }\n  public async nextMessage(): Promise<RequestHandlerTupleU>\n  {\n    if (this._messageQueue.length)\n      return Promise.resolve(this._messageQueue.shift()!)\n    else\n      return new Promise<RequestHandlerTupleU>((res, rej) => this._callbacksQueue.push((..._) => res(_)))\n  }\n  public onMessage = (data: string) =>\n  {\n      let json = parseHostMessage(data)\n      if (!json)\n        return console.error(`JsonRpc: error parsing data!\\n${data}`)\n      \n      let id = json.id as number\n      if (isMethodCall(json))\n      {\n        this.onRequest(json, (error, result) =>\n          this.send(\n            JSON.stringify({\n              id,\n              jsonrpc: '2.0',\n              ...(error ? { error } : { result }),\n            })\n          )\n        )\n      } else if (this.listeners[id]) {\n        let m = this.listeners[id]\n        delete this.listeners[id]\n        if (isError(json))\n          m(json.error, undefined)\n        else\n          m(undefined, json.result)\n      }\n  }\n  public async ping() {\n    let response = await this.call('ping')\n    if (response != 'pong') throw 'JSON-RPC: unknown ping error!'\n  }\n  public async callRaw(method: string, args: {}): Promise<any> {\n    console.log(`JSON.RAW: ${method}(${JSON.stringify(args)})`)\n    return new Promise((res, rej) => {\n      let id = this.getNextMsgId()\n      this.listeners[id] = (err, msg) => (err ? rej(err) : res(msg))\n      console.log(`outgoing: ${call(method, id, args)}`)\n      this.send(call(method, id, args))\n    })\n  }\n  public async call(method: string, ...args: any[]): Promise<any> {\n    return this.callRaw(method, args)\n  }\n  getNextMsgId() {\n    return this.lastOutgoingMsgId++\n  }\n}\n","import { Id } from './jsonrpc'\n\nexport interface IHostCommand<\n  TArr extends TObj[keyof TObj][] | unknown[],\n  TObj\n> {\n  method: string\n  id: Id\n  params: TArr | TObj\n}\nexport interface IHostError {\n  id?: Id\n  error: unknown\n}\nexport interface IHostResult<T> {\n  id: Id\n  result: T\n}\nexport type IJsonRpcMessage =\n  | IHostCommand<unknown[], unknown>\n  | IHostResult<unknown>\n  | IHostError\n\nexport type IHCSimple<\n  T1 = unknown,\n  T2 = unknown,\n  T3 = unknown,\n  T4 = unknown,\n  T5 = unknown,\n  T6 = unknown,\n  T7 = unknown\n> = IHostCommand<\n  [\n    T1[keyof T1],\n    T2[keyof T2],\n    T3[keyof T3],\n    T4[keyof T4],\n    T5[keyof T5],\n    T6[keyof T6],\n    T7[keyof T7]\n  ],\n  T1 & T2 & T3 & T4 & T5 & T6 & T7\n>\n\nexport function isMethodCall(json: IJsonRpcMessage): json is IHostCommand<unknown[], unknown>\n{\n  return \"method\" in json\n}\nexport function isResult(json: IJsonRpcMessage): json is IHostResult<unknown>\n{\n  return \"result\" in json\n}\nexport function isError(json: IJsonRpcMessage): json is IHostError\n{\n  return \"error\" in json\n}\n\nexport function parseHostMessage(msg: string): IJsonRpcMessage | undefined {\n  if (!msg) return undefined // empty message\n\n  if (msg.startsWith('{')) return JSON.parse(msg)\n\n  let regex = /^.*|.*|.*$/\n\n  if (!regex.test(msg)) return undefined // not enough data to parse\n\n  let [method, _id, data] = msg.split('|', 3).map(x => x || '')\n\n  let prefixLength = method.length + _id.length + data.length + 2\n  if (msg.length > prefixLength) data += msg.substr(prefixLength)\n\n  let id = _id.match(/^\\d+/) ? parseInt(_id) : _id\n\n  let params = JSON.parse(data || '[]')\n\n  if (!method)\n    return {\n      id,\n      result: params,\n    }\n\n  return {\n    method,\n    id,\n    params,\n  }\n}\nexport function arrayToObj<TArr extends any[], TObj>(\n  args: TArr,\n  mapping: (keyof TObj)[]\n): TObj {\n  return args.reduce((acc, cur, idx) => ((acc[mapping[idx]] = cur), acc), {})\n}\nexport function objToArray<TArr extends TObj[keyof TObj][], TObj extends {}>(\n  args: TObj,\n  mapping: (keyof TObj)[]\n): TArr {\n  return mapping.map(name => args[name]) as TArr\n}\nexport function allToObj<TObj>(\n  msg: IHostCommand<TObj[keyof TObj][], TObj>,\n  mapping: (keyof TObj)[]\n): TObj {\n  return Array.isArray(msg.params)\n    ? arrayToObj(msg.params, mapping)\n    : msg.params\n}\nexport function allToArray<TArr extends TObj[keyof TObj][], TObj>(\n  msg: IHostCommand<TArr, TObj>,\n  mapping: (keyof TObj)[]\n): TArr {\n  return Array.isArray(msg.params)\n    ? msg.params\n    : objToArray(msg.params, mapping)\n}\n","import { RTCHelper } from './webrtc'\nimport { JsonRpc } from './jsonrpc'\nimport { timedPromise } from './promise'\n\nfunction init() {\n  let rtc = new RTCHelper('webrtc')\n\n  let jrpc = new JsonRpc(\n    msg => rtc.dataChannel!.send(msg),\n    (json, cb) => {\n      console.log(`ignored remote signer request:`, json)\n      cb(undefined, null)\n    }\n  )\n\n  rtc.onMessage = ev => (console.log(ev), jrpc.onMessage(ev.data.toString()))\n  let connected = false\n\n  return {\n    rtc,\n    jrpc,\n    connected,\n  }\n}\nexport async function checkConnection(): Promise<boolean> {\n  if (!singleton.connected) return false\n\n  try {\n    await timedPromise(singleton.jrpc.ping(), 5000)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nexport let singleton = init()\n\nexport function reset() {\n  singleton = init()\n}\n","import { Reducer } from 'redux'\nimport { IWebrtcState, WebrtcActionTypes } from './types'\nimport { singleton } from '../../helpers/webrtc/webrtcsingleton'\n\nconst initialState: IWebrtcState = {\n  rtc: singleton.rtc,\n  connected: singleton.connected,\n  status: '',\n}\n\nconst reducer: Reducer<IWebrtcState> = (state = initialState, action) => {\n  switch (action.type) {\n    case WebrtcActionTypes.CONNECTION_OPEN: {\n      return { ...state, connected: true }\n    }\n    case WebrtcActionTypes.CONNECTION_CLOSE: {\n      return { ...state, connected: false }\n    }\n    case WebrtcActionTypes.SET_STATUS: {\n      return { ...state, status: action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as webrtcReducer }\n","import { combineReducers, Dispatch, Action, AnyAction } from 'redux'\nimport { all, fork } from 'redux-saga/effects'\nimport { connectRouter, RouterState } from 'connected-react-router'\n\nimport walletsSaga from './wallets/sagas'\nimport { walletsReducer } from './wallets/reducer'\nimport { IWalletsState } from './wallets/types'\n\nimport { authReducer } from './auth/reducer'\nimport { IAuthState } from './auth/types'\n\nimport transportSaga from './transport/sagas'\nimport { transportReducer } from './transport/reducer'\nimport { ITransportState } from './transport/types'\n\nimport webrtcSaga from './webrtc/sagas'\nimport { webrtcReducer } from './webrtc/reducer'\nimport { IWebrtcState } from './webrtc/types'\n\n// top-level state\nexport interface IApplicationState {\n  wallets: IWalletsState\n  auth: IAuthState\n  transport: ITransportState\n  webrtc: IWebrtcState\n  router: RouterState\n}\n\nexport interface IConnectedReduxProps<A extends Action = AnyAction> {\n  dispatch: Dispatch<A>\n}\n\nexport const rootReducer = (history: any) =>\n  combineReducers<IApplicationState>({\n    wallets: walletsReducer,\n    auth: authReducer,\n    transport: transportReducer,\n    webrtc: webrtcReducer,\n    router: connectRouter(history),\n  })\n\nexport function* rootSaga() {\n  yield all([fork(walletsSaga), fork(transportSaga), fork(webrtcSaga)])\n}\n","import { Store, createStore, applyMiddleware, AnyAction } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { routerMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { History } from 'history'\n\nimport { IApplicationState, rootReducer, rootSaga } from './store'\n\nexport default function configureStore(\n  history: History\n): Store<IApplicationState> {\n  const composeEnhancers = composeWithDevTools({})\n  const sagaMiddleware = createSagaMiddleware()\n  const initialState = JSON.parse(window.localStorage.getItem('state') as string) || {}\n\n  if (initialState.webrtc) {\n    delete initialState.webrtc;\n  }\n\n  const store = createStore(\n    rootReducer(history),\n    initialState,\n    composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware))\n  )\n\n  sagaMiddleware.run(rootSaga)\n  return store\n}\n\nexport const subscriber = (store: Store<IApplicationState, AnyAction>) => () => {\n  window.localStorage.setItem('state', JSON.stringify(store.getState()))\n};","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { createBrowserHistory } from 'history'\n\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore, { subscriber } from './configureStore'\n\nconst history = createBrowserHistory()\n\nconst store = configureStore(history)\nstore.subscribe(subscriber(store))\n\nReactDOM.render(\n  <App store={store} history={history} />,\n  document.getElementById('root')\n)\n\n// unregister() or register()\nserviceWorker.unregister()\n"],"sourceRoot":""}