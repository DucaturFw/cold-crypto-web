{"version":3,"sources":["components/atoms/Row.tsx","components/atoms/H1.tsx","components/atoms/H2.tsx","components/atoms/H3.tsx","components/atoms/Button.tsx","components/atoms/Column.tsx","components/atoms/A.tsx","components/atoms/ButtonClose.tsx","components/atoms/Centered.tsx","components/atoms/Hr.tsx","components/atoms/Link.tsx","components/atoms/ButtonBase.tsx","components/atoms/ButtonSecondary.tsx","components/atoms/TextInput.tsx","components/atoms/SelectOptions.tsx","components/atoms/Select.tsx","components/atoms/SelectFloat.tsx","components/atoms/Label.tsx","components/atoms/LabelAtop.tsx","components/atoms/TextArea.tsx","components/atoms/RangeInput.tsx","components/atoms/Wrap.tsx","components/moleculas/Logo.tsx","components/organisms/Header.tsx","components/organisms/Footer.tsx","components/layouts/DefaultLayout.tsx","components/organisms/Sidebar.tsx","components/layouts/MainLayout.tsx","components/layouts/ModalLayout.tsx","components/organisms/QrLogin.tsx","utils/callApi.ts","helpers/blockchains.ts","helpers/eos.ts","helpers/eth/eth-contracts.ts","helpers/eth/eth.ts","helpers/jsonrps.ts","store/transport/types.ts","store/transport/actions.ts","helpers/webrtc/jsonrpc.ts","helpers/webrtc/hostproto.ts","pages/Login.tsx","pages/Home.tsx","components/Spinner.tsx","store/wallets/types.ts","store/wallets/actions.ts","pages/TXList/common.tsx","pages/TXList/eth.tsx","pages/TXList/index.tsx","pages/TXList/eos.tsx","pages/Wallet.tsx","pages/CreateTx/eth.tsx","pages/CreateTx/eos.tsx","pages/CreateTx/index.tsx","pages/Sign.tsx","pages/Status.tsx","pages/TxView.tsx","pages/Contracts/eth.tsx","helpers/eos-types.ts","helpers/func.ts","pages/Contracts/eos.tsx","pages/Contracts/index.tsx","routes.tsx","styles/theme.ts","styles/normalize.ts","styles/globals.ts","styles/index.ts","App.tsx","serviceWorker.ts","helpers/common.ts","store/wallets/sagas.ts","store/auth/types.ts","store/wallets/reducer.ts","store/auth/reducer.ts","utils/parseMessage.ts","store/webrtc/types.ts","helpers/sendtx.ts","store/auth/actions.ts","store/webrtc/actions.ts","store/transport/sagas.ts","constants/index.ts","store/transport/reducer.ts","store/webrtc/connectSaga.ts","store/webrtc/sagas.ts","helpers/webrtc/webrtc.ts","helpers/webrtc/webrtcsingleton.ts","store/webrtc/reducer.ts","store/index.ts","configureStore.ts","index.tsx"],"names":["Row","styled","display","justifyContent","width","H1","color","fontSize","margin","textTransform","H2","fontWeight","H3","Button","border","borderRadius","cursor","outline","padding","lineHeight","Column","flexFlow","A","Root","Link","alignSelf","marginLeft","Img","height","ButtonClose","react_default","a","createElement","to","src","Centered","alignItems","textAlign","Hr","backgroundColor","StyledLink","textDecoration","ButtonBase","background","transition","ButtonSecondary","TextInput","::placeholder","boxSizing","Select","_ref","flipToRight",":after","borderWidth","content","position","appearance","Wrapper","right","top","SelectOptions","children","onChange","SelectOptions_Select","SelectFloat","Label","Container","LabelAtop","label","LabelAtop_Label","TextArea","RangeInput","Wrap","horizontal","vertical","concat","Logo","reverseColor","Sup","verticalAlign","moleculas_Logo","_ref2","gridArea","MainMenu","marginTop","marginRight","Header","logoColorReverse","Header_Root","Header_MainMenu","Footer","Footer_Root","style","paddingLeft","minHeight","Main","Modal","maxWidth","minWidth","DefaultLayout","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","props","Component","component","rest","objectWithoutProperties","Route","assign","render","matchProps","DefaultLayout_Root","Header_Header","Footer_Footer","React","boxShadow","items","id","title","MenuLink","selected","borderLeft","Sidebar_Container","map","Sidebar","Sidebar_Root","Sidebar_MainMenu","gridTemplateAreas","gridTemplateColumns","gridTemplateRows","MainLayout","MainLayout_Container","MainLayout_Main","Sidebar_Sidebar","left","maxHeight","ModalLayout","ModalLayout_Root","onClick","history","goBack","ModalLayout_Main","e","stopPropagation","ModalLayout_Container","QrLogin","onScan","onError","readonly","errorHandle","error","console","react","ButtonClose_ButtonClose","qrcode_react_lib_default","renderAs","size","react_qr_reader_lib_default","delay","_onScan","_x","toString","result","callApi","method","url","path","data","fetch","headers","Accept","Content-Type","mode","body","JSON","stringify","then","res","json","getBcNetByChainId","bc","chainId","networks","network","find","item","eth","name","sign","explorerUrl","apiExplorerUrl","eos","chain","getInfo","wallet","net","blockchain","address","getEos","Eos","httpEndpoint","sendTx","asyncToGenerator","regenerator_default","mark","_callee","signedTx","txHash","wrap","_context","prev","next","pushTransaction","sent","log","abrupt","transaction_id","stop","_x2","getTxHeaders","_x3","_getTxHeaders","_callee2","info","chainDate","expiration","block","transactionHeaders","_context2","Date","head_block_time","getTime","expireInSeconds","toISOString","split","getBlock","last_irreversible_block_num","ref_block_num","ref_block_prefix","isFunction","abiEntry","type","methodSignature","inputs","x","join","getArguments","abi","methodName","filter","require","web3","Web3","getWeb3","setProvider","providers","WebsocketProvider","getNonce","_getNonce","getTransactionCount","tx","sendSignedTransaction","transactionHash","getTx","_x5","_x6","_getTx","_callee3","_context3","_x7","_getInfo","_callee4","nonce","_context4","txs","getContractData","args","encodeFunctionCall","convertParamsToEth","types","params","i","encodeParameter","getWalletListCommand","blockchains","form","Promise","resolve","gasPrice","utils","toWei","amount","txHeaders","transaction","objectSpread","actions","account","authorization","actor","permission","from","quantity","toFixed","memo","formData","argsTypes","gasLimit","walletBase","entries","TransportActionTypes","remoteSignTransferTx","action","REMOTE_SIGN_TRANSFER","sendTransaction","SEND_TX","login","message","LOGIN","setRtcSid","sid","SET_RTC_SID","call","length","undefined","jrpcs","obj","jsonrpc","jrpc","JsonRpc","send","onRequest","_this","lastOutgoingMsgId","listeners","_callbacksQueue","_messageQueue","onMessage","msg","startsWith","parse","test","_msg$split$map","_msg$split$map2","slicedToArray","_id","prefixLength","substr","match","parseInt","parseHostMessage","isMethodCall","m","isError","_this2","cb","shift","push","_nextMessage","_this3","rej","_len","_","Array","_key","_ping","_callRaw","_this4","getNextMsgId","err","_call","_len2","_key2","_args4","callRaw","LoginPage","search","scanLoginData","qrcodeData","isRtc","URLSearchParams","get","cmd","prepareCall","QrLogin_QrLogin","Login","connect","router","transport","location","dispatch","Home","paddingRight","placeholder","WalletsActionTypes","Loader","LoadingOverlayInner","Spinner_LoadingSpinner","LoadingSpinner","Spinner","className","CubeMove","keyframes","_templateObject","_templateObject2","_templateObject3","fetchRequest","FETCH_REQUEST","fetchSuccess","FETCH_SUCCESS","fetchError","FETCH_ERROR","setSendingTxData","SET_SENDING_TX_DATA","OverflowTd","overflow","textOverflow","Table","borderCollapse","borderSpacing","td","th","tr","borderBottom","EthTx","index","timeStamp","toLocaleString","target","href","hash","TXList","createdAt","act","payer","stake_cpu_quantity","stake_net_quantity","bytes","TXListWrapper","Net","Wallet_templateObject","WalletPage","addWalletDispatch","addWallet","_this$props2","loading","flexBasis","Address","TXList_TXList","Spinner_Loader","Wallet","wallets","ADD_WALLET","CreateEthTx","_ref7","createTx","CREATE_ETH_TRANSFER","formik_esm","initialValues","onSubmit","values","formikBag","field","RowMargined","LabelAtop_LabelAtop","_ref3","min","step","_ref4","readOnly","_ref5","_ref6","max","CreateEosTx","CREATE_EOS_TRANSFER","eos_RowMargined","CreateTx","Sign","command","sendingTxData","scaned","Status","status","webrtc","LoadingText","Status_templateObject","TxView","sendingData","_ref$sendingData","getExplrUrl","CreateEthContractPage","handleOnChangeAbi","file","reader","publicMethodNames","files","FileReader","readAsText","onload","setFieldValue","setState","state","methodArgs","_this$state","onBlur","opacity","SelectOptions_SelectOptions","fill","arg","CallEthContract","CREATE_ETH_CONTRACT","normalizers","nothing","_nothing","toNumber","_toNumber","BN","_x4","validators","_nothing2","_x8","_x9","defaults","string","_string","_x10","_x11","knownTypes","uint64","config","validation","normalize","default","fixed_bytes20","fixed_bytes32","fixed_bytes64","fixed_bytes65","fixed_bytes33","fixed_string16","int64","time","uint32","timestamp","uint16","checksum_type","varuint32","uint8","lookUpBase","customs","r","array","endsWith","isArray","isBase","chainTypes","isChainType","lookUpTypeCollection","collection","base","toDictionary","keys","fields","k","checksum160","checksum256","checksum512","signature","public_key","message_type","symbol","symbol_code","field_name","account_name","permission_name","type_name","token_name","table_name","scope_name","action_name","time_point","time_point_sec","block_timestamp_type","block_id","checksum256_type","checksum512_type","checksum160_type","sha256","sha512","sha160","weight_type","block_num_type","share_type","digest_type","context_free_type","unsigned_int","bool","extensions_type","transaction_header","max_net_usage_words","max_cpu_usage_ms","delay_sec","context_free_actions","transaction_extensions","signed_transaction","signatures","context_free_data","field_def","asset","sym","producer_key","producer_name","block_signing_key","producer_schedule","version","producers","chain_config","target_block_size","max_block_size","target_block_acts_per_scope","max_block_acts_per_scope","target_block_acts","max_block_acts","real_threads","max_storage_size","max_transaction_lifetime","max_authority_depth","max_transaction_exec_time","max_inline_depth","max_inline_action_size","max_generated_transaction_size","type_def","new_type_name","struct_def","clause_pair","error_message","error_code","error_msg","abi_def","structs","tables","ricardian_clauses","error_messages","abi_extensions","table_def","index_type","key_names","key_types","permission_level","action_def","ricardian_contract","block_header","previous","transaction_mroot","action_mroot","block_mroot","producer","schedule_version","new_producers","packed_transaction","compression","packed_context_free_data","packed_trx","arr","val","reduce","acc","cur","formToJson","FormData","object","forEach","Error","eos_templateObject","styles","offtop","css","eos_templateObject2","select","eos_templateObject3","customTypes","dict","f","CreateEosContractPage","handleChangeAddress","handleSubmit","_abi","_customs","preventDefault","getAbi","t0","handleConfirm","handleMethodSelect","eos_Error","expand","CallEosContract","CREATE_EOS_CONTRACT","ContractPage","CallContract","Routes","Switch","DefaultLayout_DefaultLayout","exact","MainLayout_MainLayout","ModalLayout_ModalLayout","theme","colors","black","white","fontSizes","h1","h2","h3","h4","breakpoints","xs","sm","md","lg","xl","widths","normalize_templateObject","globals_templateObject","injectGlobal","styles_templateObject","globals","App","store","react_redux_es","lib","emotion_theming_browser_esm","routes_Routes","Boolean","window","hostname","getBcInfo","ethInfo","eosInfo","handleSetWallet","watchFetchRequest","walletsSaga","payload","put","stack","_marked","takeEvery","_marked2","all","fork","_marked3","AuthActionTypes","initialState","errors","reducer","isAuth","AUTH_SUCCESS","AUTH_ERROR","parseMessage","replace","parseJsonString","WebrtcActionTypes","str","_sendTx","sendEth","sendEos","authSuccess","connectionReady","CONNECTION_OPEN","connectionClosing","CONNECTION_CLOSE","setStatus","SET_STATUS","sendCommand","SEND_COMMAND","handleLogin","handleRemoteSignTransfer","handleRemoteSignContract","handleSendTx","watchSendTx","watchCreateTx","watchRemoteSignTransfer","watchLogin","transportSaga","_parseMessage","sagas_marked","createContractHandler","getContractParams","handleCreateTransfer","createTransferHandler","getTransferTx","handleCreateEthTransfer","_getEthTransferTx","handleCreateEosTransfer","_getEosTransferTx","handleCreateEthContract","_getEthContractParams","handleCreateEosContract","_getEosContractParams","sagas_marked2","_context5","sagas_marked3","_parseMessage2","_context6","_marked4","_context7","_marked5","_context8","_marked6","_context9","REMOTE_SIGN_CONTRACT","_marked7","_context10","_marked8","_context11","_marked9","RTCCommands","lastWebrtcMsg","handshakeServerUrl","answerSaga","connectSaga","makeOfferRequest","offer","makeIceRequest","ice","onOpenChannel","ws","eventChannel","emit","addEventListener","removeEventListener","onMessageChannel","rtc","answer","sendIce","candidates","on","pushAnswer","sdp","waitConnection","close","connectSaga_marked","offerPromise","openChan","messageChan","_JSON$parse","createOffer","WebSocket","take","webrtcLogin","pushIceCandidate","cancelled","finish","connectSaga_marked2","watchDataChannel","handleOpeningConnection","handleSendCommand","watchActions","watchConnection","webrtcSaga","createDataChannel","dataChannel","onmessage","channelMessage","getWalletList","signTransferTx","signContractCall","webrtc_sagas_marked","readyState","webrtc_sagas_marked2","_ref3$webrtc","connected","webrtc_sagas_marked3","sagas_marked4","bgConectionTask","connectTask","cancel","sagas_marked5","sagas_marked6","RTCHelper","_EventEmitter","rpc","RTCPeerConnection","tag","onIceCandidate","ev","candidate","onDataChannel","channel","setChannel","onDataChannelOpen","c","onopen","setLocalDescription","pushOffer","setRemoteDescription","createAnswer","_callee5","addIceCandidate","onicecandidate","ondatachannel","EventEmitter","init","ii","singleton","getSingleton","pushedMessages","toConsumableArray","rootSaga","rootReducer","combineReducers","walletsReducer","auth","authReducer","transportReducer","webrtcReducer","connectRouter","store_marked","basename","pathname","includes","createBrowserHistory","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","localStorage","getItem","createStore","applyMiddleware","routerMiddleware","run","configureStore","subscribe","setItem","getState","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa103804.chunk.js","sourcesContent":["import styled from 'react-emotion'\n\nexport const Row = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  width: '100%',\n})\n","import styled from 'react-emotion'\n\nexport const H1 = styled('h1')({\n  color: '#160A2E',\n  fontSize: '1.6rem',\n  margin: 0,\n  textTransform: 'uppercase',\n})\n","import styled from 'react-emotion'\n\nexport const H2 = styled('h2')({\n  color: '#160A2E',\n  fontSize: '1.4rem',\n  fontWeight: 'normal',\n  margin: '0 0 .25rem 0',\n})\n","import styled from 'react-emotion'\n\nexport const H3 = styled('h3')({\n  color: 'rgba(22, 10, 46, 0.5)',\n  fontSize: '1.05rem',\n  fontWeight: 'normal',\n  margin: 0,\n})\n","import styled from 'react-emotion'\n\nexport const Button = styled('button')({\n  border: 0,\n  borderRadius: '.2rem',\n  cursor: 'pointer',\n  fontSize: '.9rem',\n  margin: '.25rem 0',\n  outline: 0,\n  padding: '.5rem 2rem',\n  lineHeight: '1.45rem',\n  width: '100%',\n})\n","import styled from 'react-emotion'\n\nexport const Column = styled('div')({\n  display: 'flex',\n  flexFlow: 'column nowrap',\n  width: '100%',\n})\n","import styled from 'react-emotion'\n\nexport const A = styled('a')({\n  color: '#160A2E'\n})\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Link } from 'react-router-dom'\n\nconst Root = styled(Link)({\n  alignSelf: 'center',\n  marginLeft: '1rem',\n})\n\nconst Img = styled('img')({\n  height: '1.5rem',\n  width: '1.5rem',\n})\n\nexport const ButtonClose = () => (\n  <Root to=\"/\">\n    <Img src=\"/icon-close.svg\" />\n  </Root>\n)\n","import styled from 'react-emotion'\n\nexport const Centered = styled('div')({\n  alignItems: 'center',\n  justifyContent: 'center',\n  textAlign: 'center',\n})\n","import styled from 'react-emotion'\n\nexport const Hr = styled('div')({\n  backgroundColor: 'transparent',\n  height: '1px',\n  margin: '1rem 0',\n  width: '100%',\n})\n","import { Link } from 'react-router-dom'\nimport styled from 'react-emotion'\n\nexport const StyledLink = styled(Link)({\n  display: 'block',\n  textDecoration: 'none',\n})\n","import styled from 'react-emotion'\n\nimport { Button } from './Button'\n\nexport const ButtonBase = styled(Button)({\n  // ':hover': {\n  //   background: 'rgb(13, 137, 180)',\n  // },\n  borderRadius: '6rem',\n  background: '#00BCF9',\n  color: '#fff',\n  transition: '.2s ease-in-out all',\n  fontSize: '1.1rem',\n})\n","import styled from 'react-emotion'\n\nimport { Button } from './Button'\n\nexport const ButtonSecondary = styled(Button)({\n  // ':hover': {\n  //   background: 'rgb(230, 247, 253)',\n  // },\n  borderRadius: '6rem',\n  background: 'transparent',\n  border: '3px solid #00BCF9',\n  color: '#00BCF9',\n  transition: '.2s ease-in-out all',\n  fontSize: '1rem',\n})\n","import styled from 'react-emotion'\n\nexport const TextInput = styled('input')({\n  '::placeholder': {\n    color: 'rgba(22, 10, 46, 0.6)',\n  },\n  background: '#F3F2F4',\n  border: '2px solid #736C82',\n  borderRadius: '6rem',\n  boxSizing: 'border-box',\n  color: 'rgba(22, 10, 46, 0.6)',\n  fontSize: '.9rem',\n  margin: '.25rem 0',\n  outline: 'none',\n  padding: '.75rem 1rem',\n  width: '100%',\n})\n","import React from 'react'\nimport styled from 'react-emotion'\n\nexport const Select = styled('select')({\n  appearance: 'none',\n  background: '#F3F2F4',\n  border: 0,\n  borderRadius: '6rem',\n  color: 'rgba(22, 10, 46, 0.6)',\n  padding: '.8rem 1.2rem',\n  boxSizing: 'border-box',\n  margin: '.25rem 0',\n  outline: 'none',\n  position: 'relative',\n  width: '100%',\n})\n\nconst Wrapper = styled('div')({\n  ':after': {\n    content: '\"\"',\n    position: 'absolute',\n    background: 'url(\"/icon-select-down.svg\")',\n    width: '1.5rem',\n    height: '1.5rem',\n    right: '.85rem',\n    top: '.85rem',\n  },\n  width: '100%',\n  position: 'relative',\n})\n\nexport const SelectOptions = ({ children, onChange }: any) => (\n  <Wrapper>\n    <Select onChange={onChange}>{ children }</Select>\n  </Wrapper>\n)","import styled from 'react-emotion'\n\nexport const Select = styled('select')(\n  ({ flipToRight }: { flipToRight?: boolean }) => ({\n    ':after': {\n      border: 'solid white',\n      borderWidth: '0 3px 3px 0',\n      content: '\"\"',\n      position: 'absolute',\n    },\n    appearance: 'none',\n    background: '#00BCF9',\n    border: 0,\n    borderRadius: '6rem',\n    color: '#f1faee',\n    padding: '0 1rem',\n    boxSizing: 'border-box',\n    margin: '.25rem 0',\n  })\n)\n","import styled from 'react-emotion'\n\nexport const SelectFloat = styled('select')(\n  ({ flipToRight }: { flipToRight?: boolean }) => ({\n    ':after': {\n      border: 'solid white',\n      borderWidth: '0 3px 3px 0',\n      content: '\"\"',\n      position: 'absolute',\n    },\n    appearance: 'none',\n    background: '#00BCF9',\n    border: 0,\n    borderRadius: '6rem',\n    color: '#f1faee',\n    boxSizing: 'border-box',\n    margin: '.25rem 0',\n    position: 'absolute',\n    marginLeft: '15.25rem',\n    padding: '.82rem 1rem',\n  })\n)\n","import styled from 'react-emotion'\n\nexport const Label = styled('span')({\n  display: 'block',\n  width: '100%',\n  color: 'rgba(22, 10, 46, 0.6)',\n})\n","import React from 'react'\nimport styled from 'react-emotion'\n\nconst Container = styled('strong')({\n  position: 'relative',\n})\n\nconst Label = styled('span')({\n  color: 'rgb(117, 118, 121)',\n  padding: '1rem',\n  position: 'absolute',\n  right: 0,\n})\n\nexport const LabelAtop = ({\n  label,\n  children,\n}: {\n  label: string\n  children: JSX.Element\n}) => (\n  <Container>\n    {children}\n    <Label>{label}</Label>\n  </Container>\n)\n","import styled from 'react-emotion'\n\nexport const TextArea = styled('textarea')({\n  background: '#F3F2F4',\n  border: '2px solid #736C82',\n  borderRadius: '2rem',\n  boxSizing: 'border-box',\n  color: 'rgb(84, 84, 86)',\n  fontSize: '.9rem',\n  margin: '.25rem 0',\n  outline: 'none',\n  padding: '.75rem 1rem',\n  width: '100%',\n})\n","import styled from 'react-emotion'\n\nexport const RangeInput = styled('input')({\n  '::placeholder': {\n    color: 'rgba(22, 10, 46, 0.6)',\n  },\n  background: 'transparent',\n  borderRadius: '6rem',\n  boxSizing: 'border-box',\n  fontSize: '.9rem',\n  margin: '.25rem 0',\n  padding: '.75rem 1rem',\n  width: '100%',\n  appearance: 'none',\n  outline: 'none',\n  color: 'transparent',\n  border: 0,\n})\n","import styled from 'react-emotion'\n\nexport const Wrap = styled('div')(\n  ({ horizontal, vertical }: { horizontal?: number; vertical?: number }) => ({\n    margin: `${vertical || 0}rem ${horizontal || 0}rem`,\n  })\n)\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Link, H1 } from '../atoms'\n\nconst Logo = styled(H1)(({ reverseColor }: { reverseColor?: boolean }) => ({\n  color: reverseColor ? '#171933' : '#fff',\n  padding: '2rem 1.6rem',\n  fontSize: '1.3rem',\n  lineHeight: '1.3rem',\n  width: 'inherit',\n}))\n\nconst Sup = styled('sup')({\n  color: '#f2494d',\n  fontSize: '0.5rem',\n  textTransform: 'lowercase',\n  verticalAlign: 'super',\n})\n\nexport default ({ to, reverseColor }: { to?: string, reverseColor?: boolean }) =>\n  <Link to={to || '/'}>\n    <Logo reverseColor={reverseColor}>\n      Cold Crypto\n      <Sup>beta mode</Sup>\n    </Logo>\n  </Link>\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Link } from '../atoms'\nimport Logo from '../moleculas/Logo'\n\nconst Root = styled('header')({\n  gridArea: 'header',\n  height: '4rem',\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nconst MainMenu = styled('div')({\n  display: 'flex',\n  flexFlow: 'row nowrap',\n  alignItems: 'center',\n  fontSize: '.9rem',\n  marginTop: '1rem',\n  marginRight: '1rem',\n  a: {\n    color: '#fff',\n    padding: '2rem',\n  }\n})\n\nexport const Header = ({ to, logoColorReverse }: { to?: string, logoColorReverse?: boolean }) => (\n  <Root>\n    <Logo reverseColor={false} to={to} />\n    <MainMenu>\n      <Link to=\"#\">About</Link>\n      <Link to=\"#\">Blog</Link>\n      <Link to=\"#\">Support</Link>\n      <Link to=\"#\">Sign up</Link>\n    </MainMenu>\n  </Root>\n)\n","import React from 'react'\nimport styled from 'react-emotion'\n\nconst Root = styled('header')({\n  gridArea: 'footer',\n  height: '4rem',\n})\n\n\nexport const Footer = () => (\n  <Root>\n    <div style={{\n      color: 'rgba(255, 255, 255, 0.2)',\n      fontSize: '.85rem',\n      paddingLeft: '2rem'\n    }}>\n      &copy; Cold Crypto 2018. All rights reserved.\n    </div>\n  </Root>\n)\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Route } from 'react-router-dom'\n\nimport { Header } from '../organisms/Header'\nimport { Footer } from '../organisms/Footer'\n\nconst Root = styled('div')({\n  background: 'linear-gradient(57deg, #0D0D0D 0%, #160A2E 100%)',\n  minHeight: '100vh',\n})\n\nconst Main = styled('main')({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'center',\n  minHeight: 'calc(100vh - 4rem - 4rem)',\n})\n\nconst Modal = styled('div')({\n  background: '#fff',\n  borderRadius: '.8rem',\n  maxWidth: '50rem',\n  minWidth: '30rem',\n  padding: '2rem',\n})\n\ninterface IDefaultProps {\n  component: any\n  path?: string\n  exact?: boolean\n}\n\nexport class DefaultLayout extends React.Component<IDefaultProps, any> {\n  public render() {\n    const { component: Component, ...rest } = this.props\n    return (\n      <Route\n        {...rest}\n        render={matchProps => (\n          <Root>\n            <Header />\n            <Main>\n              <Modal>\n                <Component {...matchProps} />\n              </Modal>\n            </Main>\n            <Footer />\n          </Root>\n        )}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Link } from '../atoms'\nimport Logo from '../moleculas/Logo'\n\nconst Root = styled('aside')({\n  background: '#fff',\n  boxShadow: '0px 0px 25px rgba(0, 0, 0, 0.04)',\n  gridArea: 'sidebar',\n})\n\nconst items = [{ id: 'wallets', title: 'Wallets' }]\n\nconst MenuLink = styled(Link)(({ selected }: { selected: boolean }) => ({\n  color: selected ? '#00BCF9' : '#171933',\n  borderLeft: `3px solid ${selected ? '#00BCF9' : 'transparent'}`,\n  fontWeight: selected ? 'bold' : 'normal',\n  padding: '.75rem 1.5rem',\n  background: selected ? 'rgba(179, 236, 254, 0.6)' : 'transparent'\n}))\n\nconst Container = styled('menu')({\n  padding: 0,\n  margin: 0,\n})\n\nconst MainMenu = () => (\n  <Container>\n    {items.map(({ id, title }) => (\n      <MenuLink to={`/${id}`} key={id} selected={true}>\n        {title}\n      </MenuLink>\n    ))}\n  </Container>\n)\n\nexport const Sidebar = () => (\n  <Root>\n    <Logo to='/' reverseColor={true} />\n    <MainMenu />\n  </Root>\n)\n","import React from 'react'\nimport styled from 'react-emotion'\n\nimport { Sidebar } from '../organisms/Sidebar'\n\nconst Container = styled('div')({\n  background: '#fff',\n  display: 'grid',\n  gridTemplateAreas: `\n    \"sidebar main main main\"\n    \"sidebar footer footer footer\"\n  `,\n  gridTemplateColumns: '16rem auto auto auto',\n  gridTemplateRows: 'auto auto',\n  minHeight: '100vh',\n})\n\nconst Main = styled('main')({\n  display: 'flex',\n  gridArea: 'main',\n  justifyContent: 'center',\n  minHeight: 'calc(100vh - 4rem)',\n  padding: '2rem',\n  background: '#FAFAFB',\n})\n\nexport const MainLayout: React.SFC = props => {\n  const { children } = props\n  return (\n    <Container>\n      <Main>{children}</Main>\n      <Sidebar />\n    </Container>\n  )\n}\n","import React from 'react'\nimport styled from 'react-emotion'\nimport { Route } from 'react-router-dom'\n// import { History } from 'history'\n\nconst Root = styled('header')({\n  alignItems: 'center',\n  background: 'linear-gradient(57deg, #0D0D0D 0%, #160A2E 100%)',\n  display: 'flex',\n  height: '100vh',\n  justifyContent: 'center',\n  left: 0,\n  position: 'fixed',\n  top: 0,\n  width: '100vw',\n})\n\nconst Main = styled('main')({\n  background: '#fff',\n  borderRadius: '.25rem',\n  boxShadow: 'rgba(0, 0, 0, 0.5) 0px .25rem 1.5rem',\n  maxHeight: '95vh',\n  maxWidth: '95vw',\n  minHeight: '50vh',\n  minWidth: '60vw',\n})\n\nconst Container = styled('div')({\n  boxSizing: 'border-box',\n  padding: '2rem',\n})\n\ninterface IDefaultProps {\n  component: any\n  path?: string\n  exact?: boolean\n}\n\nexport const ModalLayout: React.SFC<IDefaultProps> = props => {\n  const { component: Component, ...rest } = props\n  return (\n    <Route\n      {...rest}\n      render={matchProps => {\n        return (\n          <Root onClick={matchProps.history.goBack}>\n            <Main onClick={e => e.stopPropagation()}>\n              <Container>\n                <Component {...matchProps} />\n              </Container>\n            </Main>\n          </Root>\n        )\n      }}\n    />\n  )\n}\n","import * as React from 'react'\nimport { Row, Hr, ButtonClose, Column, H2, H3, Centered } from '../atoms'\nimport QrReader from 'react-qr-reader'\nimport QRCode from 'qrcode.react'\n\ninterface IPropsFromDispatch {\n  title: string\n  value: string\n  onScan: (data: string) => void\n  onError?: (e: Error) => void\n  readonly?: boolean\n}\n\ntype AllProps = IPropsFromDispatch\n\nexport const QrLogin: React.SFC<AllProps> = ({\n  title,\n  value,\n  onScan,\n  onError,\n  readonly,\n}) => {\n  const errorHandle = onError || ((error: Error) => console.error(error))\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Column>\n          <H2>{title}</H2>\n          <H3>\n            Follow these steps to sign your transaction using your mobile device\n          </H3>\n        </Column>\n        <ButtonClose />\n      </Row>\n      <Hr />\n      <Row style={{ justifyContent: 'space-around' }}>\n        <Column style={{ width: '50%' }}>\n          <Centered>\n            <H2>Scan QR Code</H2>\n          </Centered>\n          <Centered style={{ display: 'flex' }}>\n            {value && <QRCode value={value} renderAs=\"svg\" size={200} />}\n          </Centered>\n        </Column>\n        {!readonly && (\n          <Column style={{ width: '50%' }}>\n            <Centered>\n              <H2>Show QR Code</H2>\n            </Centered>\n            <Centered style={{ display: 'flex' }}>\n              <QrReader\n                delay={300}\n                onScan={result => result && onScan(result)}\n                onError={error => errorHandle(error)}\n                style={{ width: 200 }}\n              />\n            </Centered>\n          </Column>\n        )}\n      </Row>\n    </React.Fragment>\n  )\n}\n","export default function callApi(\n  method: string,\n  url: string,\n  path: string,\n  data?: any\n) {\n  return fetch(url + path, {\n    method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    mode: 'cors',\n    body: JSON.stringify(data),\n  }).then(res => res.json())\n}\n","export interface INetwork {\n  name: string\n  sign: string\n  url: string\n  btc?: any\n  explorerUrl: string\n  apiExplorerUrl: string\n  chainId?: string | number\n}\n\nexport const getBcNetBySign = (bc: string, net: string): INetwork => networks[bc].network.find((item: INetwork) => item.sign === net);\nexport const getBcNetByChainId = (bc: string, chainId: string): INetwork => networks[bc].network.find((item: INetwork) => item.chainId === chainId);\n\nconst networks = {\n  eth: {\n    name: 'Ethereum',\n    network: [\n      {\n        name: 'Mainnet',\n        sign: 'mainnet',\n        url: 'wss://mainnet.infura.io/ws',\n        explorerUrl: 'https://etherscan.io',\n        apiExplorerUrl: 'https://api.etherscan.io',\n        chainId: '1'\n      },\n      {\n        name: 'Ropsten',\n        sign: 'ropsten',\n        url: 'wss://ropsten.infura.io/ws',\n        explorerUrl: 'https://ropsten.etherscan.io',\n        apiExplorerUrl: 'https://api-ropsten.etherscan.io',\n        chainId: '3'\n      },\n      {\n        name: 'Rinkeby',\n        sign: 'rinkeby',\n        url: 'wss://rinkeby.infura.io/ws',\n        explorerUrl: 'https://rinkeby.etherscan.io',\n        apiExplorerUrl: 'https://api-rinkeby.etherscan.io',\n        chainId: '4'\n      }\n    ]\n  },\n  eos: {\n    name: 'EOS',\n    network: [\n      {\n        name: 'Mainnet',\n        sign: 'mainnet',\n        chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906',\n        url: 'http://mainnet.eoscalgary.io:80',\n        explorerUrl: 'https://eospark.com/MainNet',\n        apiExplorerUrl: 'https://junglehistory.cryptolions.io:4433'\n      },\n      {\n        name: 'Jungle Testnet',\n        sign: 'testnet',\n        chainId: 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473',\n        url: 'https://jungle2.cryptolions.io',\n        explorerUrl: 'https://jungle.eospark.com',\n        apiExplorerUrl: 'https://junglehistory.cryptolions.io:4433'\n      }\n    ]\n  },\n}\n\nexport default networks;","import callApi from './../utils/callApi';\nimport Eos from \"eosjs\"\nimport { getBcNetByChainId } from '../helpers/blockchains'\nimport { IWalletEos } from '../store/wallets/types';\n\nconst chain = {\n  main: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906', // main network\n  jungle: 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473', // jungle testnet\n  sys: 'cf057bbfb72640471fd910bcb67639c22df9f92470936cddc1ade0e2f2e7dc4f' // local developer\n};\n\nexport const getInfo = (wallet: IWalletEos) => {\n    const net = getBcNetByChainId(wallet.blockchain, wallet.chainId as string)\n\n    return callApi(\n      'GET',\n      `${net.apiExplorerUrl}/v1`,\n      `/history/get_actions/${wallet.address}?limit=100&skip=0`\n    )\n  }\n;\n\nexport const getEos = (wallet: IWalletEos) => {\n  const net = getBcNetByChainId(wallet.blockchain, wallet.chainId as string)\n\n  return Eos({\n    httpEndpoint: net.url,\n    chainId: chain.jungle,\n  })\n}\n\nexport const sendTx = async (wallet: IWalletEos, signedTx: string) => {\n  const eos = getEos(wallet);\n  const txHash = await eos.pushTransaction(signedTx);\n  console.log('txHash:', txHash)\n\n  return txHash.transaction_id\n}\n\nexport async function getTxHeaders(wallet: IWalletEos)\n{\n  const eos = getEos(wallet);\n\n  const info = await eos.getInfo({})\n\n  const expireInSeconds = 60 * 60 // 1 hour\n\n  const chainDate = new Date(info.head_block_time + 'Z')\n  const expiration = new Date(chainDate.getTime() + expireInSeconds * 1000).toISOString().split('.')[0]\n\n  const block = await eos.getBlock(info.last_irreversible_block_num)\n\n  const transactionHeaders = {\n    expiration,\n    ref_block_num: info.last_irreversible_block_num & 0xFFFF,\n    ref_block_prefix: block.ref_block_prefix\n  }\n\n  return transactionHeaders\n}","import { IUints, IInts, IBytes, IFixed, IUfixed } from './eth-abi-types'\n\nexport type IAbiArgumentType =\n  | 'string'\n  | 'address'\n  | 'bool'\n  | 'function'\n  | IUints\n  | IInts\n  | IFixed\n  | IBytes\n  | IUfixed\nexport interface IAbiArgument {\n  name: string\n  type: IAbiArgumentType\n  components?: IAbiArgument[]\n}\nexport interface IAbiEventInput extends IAbiArgument {\n  indexed: boolean\n}\nexport type IStateMutability = 'pure' | 'view' | 'nonpayable' | 'payable'\nexport interface IAbiFunctionEntry {\n  type?: 'function'\n  name: string\n  inputs: IAbiArgument[]\n  outputs?: IAbiArgument[]\n  stateMutability: IStateMutability\n  // payable?: boolean // deprecated\n  // constant?: boolean // deprecated\n}\nexport interface IAbiEventEntry {\n  type: 'event'\n  name: string\n  inputs: IAbiEventInput[]\n  anonymous: boolean\n}\nexport interface IAbiConstructorEntry {\n  type: 'constructor'\n  inputs: IAbiArgument[]\n  stateMutability: IStateMutability\n}\nexport interface IAbiFallbackEntry {\n  type: 'fallback'\n  stateMutability: IStateMutability\n}\nexport type IAbiEntry =\n  | IAbiFallbackEntry\n  | IAbiFunctionEntry\n  | IAbiEventEntry\n  | IAbiConstructorEntry\nexport type ABI = IAbiEntry[]\n\nfunction isFunction(abiEntry: IAbiEntry): abiEntry is IAbiFunctionEntry {\n  return abiEntry.type === 'function'\n}\nexport function isEvent(abiEntry: IAbiEntry): abiEntry is IAbiEventEntry {\n  return abiEntry.type === 'event'\n}\n\nexport function methodSignature(abiEntry: IAbiFunctionEntry): string {\n  return `${abiEntry.name}(${abiEntry.inputs.map(x => x.type).join(',')})`\n}\n\nexport function getPublicMethodNames(abi: ABI): string[] {\n  // console.log(abi.filter(isFunction))\n  return abi.filter(isFunction).map(methodSignature)\n}\nexport function isPayable(abi: ABI, methodName: string): boolean {\n  let f = abi.filter(isFunction).find(x => methodSignature(x) === methodName)\n  if (!f) throw new Error('function not found')\n\n  return f.stateMutability === 'payable'\n}\nexport function getArguments(abi: ABI, methodName: string): IAbiArgument[] {\n  return abi.filter(isFunction).find(x => methodSignature(x) === methodName)!\n    .inputs\n}\n\nconst erc20: ABI = require('./erc20abi.json')\n\nexport function isErc20(abi: ABI): boolean {\n  return implementsInterface(abi, erc20)\n}\nexport function implementsInterface(abi: ABI, intrfc: ABI): boolean {\n  for (let i = 0; i < intrfc.length; i++) {\n    let entry = intrfc[i]\n    let exists = abi.some(x => entryEquals(entry, x))\n    // console.log(`[${entry.type}]${(entry as any).name || ''}: ${exists}`)\n    if (!exists) return false\n  }\n  return true\n}\nexport function entryEquals(e1: IAbiEntry, e2: IAbiEntry): boolean {\n  if (e1.type !== e2.type) return false\n  switch (e1.type) {\n    case 'event':\n      return eventEquals(e1, e2 as IAbiEventEntry)\n    case 'function':\n      return functionEquals(e1, e2 as IAbiFunctionEntry)\n    default:\n      throw new Error('Type not exist')\n  }\n}\nexport function functionEquals(\n  f1: IAbiFunctionEntry,\n  f2: IAbiFunctionEntry\n): boolean {\n  // let str = (f: IAbiFunctionEntry) =>\n  //   `${f.name}(${f.inputs.map(x => x.type)}):${f.outputs!.map(x => x.type)}${\n  //     f.stateMutability\n  //   }`\n  // console.log(`comparing ${str(f1)} with ${str(f2)}`)\n  if (f1.name !== f2.name) return false\n\n  // TODO: temporary disabled (more research needed)\n  // if (f1.payable && !f2.payable) // if reference function is payable, second should also\n  // \treturn false               // be payable. doesn't matter otherwise.\n\n  if (!tupleEquivalent(f1.inputs, f2.inputs)) return false\n  if (!tupleEquivalent(f1.outputs!, f2.outputs!)) return false\n\n  return true\n}\nexport function eventEquals(e1: IAbiEventEntry, e2: IAbiEventEntry): boolean {\n  if (e1.name !== e2.name) return false\n  if (!tupleEquivalent(e1.inputs, e2.inputs)) return false\n\n  return true\n}\nexport function tupleEquivalent(\n  inputs1: { type: string }[],\n  inputs2: { type: string }[]\n): boolean {\n  if (inputs1.length !== inputs2.length) return false\n\n  for (let i = 0; i < inputs1.length; i++) {\n    if (inputs1[i].type !== inputs2[i].type) return false\n  }\n  return true\n}\n","import callApi from '../../utils/callApi'\nimport Web3 from 'web3'\n\nimport { getBcNetByChainId } from '../../helpers/blockchains'\nimport { IAbiArgumentType, getArguments, ABI } from './eth-contracts'\nimport { IWallet, IWalletEth } from '../../store/wallets/types'\n\nconst web3 = new Web3()\n\n\nexport function getEtherscanExploreUrl(chainId: string) {\n  return getBcNetByChainId('eth', chainId).explorerUrl\n}\n\nexport function getWeb3(chainId: string) {\n  web3.setProvider(\n    new Web3.providers.WebsocketProvider(getBcNetByChainId('eth', chainId).url)\n  )\n\n  return web3\n}\n\nexport async function getNonce(address: string, chainId: string): Promise<number> {\n  return getWeb3(chainId).eth.getTransactionCount(address)\n}\n\nexport async function sendTx(wallet: IWallet, tx: string): Promise<string> {\n  const result = await getWeb3(wallet.chainId as string).eth.sendSignedTransaction(tx)\n\n  return result.transactionHash\n}\n\nexport async function getTx(address: string, chainId: string) {\n  return callApi(\n    'get',\n    getBcNetByChainId('eth', chainId).apiExplorerUrl,\n    `/api?module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&page=1&offset=10&sort=asc&apikey=YourApiKeyToken`\n  )\n}\n\nexport async function getInfo(wallet: IWallet) {\n  const res = await getTx(wallet.address, wallet.chainId as string)\n  const nonce = await getNonce(wallet.address, wallet.chainId as string)\n\n  return {\n    txs: res.result,\n    nonce,\n  }\n}\n\nexport const getContractData = (wallet: IWalletEth, abi: ABI, method: string, args: string[]): string => {\n  const inputs = getArguments(abi, method)\n\n  return getWeb3(wallet.chainId as string).eth.abi.encodeFunctionCall({\n    name: method,\n    type: 'function',\n    inputs,\n  }, args);\n}\n\nexport const convertParamsToEth = (types: IAbiArgumentType[], params: any[]): string[] => types\n  .map((x,i) => [x, params[i]] as [string, any])\n  .map(x => web3.eth.abi.encodeParameter(x[0], x[1]))","import Web3 from 'web3'\nimport { getTxHeaders } from './eos'\nimport {\n  IEthTxFormValues,\n  IWalletEth,\n  IEosTxFormValues,\n  IEthContractFormValues,\n  IWalletEos,\n  IEosContractFormValues,\n  IWalletBase\n} from '../store/wallets/types'\nimport { getContractData, convertParamsToEth } from './eth/eth'\nimport { getArguments } from './eth/eth-contracts';\n\n// TODO: mobile app ignore blockchain array\nexport const getWalletListCommand = () => {\n  const params = { blockchains: ['eth', 'eos'] }\n  return {\n    id: 2,\n    method: 'getWalletList',\n    params,\n  }\n}\n\n\nexport async function getEthTransferTx(form: IEthTxFormValues, wallet: IWalletEth)\n{\n  return Promise.resolve({\n    gasPrice: Web3.utils.toWei(form.gasPrice.toString(), 'gwei'),\n    nonce: wallet.nonce,\n    to: form.to,\n    value: Web3.utils.toWei(form.amount.toString()),\n  })\n}\n\nexport async function getEosTransferTx(data: IEosTxFormValues, wallet: IWalletEos)\n{\n  const txHeaders = await getTxHeaders(wallet)\n  return {\n      method: 'transfer(from:name,to:name,quantity:asset,memo:string)',\n      transaction: {\n        ...txHeaders,\n        actions: [\n          {\n            name: 'transfer',\n            account: 'eosio.token',\n            authorization: [\n              {\n                actor: wallet.address,\n                permission: 'active',\n              },\n            ],\n            data: {\n              to: data.to,\n              from: wallet.address,\n              quantity: `${(+data.amount).toFixed(4) as string} EOS`,\n              memo: '',\n            },\n          },\n        ],\n      },\n    }\n}\n\nexport async function getEthContractParams (formData: IEthContractFormValues, wallet: IWalletEth) {\n  const tx  = {\n    gasPrice: Web3.utils.toWei(formData.gasPrice.toString(), \"gwei\"),\n    gasLimit: formData.gasLimit,\n    nonce: wallet.nonce,\n    to: formData.to,\n    data: getContractData(wallet, formData.abi, formData.method, formData.args)\n  };\n\n  const argsTypes = getArguments(formData.abi, formData.method).map(\n    item => item.type\n  );\n  const args = convertParamsToEth(argsTypes, formData.args);\n\n  const abi = { method: formData.method, args };\n\n  return Promise.resolve({ abi, wallet, tx })\n};\n\nexport async function getEosContractParams (formData: IEosContractFormValues, wallet: IWalletEos) {\n  const abi = Object.entries(formData.abi)\n      .map((params: string[]) => params.join(':'))\n      .join(',');\n\n    const walletBase: IWalletBase = {\n      address: wallet.address,\n      blockchain: wallet.blockchain,\n      chainId: wallet.chainId\n    }\n\n    const txHeaders = await getTxHeaders(wallet)\n    const tx = {\n      method: `${formData.method}(${abi})`,\n      transaction: {\n        ...txHeaders,\n        actions: [\n          {\n            name: formData.method,\n            account: formData.to,\n            authorization: [\n              {\n                actor: wallet.address,\n                permission: 'active',\n              },\n            ],\n            data: (formData as IEosContractFormValues).data\n          },\n        ],\n      },\n    }\n\n    return Promise.resolve({ abi, wallet: walletBase, tx })\n};","import { IHostCommand } from \"../../helpers/webrtc/hostproto\"\n\nexport enum TransportActionTypes {\n  SEND_TX = '@@transport/SEND_TX',\n  LOGIN = '@@transport/LOGIN',\n  SIGN_TX = '@@transport/SIGNTX',\n  CREATE_TX = '@@transport/CREATETX',\n\n  CREATE_ETH_TRANSFER = '@@transport/CREATE_ETH_TRANSFER',\n  CREATE_EOS_TRANSFER = '@@transport/CREATE_EOS_TRANSFER',\n  CREATE_ETH_CONTRACT = '@@transport/CREATE_ETH_CONTRACT',\n  CREATE_EOS_CONTRACT = '@@transport/CREATE_EOS_CONTRACT',\n\n  REMOTE_SIGN_TRANSFER = '@@transport/REMOTE_SIGN_TX',\n  REMOTE_SIGN_CONTRACT = '@@transport/REMOTE_SIGN_CONTRACT',\n\n\n  SET_RTC_SID = '@@transport/SET_RTC_SID',\n}\n\nexport interface ITransportState {\n  qrcodeData: string\n  lastWebrtcMsg: IHostCommand<unknown[], unknown> | null\n}\n","import { action } from 'typesafe-actions'\nimport { TransportActionTypes } from './types'\nimport { IEthTxFormValues, IEthContractFormValues, IEosTxFormValues, IEosContractFormValues } from '../wallets/types'\n\nexport const createEthTransfer = (formData: IEthTxFormValues) =>\n  action(TransportActionTypes.CREATE_ETH_TRANSFER, formData)\n\nexport const createEosTransfer = (formData: IEosTxFormValues) =>\n  action(TransportActionTypes.CREATE_EOS_TRANSFER, formData)\n\nexport const createEthContract = (formData: IEthContractFormValues) =>\n  action(TransportActionTypes.CREATE_ETH_CONTRACT, formData)\n\nexport const createEosContract = (formData: IEosContractFormValues) =>\n  action(TransportActionTypes.CREATE_EOS_CONTRACT, formData)\n\nexport const remoteSignTransferTx = (tx: unknown) =>\n  action(TransportActionTypes.REMOTE_SIGN_TRANSFER, tx)\n\nexport const remoteSignContractTx = (params: unknown) =>\n  action(TransportActionTypes.REMOTE_SIGN_CONTRACT, params)\n\nexport const signTransaction = (tx: string) =>\n  action(TransportActionTypes.SIGN_TX, tx)\n\nexport const sendTransaction = (tx: string) =>\n  action(TransportActionTypes.SEND_TX, tx)\n\nexport const login = (message: string) =>\n  action(TransportActionTypes.LOGIN, message)\n\nexport const setRtcSid = (sid: string) =>\n  action(TransportActionTypes.SET_RTC_SID, sid)\n","import {\n  parseHostMessage,\n  isMethodCall,\n  isError,\n  IHostCommandU,\n} from './hostproto'\n\nexport type Id = string | number | null\n\nexport function notify(\n  method: string,\n  params: {} | unknown[],\n  reduced: boolean = false\n) {\n  if (reduced) return `${method}||${JSON.stringify(params)}`\n\n  return jrpcs({\n    method,\n    params,\n  })\n}\nexport function error(id: Id | undefined, error: any) {\n  return jrpcs({\n    id,\n    error,\n  })\n}\nexport function result<T>(\n  id: Id | undefined,\n  result: T,\n  reduced: boolean = false\n) {\n  if (reduced) return `|${id}|${JSON.stringify(result)}`\n\n  return jrpcs({\n    id,\n    result,\n  })\n}\nexport function call(\n  method: string,\n  id: Id,\n  params: unknown | unknown[],\n  reduced: boolean = false\n) {\n  if (reduced) return `${method}|${id}|${JSON.stringify(params)}`\n\n  return jrpcs({\n    method,\n    id,\n    params,\n  })\n}\nexport function jrpc<\n  T extends { id?: string | number | null; method?: string }\n>(obj: T): T & { jsonrpc: '2.0' } {\n  return Object.assign({}, obj, { jsonrpc: '2.0' } as { jsonrpc: '2.0' })\n}\nexport function jrpcs<\n  T extends { id?: string | number | null; method?: string }\n>(obj: T) {\n  return JSON.stringify(jrpc(obj))\n}\n\nexport type RequestHandler = (\n  json: { id: Id; method: string; params: any[] | any },\n  callback: (err: any, result: any) => void\n) => void\n\nexport type RequestHandlerTuple<\n  TCmd extends IHostCommandU,\n  TRes\n> = [TCmd, (err: any, result: TRes) => void]\ntype RequestHandlerTupleU = RequestHandlerTuple<\n  IHostCommandU,\n  unknown\n>\n\nexport class JsonRpc {\n  public send: (msg: string) => void\n  public onRequest: RequestHandler\n\n  lastOutgoingMsgId: number = 1\n\n  listeners: { [id: number]: (err: any, json: any) => void } = {}\n\n  constructor(send: (msg: string) => void, onRequest: RequestHandler) {\n    this.send = send\n    this.onRequest = onRequest\n  }\n\n  private _callbacksQueue = [] as RequestHandler[]\n  private _messageQueue = [] as RequestHandlerTupleU[]\n  public switchToQueueMode() {\n    this.onRequest = (json, cb) => {\n      // console.log('*** 1')\n      if (this._callbacksQueue.length) {\n        // console.log('*** 2')\n        let m = this._callbacksQueue.shift()!\n        // console.log('*** 3')\n        m(json, cb)\n        // console.log('*** 4')\n      } else {\n        // console.log('*** 5')\n        this._messageQueue.push([json, cb])\n        // console.log('*** 6')\n      }\n    }\n  }\n  public async nextMessage(): Promise<RequestHandlerTupleU> {\n    if (this._messageQueue.length)\n      return Promise.resolve(this._messageQueue.shift()!)\n    else\n      return new Promise<RequestHandlerTupleU>((res, rej) =>\n        this._callbacksQueue.push((..._) => res(_))\n      )\n  }\n  public onMessage = (data: string) => {\n    // console.log('%%%! 1')\n    let json = parseHostMessage(data)\n    // console.log('%%%! 2')\n    if (!json)\n      return console.error(`JsonRpc: error parsing data!\\n${data}`)\n    \n    // console.log('%%%! 3')\n    let id = json.id as number\n    // console.log('%%%! 4')\n    if (isMethodCall(json)) {\n      // console.log('%%%! 5')\n      this.onRequest(json, (error, result) =>\n        (/* console.log('%%%! 6'),\n        console.log(this.send.toString()), */\n        this.send(\n          JSON.stringify({\n            id,\n            jsonrpc: '2.0',\n            ...(error ? { error } : { result }),\n          })\n        ))\n      )\n    } else if (this.listeners[id]) {\n      let m = this.listeners[id]\n      delete this.listeners[id]\n      if (isError(json))\n        m(json.error, undefined)\n      else\n        m(undefined, json.result)\n    }\n  }\n  public async ping() {\n    let response = await this.call('ping')\n    if (response != 'pong') throw 'JSON-RPC: unknown ping error!'\n  }\n  public async callRaw(method: string, args: {}): Promise<any> {\n    console.log(`JSON.RAW: ${method}(${JSON.stringify(args)})`)\n    return new Promise((res, rej) => {\n      let id = this.getNextMsgId()\n      this.listeners[id] = (err, msg) => (err ? rej(err) : res(msg))\n      console.log(`outgoing: ${call(method, id, args)}`)\n      this.send(call(method, id, args))\n    })\n  }\n  public async call(method: string, ...args: any[]): Promise<any> {\n    return this.callRaw(method, args)\n  }\n  getNextMsgId() {\n    return this.lastOutgoingMsgId++\n  }\n}\n","import { Id } from './jsonrpc'\n\nexport interface IHostCommand<\n  TArr extends TObj[keyof TObj][] | unknown[],\n  TObj\n> {\n  method: string\n  id: Id\n  params: TArr | TObj\n}\nexport type IHostCommandU = IHostCommand<unknown[], unknown>\nexport interface IHostError {\n  id?: Id\n  error: unknown\n}\nexport interface IHostResult<T> {\n  id: Id\n  result: T\n}\nexport type IJsonRpcMessage =\n  | IHostCommandU\n  | IHostResult<unknown>\n  | IHostError\n\nexport type IHCSimple<\n  T1 = unknown,\n  T2 = unknown,\n  T3 = unknown,\n  T4 = unknown,\n  T5 = unknown,\n  T6 = unknown,\n  T7 = unknown\n> = IHostCommand<\n  [\n    T1[keyof T1],\n    T2[keyof T2],\n    T3[keyof T3],\n    T4[keyof T4],\n    T5[keyof T5],\n    T6[keyof T6],\n    T7[keyof T7]\n  ],\n  T1 & T2 & T3 & T4 & T5 & T6 & T7\n>\n\nexport function isMethodCall(json: IJsonRpcMessage): json is IHostCommandU\n{\n  return \"method\" in json\n}\nexport function isResult(json: IJsonRpcMessage): json is IHostResult<unknown>\n{\n  return \"result\" in json\n}\nexport function isError(json: IJsonRpcMessage): json is IHostError\n{\n  return \"error\" in json\n}\n\nexport function parseHostMessage(msg: string): IJsonRpcMessage | undefined {\n  if (!msg) return undefined // empty message\n\n  if (msg.startsWith('{')) return JSON.parse(msg)\n\n  let regex = /^.*|.*|.*$/\n\n  if (!regex.test(msg)) return undefined // not enough data to parse\n\n  let [method, _id, data] = msg.split('|', 3).map(x => x || '')\n\n  let prefixLength = method.length + _id.length + data.length + 2\n  if (msg.length > prefixLength) data += msg.substr(prefixLength)\n\n  let id = _id.match(/^\\d+/) ? parseInt(_id) : _id\n\n  let params = JSON.parse(data || '[]')\n\n  if (!method)\n    return {\n      id,\n      result: params,\n    }\n\n  return {\n    method,\n    id,\n    params,\n  }\n}\nexport function arrayToObj<TArr extends any[], TObj>(\n  args: TArr,\n  mapping: (keyof TObj)[]\n): TObj {\n  return args.reduce((acc, cur, idx) => ((acc[mapping[idx]] = cur), acc), {})\n}\nexport function objToArray<TArr extends TObj[keyof TObj][], TObj extends {}>(\n  args: TObj,\n  mapping: (keyof TObj)[]\n): TArr {\n  return mapping.map(name => args[name]) as TArr\n}\nexport function allToObj<TObj>(\n  msg: IHostCommand<TObj[keyof TObj][], TObj>,\n  mapping: (keyof TObj)[]\n): TObj {\n  return Array.isArray(msg.params)\n    ? arrayToObj(msg.params, mapping)\n    : msg.params\n}\nexport function allToArray<TArr extends TObj[keyof TObj][], TObj>(\n  msg: IHostCommand<TArr, TObj>,\n  mapping: (keyof TObj)[]\n): TArr {\n  return Array.isArray(msg.params)\n    ? msg.params\n    : objToArray(msg.params, mapping)\n}\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport { QrLogin } from '../components/organisms/QrLogin'\n\nimport { getWalletListCommand } from '../helpers/jsonrps'\nimport { login } from '../store/transport/actions'\nimport { IConnectedReduxProps, IApplicationState } from '../store'\nimport { call as prepareCall } from '../helpers/webrtc/jsonrpc'\n\n// TODO: map errorfrom qrcode state and show if we will have it\ninterface IPropsFromState {\n  search: string\n  qrcodeData: string\n}\n\ninterface IPropsFromDispatch {\n  scanLoginData: typeof login\n}\n\ntype AllProps = IPropsFromState &\n  IPropsFromDispatch &\n  IConnectedReduxProps &\n  RouteComponentProps\n\nclass LoginPage extends React.Component<AllProps> {\n  public render() {\n    const { search, scanLoginData, qrcodeData } = this.props\n\n    const isRtc = new URLSearchParams(search).get('rtc') === 'true'\n    let cmd = getWalletListCommand()\n    const value = isRtc\n      ? qrcodeData\n      : prepareCall(cmd.method, cmd.id, cmd.params, true)\n    return (\n      <React.Fragment>\n        <QrLogin\n          title={'Mobile Login'}\n          value={value}\n          onScan={scanLoginData}\n          readonly={isRtc}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({ router, transport }: IApplicationState) => ({\n  search: router.location.search,\n  qrcodeData: transport.qrcodeData,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  scanLoginData: (data: string) => dispatch(login(data)),\n})\n\nexport const Login = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginPage)\n","import * as React from 'react'\nimport {\n  Row,\n  H2,\n  H3,\n  Column,\n  Hr,\n  ButtonBase,\n  ButtonSecondary,\n  TextInput,\n  Link,\n  SelectFloat,\n} from '../components/atoms'\n\nexport const Home: React.SFC<{}> = () => (\n  <div style={{ width: '38rem' }}>\n    <H2>Welcome Back!</H2>\n    <H3>Sign in to your wallet below</H3>\n    <Hr />\n\n    <Row>\n      <Column\n        style={{\n          width: '50%',\n          display: 'flex',\n          justifyContent: 'center',\n          paddingRight: '1rem',\n        }}\n      >\n        <Row>\n          <Link to=\"/login\" style={{ width: '100%' }}>\n            <ButtonBase>Login with QR code</ButtonBase>\n          </Link>\n        </Row>\n        <Row>\n          <Link to=\"/login?rtc=true\" style={{ width: '100%' }}>\n            <ButtonSecondary>Webrtc login</ButtonSecondary>\n          </Link>\n        </Row>\n      </Column>\n      <Column style={{ width: '50%' }}>\n        <Row>\n          <TextInput type=\"text\" placeholder=\"Type your wallet address here\" />\n          <SelectFloat flipToRight>\n            <option value=\"eth\" key=\"eth\">\n              eth\n            </option>\n          </SelectFloat>\n        </Row>\n        <Row>\n          <ButtonSecondary>Login with address</ButtonSecondary>\n        </Row>\n      </Column>\n    </Row>\n  </div>\n)\n","import * as React from 'react'\nimport styled, { keyframes } from 'react-emotion'\n\nexport const Loader = () => (\n  <LoadingOverlayInner>\n    <LoadingSpinner />\n  </LoadingOverlayInner>\n)\n\nconst LoadingSpinner: React.SFC = () => (\n  <Spinner>\n    <div className=\"cube1\" />\n    <div className=\"cube2\" />\n  </Spinner>\n)\n\nconst CubeMove = keyframes`\n  25% {\n    transform: translateX(42px) rotate(-90deg) scale(0.5);\n    -webkit-transform: translateX(42px) rotate(-90deg) scale(0.5);\n  } 50% {\n    transform: translateX(42px) translateY(42px) rotate(-179deg);\n    -webkit-transform: translateX(42px) translateY(42px) rotate(-179deg);\n  } 50.1% {\n    transform: translateX(42px) translateY(42px) rotate(-180deg);\n    -webkit-transform: translateX(42px) translateY(42px) rotate(-180deg);\n  } 75% {\n    transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);\n    -webkit-transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);\n  } 100% {\n    transform: rotate(-360deg);\n    -webkit-transform: rotate(-360deg);\n  }\n`\n\nconst Spinner = styled('div')`\n  margin: 100px auto;\n  width: 40px;\n  height: 40px;\n  position: relative;\n  & .cube1,\n  & .cube2 {\n    background-color: black;\n    width: 15px;\n    height: 15px;\n    position: absolute;\n    top: 0;\n    left: 0;\n    -webkit-animation: ${CubeMove} 1.8s infinite ease-in-out;\n    animation: ${CubeMove} 1.8s infinite ease-in-out;\n  }\n  & .cube2 {\n    -webkit-animation-delay: -0.9s;\n    animation-delay: -0.9s;\n  }\n`\nconst LoadingOverlayInner = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 200px;\n`\n","import { IHostCommandU } from '../../helpers/webrtc/hostproto'\nimport { IAbiEntry } from '../../helpers/eth/eth-contracts';\n\nexport interface IWalletBase extends ApiResponse {\n  blockchain: string\n  address: string\n  chainId: string | number\n  balance?: string\n}\n\nexport interface IWalletEth extends IWalletBase {\n  nonce: number\n  txs?: IEthTx[]\n}\n\n// TODO: autogenrate, validate this !!!!\nexport interface IEthTx {\n  blockHash: string\n  blockNumber: string\n  confirmations: string\n  contractAddress: string\n  cumulativeGasUsed: string\n  from: string\n  gas: string\n  gasPrice: string\n  gasUsed: string\n  hash: string\n  input: string\n  isError: string\n  nonce: string\n  timeStamp: number\n  to: string\n  transactionIndex: string\n  txreceipt_status: string\n  value: string\n}\n\nexport interface IEosTx {\n  act: any\n  createdAt: string\n}\n\nexport interface IWalletEos extends IWalletBase {}\n\nexport type IWallet = IWalletBase | IWalletEos | IWalletEth\nexport type ApiResponse = Record<string, any>\n\nexport enum WalletsActionTypes {\n  FETCH_REQUEST = '@@wallets/FETCH_DATA_REQUEST',\n  FETCH_SUCCESS = '@@wallets/FETCH_DATA_SUCCESS',\n  FETCH_ERROR = '@@wallets/FETCH_DATA_ERROR',\n  ADD_WALLET = '@@wallets/ADD_WALLET',\n  SET_SENDING_TX_DATA = '@@wallets/SET_SENDING_TX_DATA',\n}\n\nexport interface IWalletsState {\n  readonly item: IWalletEth | IWalletEos\n  readonly items: IWalletEth[] | IWalletEos[]\n  readonly sendingTxData: ISendingTxData\n  readonly errors?: string\n  readonly loading: boolean\n}\n\nexport interface ISendingTxData {\n  command?: IHostCommandU\n  hash?: string\n  formData?: FormValues\n  error?: string\n}\n\nexport type FormValues = IEthTxFormValues \n  | IEthContractFormValues\n  | IEosTxFormValues\n  | IEosContractFormValues\n\nexport interface IEthTxFormValues {\n  to: string\n  gasPrice: number\n  data: string\n  amount: number\n}\n\nexport interface IEthContractFormValues {\n  to: string\n  abi: IAbiEntry[]\n  method: string\n  gasPrice: string\n  args: string[]\n  gasLimit: string\n}\n\nexport interface IEosTxFormValues {\n  to: string\n  memo: string\n  amount: number\n}\n\nexport interface IEosContractFormValues {\n  to: string\n  method: string\n  data: any\n  abi: string\n}","import { action } from 'typesafe-actions'\nimport {\n  WalletsActionTypes,\n  IWalletEth,\n  IWalletEos,\n  IWalletBase,\n  ISendingTxData,\n} from './types'\n\nexport const fetchRequest = () => action(WalletsActionTypes.FETCH_REQUEST)\nexport const fetchSuccess = (item: IWalletEth | IWalletEos) =>\n  action(WalletsActionTypes.FETCH_SUCCESS, item)\nexport const fetchError = (message: string) =>\n  action(WalletsActionTypes.FETCH_ERROR, message)\n\nexport const addWallet = (wallet: IWalletBase) =>\n  action(WalletsActionTypes.ADD_WALLET, wallet)\n\nexport const setSendingTxData = (data: ISendingTxData) =>\n  action(WalletsActionTypes.SET_SENDING_TX_DATA, data)\n","import styled from 'react-emotion'\n\nexport const OverflowTd = styled('td')({\n  maxWidth: '20vw',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n})\n\nexport const Table = styled('table')({\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  td: {\n    color: '#2e3d3f',\n    padding: '1rem .5rem',\n  },\n  th: {\n    color: '#457b9d',\n    padding: '.5rem',\n  },\n  tr: {\n    borderBottom: '1px solid #b2bcb9',\n  },\n  width: '100%',\n})\n","import * as React from 'react'\n\nimport { OverflowTd, Table } from './common'\nimport { A } from '../../components/atoms'\nimport { IEthTx, IWalletEth } from '../../store/wallets/types'\nimport { getEtherscanExploreUrl } from '../../helpers/eth/eth'\n\nexport const EthTx = (wallet: IWalletEth) => {\n  if (!wallet || !wallet.txs) {\n    return null\n  }\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>TxHash</th>\n          <th>Address</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {wallet.txs!.map((item: IEthTx, index: number) => (\n          <tr key={index}>\n            <td>{new Date(item.timeStamp * 1000).toLocaleString()}</td>\n            <OverflowTd>\n              <A\n                target=\"_blank\"\n                // TODO: make genrator explorer url for blockchains\n                href={`${getEtherscanExploreUrl(wallet.chainId as string)}/tx/${\n                  item.hash\n                }`}\n              >\n                {item.hash}\n              </A>\n            </OverflowTd>\n            <OverflowTd>{item.from}</OverflowTd>\n            <td>{item.value}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )\n}\n","import * as React from 'react'\nimport { IWalletBase, IWalletEth } from '../../store/wallets/types'\n\nimport { EthTx } from './eth'\nimport { EosTX } from './eos'\n\ninterface IProps {\n  wallet: IWalletBase | IWalletEth\n}\n\nexport const TXList: React.SFC<IProps> = ({ wallet }) => {\n  if (!wallet.txs) return <div />\n\n  if (wallet.blockchain === 'eth') {\n    return EthTx(wallet as IWalletEth)\n  }\n\n  if (wallet.blockchain === 'eos') {\n    return EosTX(wallet.txs)\n  }\n\n  return <div>hi</div>\n}\n","import * as React from 'react'\n\nimport { Table } from './common'\nimport { IEosTx } from '../../store/wallets/types'\n\nexport const EosTX = (txs: IEosTx[]) => {\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>Type</th>\n          <th>Act</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        {txs.map((item: IEosTx, index: number) => (\n          <tr key={index}>\n            <td>{new Date(item.createdAt).toLocaleString()}</td>\n            <td>{item.act.name}</td>\n            <td>\n              {item.act.name === 'transfer' &&\n                `${item.act.data.from} -> ${item.act.data.to}`}\n              {item.act.name === 'delegatebw' && `${item.act.data.from}`}\n              {item.act.name === 'buyrambytes' && `${item.act.data.payer}`}\n            </td>\n            <td>\n              {item.act.name === 'transfer' && `${item.act.data.quantity}`}\n              {item.act.name === 'delegatebw' && (\n                <React.Fragment>\n                  <span>{`CPU ${item.act.data.stake_cpu_quantity}`}</span>\n                  <br />\n                  <span>{`RAM ${item.act.data.stake_net_quantity}`}</span>\n                </React.Fragment>\n              )}\n              {item.act.name === 'buyrambytes' &&\n                `${item.act.data.bytes} bytes`}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )\n}\n","import * as React from 'react'\nimport styled from 'react-emotion'\nimport { Row, H2, Column, ButtonBase, H1, Hr } from '../components/atoms'\nimport { Loader } from '../components/Spinner'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState, IConnectedReduxProps } from '../store'\nimport { addWallet } from '../store/wallets/actions'\nimport { IWallet, IWalletBase } from '../store/wallets/types'\nimport { TXList } from './TXList'\nimport { getBcNetByChainId } from '../helpers/blockchains'\n\nconst TXListWrapper = styled('div')({\n  background: '#fff',\n  padding: '2rem',\n  boxShadow: '0px 0px 25px rgba(0, 0, 0, 0.04)',\n  borderRadius: '.8rem',\n})\n\nconst Net = styled('h3')`\n  margin: 0;\n  padding: 0;\n  font-weight: normal;\n  font-size: 14px;\n`\n\ninterface IPropsFromState {\n  loading: boolean\n  wallet: IWallet\n}\n\ninterface IPropsFromDispatch {\n  addWallet: typeof addWallet\n}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch & IConnectedReduxProps\n\nclass WalletPage extends React.Component<AllProps> {\n  public componentDidMount() {\n    const { wallet, addWallet: addWalletDispatch } = this.props\n\n    addWalletDispatch(wallet)\n  }\n\n  public render() {\n    const { wallet, loading } = this.props\n    const net = getBcNetByChainId(wallet.blockchain, wallet.chainId as string)\n    return (\n      <React.Fragment>\n        <Column>\n          <Row>\n            <Column style={{ flexBasis: '15rem', marginRight: '2rem' }}>\n              <Link to={`/wallets/${wallet.address}/tx/create`}>\n                <ButtonBase style={{ minWidth: '13rem' }}>\n                  Create New Tx\n                </ButtonBase>\n              </Link>\n              <Link to={`/wallets/${wallet.address}/contract/create`}>\n                <ButtonBase>Call Contract</ButtonBase>\n              </Link>\n            </Column>\n            <Column style={{ display: 'flex', justifyContent: 'center' }}>\n              <H1>{wallet.blockchain} Wallet</H1>\n              <H2>\n                <Address>{wallet.address}</Address>\n              </H2>\n              <Net>\n                Network: <b>{net.name}</b>\n              </Net>\n            </Column>\n          </Row>\n          <Hr />\n          <TXListWrapper>\n            <TXList wallet={wallet} />\n          </TXListWrapper>\n          {loading && <Loader />}\n        </Column>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  loading: wallets.loading,\n  wallet: wallets.item,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  addWallet: (wallet: IWalletBase) => dispatch(addWallet(wallet)),\n})\n\nexport const Wallet = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WalletPage)\n\nconst Address = styled('div')({\n  fontSize: '.8rem',\n  lineHeight: '1.5rem',\n})\n","import * as React from 'react'\nimport { Formik, FormikProps, Form, Field, FieldProps } from 'formik'\nimport {\n  Row,\n  H1,\n  Hr,\n  ButtonClose,\n  Column,\n  Label,\n  TextInput,\n  LabelAtop,\n  TextArea,\n  ButtonBase,\n  RangeInput,\n} from '../../components/atoms'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState } from '../../store'\nimport { IWallet, IEthTxFormValues } from '../../store/wallets/types'\nimport { createEthTransfer } from '../../store/transport/actions'\nimport styled from 'react-emotion'\n\ninterface IPropsFromState {\n  wallet: IWallet\n}\n\ninterface IPropsFromDispatch {\n  createTx: typeof createEthTransfer\n}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch\n\nconst CreateTxPage: React.SFC<AllProps> = ({ wallet, createTx }) => (\n  <React.Fragment>\n    <Row>\n      <H1>Send {wallet.blockchain}</H1>\n      <ButtonClose />\n    </Row>\n    <Hr />\n    <Formik\n      initialValues={{ to: '', gasPrice: 3, data: '', amount: 0 }}\n      onSubmit={(values: IEthTxFormValues) => createTx(values)}\n      render={(formikBag: FormikProps<IEthTxFormValues>) => (\n        <Form>\n          <Column>\n            <Label>To:</Label>\n            <Field\n              name=\"to\"\n              render={({ field, form }: FieldProps<IEthTxFormValues>) => (\n                <TextInput type=\"text\" placeholder=\"Address\" {...field} />\n              )}\n            />\n            <RowMargined>\n              <Column>\n                <Label>Enter amount:</Label>\n                <Row>\n                  <LabelAtop label={wallet.blockchain}>\n                    <Field\n                      name=\"amount\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEthTxFormValues>) => (\n                        <TextInput\n                          type=\"number\"\n                          min=\"0\"\n                          step={(1e-18).toFixed(20)}\n                          {...field}\n                        />\n                      )}\n                    />\n                  </LabelAtop>\n                  <img src=\"/icon-change.svg\" />\n                  <LabelAtop label=\"usd\">\n                    <Field\n                      name=\"amount\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEthTxFormValues>) => (\n                        <TextInput\n                          type=\"number\"\n                          readOnly\n                          step={(1e-18).toFixed(20)}\n                          value={field.value}\n                          // TODO: add totalPrice\n                          // value={totalPrice}\n                        />\n                      )}\n                    />\n                  </LabelAtop>\n                </Row>\n              </Column>\n            </RowMargined>\n            <RowMargined>\n              <Column>\n                <Label>Description:</Label>\n                <Field\n                  name=\"data\"\n                  render={({ field, form }: FieldProps<IEthTxFormValues>) => (\n                    <TextArea {...field} />\n                  )}\n                />\n              </Column>\n            </RowMargined>\n            <RowMargined>\n              <Column>\n                <Field\n                  name=\"gasPrice\"\n                  render={({ field, form }: FieldProps<IEthTxFormValues>) => (\n                    <React.Fragment>\n                      <Label>Gas price {field.value} GWEI</Label>\n                      <RangeInput type=\"range\" min=\"1\" max=\"7\" {...field} />\n                    </React.Fragment>\n                  )}\n                />\n                <Row>\n                  {/* // TODO: Calca gasprice and await time */}\n                  <span>gweiPrice</span>\n                  <span> {`< awaitTime min`}</span>\n                </Row>\n              </Column>\n            </RowMargined>\n            <ButtonBase type=\"submit\">Continue</ButtonBase>\n          </Column>\n        </Form>\n      )}\n    />\n  </React.Fragment>\n)\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  wallet: wallets.item,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  createTx: (data: IEthTxFormValues) => dispatch(createEthTransfer(data)),\n})\n\nexport const CreateEthTx = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateTxPage)\n\nconst RowMargined = styled(Row)({\n  margin: '1rem 0',\n})\n","import * as React from 'react'\nimport { Formik, FormikProps, Form, Field, FieldProps } from 'formik'\nimport {\n  Row,\n  H1,\n  Hr,\n  ButtonClose,\n  Column,\n  Label,\n  TextInput,\n  LabelAtop,\n  TextArea,\n  ButtonBase,\n} from '../../components/atoms'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState } from '../../store'\nimport { IWallet, IEosTxFormValues } from '../../store/wallets/types'\nimport { createEosTransfer } from '../../store/transport/actions'\nimport styled from 'react-emotion'\n\ninterface IPropsFromState {\n  wallet: IWallet\n}\n\ninterface IPropsFromDispatch {\n  createTx: typeof createEosTransfer\n}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch\n\nconst CreateTxPage: React.SFC<AllProps> = ({ wallet, createTx }) => (\n  <React.Fragment>\n    <Row>\n      <H1>Send {wallet.blockchain}</H1>\n      <ButtonClose />\n    </Row>\n    <Hr />\n    <Formik\n      initialValues={{ to: '', memo: '', amount: 0 }}\n      onSubmit={(values: IEosTxFormValues) => createTx(values)}\n      render={(formikBag: FormikProps<IEosTxFormValues>) => (\n        <Form>\n          <Column>\n            <Label>To:</Label>\n            <Field\n              name=\"to\"\n              render={({ field, form }: FieldProps<IEosTxFormValues>) => (\n                <TextInput type=\"text\" placeholder=\"Address\" {...field} />\n              )}\n            />\n            <RowMargined>\n              <Column>\n                <Label>Enter amount:</Label>\n                <Row>\n                  <LabelAtop label={wallet.blockchain}>\n                    <Field\n                      name=\"amount\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEosTxFormValues>) => (\n                        <TextInput\n                          type=\"number\"\n                          min=\"0\"\n                          step={(1e-4).toFixed(4)}\n                          {...field}\n                        />\n                      )}\n                    />\n                  </LabelAtop>\n                  <LabelAtop label=\"usd\">\n                    <Field\n                      name=\"amount\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEosTxFormValues>) => (\n                        <TextInput\n                          type=\"number\"\n                          readOnly\n                          step={(1e-4).toFixed(4)}\n                          value={field.value * 1.69}\n                        />\n                      )}\n                    />\n                  </LabelAtop>\n                </Row>\n              </Column>\n            </RowMargined>\n            <RowMargined>\n              <Column>\n                <Label>Description:</Label>\n                <Field\n                  name=\"memo\"\n                  render={({ field, form }: FieldProps<IEosTxFormValues>) => (\n                    <TextArea {...field} />\n                  )}\n                />\n              </Column>\n            </RowMargined>\n            <ButtonBase type=\"submit\">Continue</ButtonBase>\n          </Column>\n        </Form>\n      )}\n    />\n  </React.Fragment>\n)\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  wallet: wallets.item,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  createTx: (data: IEosTxFormValues) => dispatch(createEosTransfer(data)),\n})\n\nexport const CreateEosTx = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateTxPage as any)\n\nconst RowMargined = styled(Row)({\n  margin: '1rem 0',\n})\n","import * as React from 'react'\nimport { connect } from 'react-redux'\n\nimport { IApplicationState } from '../../store'\nimport { IWallet } from '../../store/wallets/types'\nimport { CreateEthTx } from './eth'\nimport { CreateEosTx } from './eos'\n\ninterface IPropsFromState {\n  wallet: IWallet\n}\n\nconst CreateTxPage: React.SFC<IPropsFromState> = ({ wallet }) => {\n  return (\n    <React.Fragment>\n      {wallet.blockchain === 'eth' && <CreateEthTx />}\n      {wallet.blockchain === 'eos' && <CreateEosTx />}\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  wallet: wallets.item,\n})\n\nexport const CreateTx = connect(\n  mapStateToProps,\n  null\n)(CreateTxPage)\n","import * as React from 'react'\nimport { QrLogin } from '../components/organisms/QrLogin'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState, IConnectedReduxProps } from '../store'\nimport { sendTransaction } from '../store/transport/actions'\nimport { call as prepareCall } from '../helpers/webrtc/jsonrpc'\nimport { IHostCommandU } from '../helpers/webrtc/hostproto'\n\ninterface IPropsFromState {\n  command: IHostCommandU\n}\n\ninterface IPropsFromDispatch {\n  sendTx: typeof sendTransaction\n}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch & IConnectedReduxProps\n\nconst SignPage: React.SFC<AllProps> = ({ command, sendTx }) => {\n  let scaned = false\n  const value = prepareCall(command.method, command.id, command.params, true)\n  const handleScan = (result: string) => {\n    if (!scaned) {\n      scaned = true\n      sendTx(result)\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <QrLogin\n        title={'Sign Transaction By Mobile'}\n        value={value || ''}\n        onScan={handleScan}\n      />\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  command: wallets.sendingTxData.command!,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  sendTx: (data: string) => dispatch(sendTransaction(data)),\n})\n\nexport const Sign = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignPage as any)\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport { IApplicationState, IConnectedReduxProps } from '../store'\nimport { Row, H2, ButtonClose, H1, Hr } from '../components/atoms'\nimport styled from 'react-emotion'\n\ninterface IPropsFromState {\n  status: string\n}\n\ninterface IPropsFromDispatch {}\n\ntype AllProps = IPropsFromState & IPropsFromDispatch & IConnectedReduxProps\n\nconst StatusPage: React.SFC<AllProps> = ({ status }) => (\n  <React.Fragment>\n    {status}\n    <Row>\n      <H1>Tx sent result</H1>\n      <ButtonClose />\n    </Row>\n    <Hr />\n    <LoadingText>Status : {status}</LoadingText>\n  </React.Fragment>\n)\n\nconst mapStateToProps = ({ webrtc }: IApplicationState) => ({\n  status: webrtc.status,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({})\n\nexport const Status = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StatusPage)\n\nconst LoadingText = styled(H2)`\n  &:after {\n    content: ' .';\n    animation: dots 1s steps(5, end) infinite;\n  }\n\n  @keyframes dots {\n    0%,\n    20% {\n      color: rgba(0, 0, 0, 0);\n      text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);\n    }\n    40% {\n      color: black;\n      text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);\n    }\n    60% {\n      text-shadow: 0.25em 0 0 black, 0.5em 0 0 rgba(0, 0, 0, 0);\n    }\n    80%,\n    100% {\n      text-shadow: 0.25em 0 0 black, 0.5em 0 0 black;\n    }\n  }\n`\n","import { H1, H2, Row, ButtonClose, Hr } from '../components/atoms'\nimport styled from 'react-emotion'\nimport * as React from 'react'\nimport { connect } from 'react-redux'\nimport { IApplicationState, IConnectedReduxProps } from '../store'\nimport { ISendingTxData, IWalletBase, IWallet } from '../store/wallets/types'\nimport { getBcNetByChainId } from '../helpers/blockchains'\n\ninterface IPropsFromState {\n  sendingData: ISendingTxData\n  wallet: IWalletBase\n}\n\ntype AllProps = IPropsFromState & IConnectedReduxProps\n\nconst getExplrUrl = (wallet: IWallet, hash: string | undefined) => {\n  return `${\n    getBcNetByChainId(wallet.blockchain, wallet.chainId as string).explorerUrl\n  }/tx/${hash}`\n}\n\nconst TxViewPage: React.SFC<AllProps> = ({\n  sendingData: { formData, hash, error },\n  wallet,\n}) => {\n  return (\n    <React.Fragment>\n      <Row>\n        <H1>Tx sent result</H1>\n        <ButtonClose />\n      </Row>\n      <Hr />\n      {error ? (\n        <H2>Error : {error}</H2>\n      ) : (\n        <div>\n          <H2>To : {formData!.to}</H2>\n          <a target=\"_blank\" href={getExplrUrl(wallet, hash)}>\n            {hash}\n          </a>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  sendingData: wallets.sendingTxData,\n  wallet: wallets.item,\n})\n\nexport const TxView = connect(mapStateToProps)(TxViewPage)\n\nexport const Container = styled('main')({\n  alignItems: 'center',\n  background: '#f1faee',\n  display: 'flex',\n  justifyContent: 'center',\n  minHeight: 'calc(100vh - 8rem - 4vh)',\n  width: '100vw',\n})\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\n\nimport { createEthContract } from '../../store/transport/actions'\nimport { IEthContractFormValues } from '../../store/wallets/types'\n\nimport {\n  Formik,\n  FormikProps,\n  Form,\n  Field,\n  FieldProps,\n  FieldArray,\n  ArrayHelpers,\n} from 'formik'\n\nimport {\n  Column,\n  Label,\n  TextInput,\n  RangeInput,\n  ButtonBase,\n  Row,\n  Wrap,\n  SelectOptions,\n  H1,\n  Hr,\n} from '../../components/atoms'\nimport {\n  getPublicMethodNames,\n  IAbiEntry,\n  getArguments,\n  IAbiArgument,\n} from '../../helpers/eth/eth-contracts'\n\ninterface IPropsFromDispatch {\n  createTx: typeof createEthContract\n}\n\ninterface IStateProps {\n  publicMethodNames: string[]\n  methodArgs: IAbiArgument[]\n}\n\ntype AllProps = IPropsFromDispatch\n\nclass CreateEthContractPage extends React.Component<AllProps, IStateProps> {\n  constructor(props: AllProps) {\n    super(props)\n\n    this.state = {\n      publicMethodNames: [],\n      methodArgs: [],\n    }\n  }\n\n  handleOnChangeAbi = async (\n    e: React.ChangeEvent<HTMLInputElement>,\n    form: any\n  ) => {\n    if (!e.target.files) {\n      return\n    }\n\n    let file = e.target.files[0]\n    const reader = new FileReader()\n\n    reader.readAsText(file)\n    const result = (await new Promise(resolve => {\n      reader.onload = () => {\n        resolve(JSON.parse(reader.result as string))\n      }\n    })) as IAbiEntry[]\n\n    form.setFieldValue('abi', result)\n\n    const publicMethodNames = getPublicMethodNames(result)\n    this.setState({ publicMethodNames })\n  }\n\n  render() {\n    const { publicMethodNames, methodArgs } = this.state\n    const { createTx } = this.props\n    return (\n      <React.Fragment>\n        <Formik\n          initialValues={{\n            to: '',\n            abi: [],\n            method: '',\n            gasPrice: '5',\n            gasLimit: '300000',\n            args: [],\n          }}\n          onSubmit={(values: IEthContractFormValues) => createTx(values)}\n          render={(formikBag: FormikProps<IEthContractFormValues>) => (\n            <Form style={{ width: 600 }}>\n              <Column>\n                <Row>\n                  <H1>Call Contract ETH</H1>\n                </Row>\n                <Hr />\n                <Row>\n                  <Column style={{ flexBasis: '65%', marginRight: '5%' }}>\n                    <Label>Address:</Label>\n                    <Field\n                      name=\"to\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEthContractFormValues>) => (\n                        <TextInput\n                          type=\"text\"\n                          placeholder=\"Address\"\n                          {...field}\n                        />\n                      )}\n                    />\n                  </Column>\n                  <Column style={{ flexBasis: '30%' }}>\n                    <Label>Select from computer:</Label>\n                    <div style={{ flexBasis: '30%', position: 'relative' }}>\n                      <ButtonBase>Upload ABI</ButtonBase>\n                      <Field\n                        name=\"abi\"\n                        render={({\n                          field,\n                          form,\n                        }: FieldProps<IEthContractFormValues>) => (\n                          <TextInput\n                            type=\"file\"\n                            name={field.name}\n                            onBlur={field.onBlur}\n                            onChange={e => this.handleOnChangeAbi(e, form)}\n                            style={{\n                              position: 'absolute',\n                              left: 0,\n                              top: 0,\n                              opacity: 0,\n                            }}\n                          />\n                        )}\n                      />\n                    </div>\n                    <Wrap vertical={1} />\n                  </Column>\n                </Row>\n                <Row>\n                  <Column style={{ flexBasis: '65%', marginRight: '5%' }}>\n                    <Label>Method:</Label>\n                    <Field\n                      name=\"method\"\n                      render={({\n                        field,\n                        form,\n                      }: FieldProps<IEthContractFormValues>) => (\n                        <SelectOptions\n                          {...field}\n                          onChange={(e: any) => {\n                            form.setFieldValue('method', e.target.value)\n                            const args = getArguments(\n                              form.values.abi,\n                              e.target.value\n                            )\n                            form.setFieldValue(\n                              'args',\n                              new Array(args.length).fill('')\n                            )\n                            this.setState({ methodArgs: args })\n                          }}\n                        >\n                          <option value=\"\">Select method</option>\n                          {publicMethodNames.map(item => (\n                            <option key={item} value={item}>\n                              {item}\n                            </option>\n                          ))}\n                        </SelectOptions>\n                      )}\n                    />\n                    <Wrap vertical={1} />\n                    <FieldArray\n                      name=\"args\"\n                      render={({\n                        form,\n                      }: ArrayHelpers & {\n                        form: FormikProps<IEthContractFormValues>\n                      }) =>\n                        form.values.args &&\n                        form.values.args.length > 0 && (\n                          <React.Fragment>\n                            <Label>Parameters:</Label>\n                            {form.values.args.map((arg, index: number) => (\n                              <Field\n                                key={index}\n                                name={`args[${index}`}\n                                render={({\n                                  field,\n                                }: FieldProps<IEthContractFormValues>) => (\n                                  <TextInput\n                                    type=\"text\"\n                                    placeholder={methodArgs[index].name}\n                                    {...field}\n                                  />\n                                )}\n                              />\n                            ))}\n                          </React.Fragment>\n                        )\n                      }\n                    />\n                  </Column>\n                  <Column style={{ flexBasis: '30%', textAlign: 'left' }}>\n                    <Wrap horizontal={0}>\n                      <Label>Estimated GAS: {formikBag.values.gasLimit}</Label>\n                      <Wrap vertical={1} />\n                      <Label>GAS price: {formikBag.values.gasPrice} GWEI</Label>\n                      <Field\n                        name=\"gasPrice\"\n                        render={({\n                          field,\n                          form,\n                        }: FieldProps<IEthContractFormValues>) => (\n                          <RangeInput\n                            type=\"range\"\n                            placeholder=\"Address\"\n                            {...field}\n                            min=\"1\"\n                            max=\"7\"\n                          />\n                        )}\n                      />\n                    </Wrap>\n                  </Column>\n                </Row>\n                <ButtonBase type=\"submit\">Continue</ButtonBase>\n              </Column>\n            </Form>\n          )}\n        />\n      </React.Fragment>\n    )\n  }\n}\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  createTx: (data: any) => dispatch(createEthContract(data)),\n})\n\nexport const CallEthContract = connect(\n  null,\n  mapDispatchToProps\n)(CreateEthContractPage)\n","import BN from \"bn.js\";\n\nconst normalizers = {\n  nothing: async (value: any, type?: string, name?: string) => value,\n  toNumber: async (value: any, type?: string, name?: string) =>\n    new BN(value, 10).toNumber()\n};\n\nconst validators = {\n  nothing: async (value: any, type?: string, name?: string) => true\n};\n\nconst defaults = {\n  string: async (type?: string, name?: string) => \"\"\n};\n\nexport interface KnownType {\n  component: string;\n  config: any;\n  validation(value: any, type?: string, name?: string): Promise<boolean>;\n  normalize(value: any, type?: string, name?: string): Promise<any>;\n  default(type?: string, name?: string): Promise<any>;\n}\n\nexport const knownTypes: { [type: string]: KnownType } = {\n  uint64: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  },\n  fixed_bytes20: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  fixed_bytes32: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  fixed_bytes64: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  fixed_bytes65: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  fixed_bytes33: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  fixed_string16: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  string: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  name: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  int64: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  },\n  time: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  uint32: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  },\n  timestamp: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  uint16: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  },\n  checksum_type: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  bytes: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.nothing,\n    default: defaults.string\n  },\n  varuint32: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  },\n  uint8: {\n    component: \"el-input\",\n    config: {},\n    validation: validators.nothing,\n    normalize: normalizers.toNumber,\n    default: defaults.string\n  }\n};\n\nexport type TypeDef =\n  | string\n  | { [field: string]: TypeDef }\n  | [(string | { [field: string]: TypeDef })];\n\nfunction wrap(a: any, w: boolean): any {\n  return w ? [a] : a;\n}\n\nexport function lookUpBase(type: string, customs?: any): any {\n  const array = isArray(type);\n  if (array) {\n    type = type.substr(0, type.length - 2);\n  }\n\n  let r;\n\n  if (isBase(type)) {\n    r = type;\n  } else if (isChainType(type)) {\n    r = lookUpTypeCollection(chainTypes, type, customs);\n  } else if (customs && customs[type]) {\n    r = lookUpTypeCollection(customs, type, customs);\n  } else {\n    r = `unknown_${type}`;\n  }\n\n  return wrap(r, array);\n}\n\nfunction lookUpTypeCollection(\n  collection: any,\n  type: string,\n  customs?: any\n): any {\n  const chain = collection[type];\n  if (typeof chain === \"string\") {\n    return lookUpBase(chain, customs);\n  } else if (chain.base && chain.base.length) {\n    return Object.assign(\n      lookUpBase(chain.base, customs),\n      toDictionary(\n        Object.keys(chain.fields),\n        (k: any) => k,\n        (k: any) => lookUpBase(chain.fields[k], customs)\n      )\n    );\n  } else {\n    return toDictionary(\n      Object.keys(chain.fields),\n      (k: any) => k,\n      (k: any) => lookUpBase(chain.fields[k], customs)\n    );\n  }\n}\n\nexport function isArray(type: string): boolean {\n  return type.endsWith(\"[]\");\n}\n\nexport function isBase(type: string): boolean {\n  return typeof knownTypes[type] !== \"undefined\";\n}\n\nexport function isChainType(type: string): boolean {\n  return isBase(type) || typeof chainTypes[type] !== \"undefined\";\n}\n\nexport const chainTypes = {\n  checksum160: \"fixed_bytes20\",\n  checksum256: \"fixed_bytes32\",\n  checksum512: \"fixed_bytes64\",\n  signature: \"fixed_bytes65\",\n  public_key: \"fixed_bytes33\",\n  message_type: \"fixed_string16\",\n  symbol: \"uint64\",\n  symbol_code: \"uint64\",\n  field_name: \"string\",\n  account_name: \"name\",\n  permission_name: \"name\",\n  type_name: \"string\",\n  token_name: \"name\",\n  table_name: \"name\",\n  scope_name: \"name\",\n  action_name: \"name\",\n  time_point: \"int64\",\n  time_point_sec: \"time\",\n  timestamp: \"uint32\",\n  block_timestamp_type: \"timestamp\",\n  block_id: \"fixed_bytes32\",\n  checksum_type: \"fixed_bytes32\",\n  checksum256_type: \"fixed_bytes32\",\n  checksum512_type: \"fixed_bytes64\",\n  checksum160_type: \"fixed_bytes20\",\n  sha256: \"fixed_bytes32\",\n  sha512: \"fixed_bytes64\",\n  sha160: \"fixed_bytes20\",\n  weight_type: \"uint16\",\n  block_num_type: \"uint32\",\n  share_type: \"int64\",\n  digest_type: \"checksum_type\",\n  context_free_type: \"bytes\",\n  unsigned_int: \"varuint32\",\n  bool: \"uint8\",\n  extensions_type: {\n    base: \"\",\n    fields: {\n      type: \"uint16\",\n      data: \"bytes\"\n    }\n  },\n  transaction_header: {\n    base: \"\",\n    fields: {\n      expiration: \"time\",\n      ref_block_num: \"uint16\",\n      ref_block_prefix: \"uint32\",\n      max_net_usage_words: \"unsigned_int\",\n      max_cpu_usage_ms: \"uint8\",\n      delay_sec: \"unsigned_int\"\n    }\n  },\n  transaction: {\n    base: \"transaction_header\",\n    fields: {\n      context_free_actions: \"action[]\",\n      actions: \"action[]\",\n      transaction_extensions: \"extensions_type[]\"\n    }\n  },\n  signed_transaction: {\n    base: \"transaction\",\n    fields: {\n      signatures: \"signature[]\",\n      context_free_data: \"bytes[]\"\n    }\n  },\n  fields: \"field_def[]\",\n  field_def: {\n    fields: {\n      name: \"field_name\",\n      type: \"type_name\"\n    }\n  },\n  asset: {\n    fields: {\n      amount: \"share_type\",\n      sym: \"symbol\"\n    }\n  },\n  producer_key: {\n    fields: {\n      producer_name: \"account_name\",\n      block_signing_key: \"public_key\"\n    }\n  },\n  producer_schedule: {\n    fields: {\n      version: \"uint32\",\n      producers: \"producer_key[]\"\n    }\n  },\n  chain_config: {\n    fields: {\n      target_block_size: \"uint32\",\n      max_block_size: \"uint32\",\n      target_block_acts_per_scope: \"uint32\",\n      max_block_acts_per_scope: \"uint32\",\n      target_block_acts: \"uint32\",\n      max_block_acts: \"uint32\",\n      real_threads: \"uint64\",\n      max_storage_size: \"uint64\",\n      max_transaction_lifetime: \"uint32\",\n      max_authority_depth: \"uint16\",\n      max_transaction_exec_time: \"uint32\",\n      max_inline_depth: \"uint16\",\n      max_inline_action_size: \"uint32\",\n      max_generated_transaction_size: \"uint32\"\n    }\n  },\n  type_def: {\n    base: \"\",\n    fields: {\n      new_type_name: \"type_name\",\n      type: \"type_name\"\n    }\n  },\n  struct_def: {\n    base: \"\",\n    fields: {\n      name: \"type_name\",\n      base: \"type_name\",\n      fields: \"field_def[]\"\n    }\n  },\n  clause_pair: {\n    base: \"\",\n    fields: {\n      id: \"string\",\n      body: \"string\"\n    }\n  },\n  error_message: {\n    base: \"\",\n    fields: {\n      error_code: \"uint64\",\n      error_msg: \"string\"\n    }\n  },\n  abi_def: {\n    base: \"\",\n    fields: {\n      version: \"string\",\n      types: \"type_def[]\",\n      structs: \"struct_def[]\",\n      actions: \"action_def[]\",\n      tables: \"table_def[]\",\n      ricardian_clauses: \"clause_pair[]\",\n      error_messages: \"error_message[]\",\n      abi_extensions: \"extensions_type[]\"\n    }\n  },\n  table_def: {\n    base: \"\",\n    fields: {\n      name: \"table_name\",\n      index_type: \"type_name\",\n      key_names: \"field_name[]\",\n      key_types: \"type_name[]\",\n      type: \"type_name\"\n    }\n  },\n  permission_level: {\n    base: \"\",\n    fields: {\n      actor: \"account_name\",\n      permission: \"permission_name\"\n    }\n  },\n  action: {\n    base: \"\",\n    fields: {\n      account: \"account_name\",\n      name: \"action_name\",\n      authorization: \"permission_level[]\",\n      data: \"bytes\"\n    }\n  },\n  action_def: {\n    base: \"\",\n    fields: {\n      name: \"action_name\",\n      type: \"type_name\",\n      ricardian_contract: \"string\"\n    }\n  },\n  block_header: {\n    base: \"\",\n    fields: {\n      previous: \"checksum256\",\n      timestamp: \"timestamp\",\n      transaction_mroot: \"checksum256\",\n      action_mroot: \"checksum256\",\n      block_mroot: \"checksum256\",\n      producer: \"account_name\",\n      schedule_version: \"uint32\",\n      new_producers: \"producer_schedule?\"\n    }\n  },\n  packed_transaction: {\n    fields: {\n      signatures: \"signature[]\",\n      compression: \"uint8\",\n      packed_context_free_data: \"bytes\",\n      packed_trx: \"bytes\"\n    }\n  }\n};\n\nexport function toDictionary<T, V>(\n  arr: T[],\n  key: (obj: T) => string,\n  val: (obj: T) => V\n) {\n  return arr.reduce((acc, cur) => ((acc[key(cur)] = val(cur)), acc), {} as {\n    [key: string]: V;\n  });\n}","export const formToJson = (form: any) => {\n  const data = new FormData(form);\n  const object = {};\n\n  data.forEach((value, key) => {\n    if (object[key]) {\n      if (Array.isArray(object[key])) {\n        object[key].push(value);\n      } else {\n        object[key] = [object[key], value];\n      }\n    } else {\n      object[key] = value;\n    }\n  });\n\n  return object;\n};","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport styled from 'react-emotion'\nimport { css } from 'emotion'\nimport { createEosContract } from '../../store/transport/actions'\nimport { IEosContractFormValues, IWalletEos } from '../../store/wallets/types'\nimport {\n  H2,\n  H3,\n  Column,\n  Label,\n  TextInput,\n  ButtonBase,\n  Row,\n  SelectOptions,\n} from '../../components/atoms'\n\nimport { getEos } from '../../helpers/eos'\nimport { toDictionary, lookUpBase } from '../../helpers/eos-types'\nimport { formToJson } from '../../helpers/func'\nimport { IApplicationState } from '../../store'\n\nconst Error = styled('div')`\n  margin-top: 10px;\n  font-weight: bold;\n`\n\nconst styles = {\n  offtop: css`\n    margin-top: 25px;\n  `,\n  select: css`\n    padding: 0.8rem 1rem;\n  `,\n}\n\nconst expand = (type: string, customs: any): any => {\n  try {\n    return lookUpBase(type, customs)\n  } catch (e) {\n    console.error('editor err', e)\n    return 'error_type_' + type\n  }\n}\n\nconst customTypes = (customs: any, types: any) => {\n  const dict = toDictionary(\n    customs,\n    (x: any) => x.name,\n    x => ({\n      ...x,\n      fields: toDictionary(x.fields, (f: any) => f.name, f => f.type),\n    })\n  )\n  ;(types as any[]).forEach(type => (dict[type.new_type_name] = type.type))\n\n  return dict\n}\n\ninterface IPropsFromDispatch {\n  createTx: typeof createEosContract\n  wallet: IWalletEos\n}\n\ninterface IStateProps {\n  address: string\n  abi: any\n  customs: any\n  action: string\n  error: string\n}\n\ntype AllProps = IPropsFromDispatch\n\nclass CreateEosContractPage extends React.Component<AllProps, IStateProps> {\n  constructor(props: AllProps) {\n    super(props)\n\n    this.state = {\n      address: '',\n      abi: null,\n      customs: null,\n      action: '',\n      error: '',\n    }\n  }\n\n  handleChangeAddress = async (e: any) => {\n    const value = e.target.value\n\n    this.setState({\n      address: value,\n    })\n  }\n\n  handleSubmit = async (e: any) => {\n    e.preventDefault()\n\n    try {\n      const eos = getEos(this.props.wallet)\n      const abi = await eos.getAbi(this.state.address)\n\n      if (abi) {\n        const customs = customTypes(abi.abi.structs, abi.abi.types)\n\n        this.setState({\n          abi,\n          customs,\n        })\n      }\n    } catch (e) {\n      this.setState({\n        error: 'Contract not found',\n      })\n    }\n  }\n\n  handleConfirm = (e: any) => {\n    e.preventDefault()\n\n    const data = formToJson(e.target)\n    this.props.createTx({\n      to: this.state.address,\n      method: this.state.action,\n      data,\n      abi: this.state.customs[this.state.action].fields,\n    })\n  }\n\n  handleMethodSelect = (e: any) => {\n    const value = e.target.value\n    this.setState({\n      action: value,\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {!this.state.abi && (\n          <form onSubmit={this.handleSubmit}>\n            <H2>Call Contract EOS</H2>\n            <Column>\n              <Row>\n                <Column style={{ flexBasis: '100%', marginRight: '0%' }}>\n                  <TextInput\n                    type=\"text\"\n                    placeholder=\"contract name\"\n                    value={this.state.address}\n                    onChange={this.handleChangeAddress}\n                  />\n                </Column>\n              </Row>\n              <Row>{this.state.error && <Error>{this.state.error}</Error>}</Row>\n              <Column\n                style={{ width: '40%', marginLeft: '30%', marginTop: '50px' }}\n              >\n                <ButtonBase type=\"submit\">Find contract</ButtonBase>\n              </Column>\n            </Column>\n          </form>\n        )}\n        {this.state.abi && (\n          <React.Fragment>\n            <H2>Call Contract EOS</H2>\n            <H3>{this.state.address}</H3>\n            <Row className={styles.offtop}>\n              <Column>\n                <Label>Contract method:</Label>\n                <SelectOptions\n                  onChange={this.handleMethodSelect}\n                  name=\"method\"\n                  className={styles.select}\n                >\n                  <option value=\"\">Select method</option>\n                  {this.state.abi.abi.actions.map((item: any) => (\n                    <option key={item.type} value={item.type}>\n                      {item.name}\n                    </option>\n                  ))}\n                </SelectOptions>\n              </Column>\n            </Row>\n            <form onSubmit={this.handleConfirm}>\n              {this.state.action && (\n                <React.Fragment>\n                  <H3 className={styles.offtop}>Parameters:</H3>\n                  {Object.entries(\n                    expand(this.state.action, this.state.customs)\n                  ).map((item: any[]) => {\n                    return (\n                      <Row key={item[0]}>\n                        <Column>\n                          <Label>{item[0]}:</Label>\n                          <TextInput\n                            name={item[0]}\n                            type=\"text\"\n                            placeholder={item[0]}\n                          />\n                        </Column>\n                      </Row>\n                    )\n                  })}\n                </React.Fragment>\n              )}\n              {this.state.action && (\n                <ButtonBase type=\"submit\" className={styles.offtop}>\n                  Sign\n                </ButtonBase>\n              )}\n            </form>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  wallet: wallets.item,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  createTx: (data: IEosContractFormValues) => dispatch(createEosContract(data)),\n})\n\nexport const CallEosContract = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateEosContractPage)\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { IApplicationState } from '../../store'\n\nimport { IWalletBase } from '../../store/wallets/types'\n\nimport { CallEthContract } from './eth'\nimport { CallEosContract } from './eos'\n\ninterface IPropsFromDispatch {\n  wallet: IWalletBase\n}\n\ntype AllProps = IPropsFromDispatch\n\nclass ContractPage extends React.Component<AllProps, {}> {\n  render() {\n    const { wallet } = this.props\n\n    switch (wallet.blockchain) {\n      case 'eth':\n        return <CallEthContract />\n      case 'eos':\n        return <CallEosContract />\n    }\n    return null\n  }\n}\nconst mapStateToProps = ({ wallets }: IApplicationState) => ({\n  wallet: wallets.item,\n})\n\nexport const CallContract = connect(mapStateToProps)(ContractPage)\n","import * as React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport { DefaultLayout, MainLayout, ModalLayout } from './components/layouts'\nimport {\n  Login,\n  Home,\n  Wallet,\n  CreateTx,\n  Sign,\n  Status,\n  TxView,\n  CallContract,\n} from './pages'\n\nexport const Routes: React.SFC = () => {\n  return (\n    <div>\n      <Switch>\n        <DefaultLayout exact path=\"/\" component={Home} />>\n        <DefaultLayout path=\"/login\" component={Login} />\n        <MainLayout>\n          <Route exact path=\"/wallets/:id\" component={Wallet} />\n          <ModalLayout path=\"/wallets/:id/tx/create\" component={CreateTx} />\n          <ModalLayout path=\"/wallets/:id/contract/create\" component={CallContract} />\n          <ModalLayout path=\"/wallets/:id/tx/sign\" component={Sign} />\n          <ModalLayout path=\"/tx/:id\" component={TxView} />\n          <ModalLayout path=\"/status\" component={Status} />        \n        </MainLayout>\n      </Switch>\n    </div>\n  )\n}\n","import { ITheme } from '../utils/styled'\n\n//for example\nexport const theme: ITheme = {\n  colors: {\n    background: '#000000',\n    body: '#2e2e2c',\n    black: '#000000',\n    white: '#2e2e2c',\n  },\n  fontSizes: {\n    h1: '2.441rem',\n    h2: '1.953rem',\n    h3: '1.563rem',\n    h4: '1.25rem',\n  },\n  breakpoints: {\n    xs: '0px',\n    sm: '576px',\n    md: '768px',\n    lg: '992px',\n    xl: '1200px',\n  },\n  widths: {\n    md: '720px',\n    lg: '960px',\n    xl: '1140px',\n  },\n}\n","import { css } from 'react-emotion'\n\nexport default css`\n  /*! modern-normalize | MIT License | https://github.com/sindresorhus/modern-normalize */\n  /* Document\n    ========================================================================== */\n  /**\n  * Use a better box model (opinionated).\n  */\n  html {\n    box-sizing: border-box;\n  }\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n  /**\n  * Use a more readable tab size (opinionated).\n  */\n  :root {\n    -moz-tab-size: 4;\n    tab-size: 4;\n  }\n  /**\n  * Correct the line height in all browsers.\n  */\n  html {\n    line-height: 1.15;\n  }\n  /* Sections\n    ========================================================================== */\n  /**\n  * Remove the margin in all browsers.\n  */\n  body {\n    margin: 0;\n  }\n  /**\n  * Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  */\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n      Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\n      'Segoe UI Symbol';\n  }\n  /**\n  * Correct the font size and margin on \\`h1\\` elements within \\`section\\` and\n  * \\`article\\` contexts in Chrome, Firefox, and Safari.\n  */\n  h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n  }\n  /* Grouping content\n    ========================================================================== */\n  /**\n  * Add the correct height in Firefox.\n  */\n  hr {\n    height: 0;\n  }\n  /* Text-level semantics\n    ========================================================================== */\n  /**\n  * Add the correct text decoration in Chrome, Edge, and Safari.\n  */\n  abbr[title] {\n    text-decoration: underline dotted;\n  }\n  /**\n  * Add the correct font weight in Chrome, Edge, and Safari.\n  */\n  b,\n  strong {\n    font-weight: bolder;\n  }\n  /**\n  * 1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  * 2. Correct the odd \\`em\\` font sizing in all browsers.\n  */\n  code,\n  kbd,\n  samp,\n  pre {\n    font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier,\n      monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n  /**\n  * Add the correct font size in all browsers.\n  */\n  small {\n    font-size: 80%;\n  }\n  /**\n  * Prevent \\`sub\\` and \\`sup\\` elements from affecting the line height in\n  * all browsers.\n  */\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  sup {\n    top: -0.5em;\n  }\n  /* Forms\n    ========================================================================== */\n  /**\n  * 1. Change the font styles in all browsers.\n  * 2. Remove the margin in Firefox and Safari.\n  */\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 1 */\n    line-height: 1.15; /* 1 */\n    margin: 0; /* 2 */\n  }\n  /**\n  * Remove the inheritance of text transform in Edge and Firefox.\n  * 1. Remove the inheritance of text transform in Firefox.\n  */\n  button,\n  select {\n    /* 1 */\n    text-transform: none;\n  }\n  /**\n  * Correct the inability to style clickable types in iOS and Safari.\n  */\n  button,\n  [type='button'],\n  [type='reset'],\n  [type='submit'] {\n    -webkit-appearance: button;\n  }\n  /**\n  * Remove the inner border and padding in Firefox.\n  */\n  button::-moz-focus-inner,\n  [type='button']::-moz-focus-inner,\n  [type='reset']::-moz-focus-inner,\n  [type='submit']::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n  /**\n  * Restore the focus styles unset by the previous rule.\n  */\n  button:-moz-focusring,\n  [type='button']:-moz-focusring,\n  [type='reset']:-moz-focusring,\n  [type='submit']:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n  /**\n  * Correct the padding in Firefox.\n  */\n  fieldset {\n    padding: 0.35em 0.75em 0.625em;\n  }\n  /**\n  * Remove the padding so developers are not caught out when they zero out\n  *    \\`fieldset\\` elements in all browsers.\n  */\n  legend {\n    padding: 0;\n  }\n  /**\n  * Add the correct vertical alignment in Chrome and Firefox.\n  */\n  progress {\n    vertical-align: baseline;\n  }\n  /**\n  * Correct the cursor style of increment and decrement buttons in Chrome.\n  */\n  [type='number']::-webkit-inner-spin-button,\n  [type='number']::-webkit-outer-spin-button {\n    height: auto;\n  }\n  /**\n  * 1. Correct the odd appearance in Chrome and Safari.\n  * 2. Correct the outline style in Safari.\n  */\n  [type='search'] {\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n  }\n  /**\n  * Remove the inner padding in Chrome and Safari on macOS.\n  */\n  [type='search']::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  /**\n  * 1. Correct the inability to style clickable types in iOS and Safari.\n  * 2. Change font properties to \\`inherit\\` in Safari.\n  */\n  ::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n  }\n  /* Interactive\n    ========================================================================== */\n  /*\n  * Add the correct display in Edge and Firefox.\n  */\n  details {\n    display: block;\n  }\n  /*\n  * Add the correct display in all browsers.\n  */\n  summary {\n    display: list-item;\n  }\n`\n","import { css } from 'react-emotion'\n\nexport default css`\n  @font-face {\n    font-family: 'GothamPro';\n    src: url(GothamPro.woff);\n  }\n  html,\n  body {\n    font-family: 'GothamPro', 'Lato', 'Arial', sans-serif;\n    margin: 0;\n  }\n  #root {\n    height: 100%;\n  }\n  input[type=range] {\n    -webkit-appearance: none;\n    margin: 18px 0;\n    width: 100%;\n  }\n  input[type=range]:focus {\n    outline: none;\n  }\n  input[type=range]::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 3px;\n    cursor: pointer;\n    animate: 0.2s;\n    box-shadow: none;\n    background: #736C82;\n    border-radius: 1.3px;\n    border: 0;\n  }\n  input[type=range]::-webkit-slider-thumb {\n    box-shadow: none;\n    border: 0;\n    height: 16px;\n    width: 16px;\n    border-radius: 50%;\n    background: #00BCF9;\n    cursor: pointer;\n    -webkit-appearance: none;\n    margin-top: -6px;\n  }\n  input[type=range]:focus::-webkit-slider-runnable-track {\n    background: #736C82;\n  }\n  input[type=range]::-moz-range-track {\n    width: 100%;\n    height: 8.4px;\n    cursor: pointer;\n    animate: 0.2s;\n    box-shadow: none;\n    background: #736C82;\n    border-radius: 1.3px;\n    border: 0;\n  }\n  input[type=range]::-moz-range-thumb {\n    box-shadow: none;\n    border: 0;\n    height: 36px;\n    width: 16px;\n    border-radius: 3px;\n    background: #00BCF9;\n    cursor: pointer;\n  }\n`\n","import { injectGlobal } from 'react-emotion'\nimport normalize from './normalize'\nimport globals from './globals'\n\n// tslint:disable-next-line:no-unused-expression\ninjectGlobal`\n  ${normalize}\n  ${globals}\n`\n","import * as React from 'react'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { Store } from 'redux'\nimport { History } from 'history'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport { Routes } from './routes'\nimport { IApplicationState } from './store'\nimport { theme } from './styles/theme'\nimport './styles'\n\n\ninterface IOwnProps {\n  store: Store<IApplicationState>\n  history: History\n}\n\ntype AllProps = IOwnProps\n\nexport class App extends React.Component<AllProps> {\n  public render() {\n    const { store, history } = this.props\n\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <ThemeProvider theme={theme}>\n            <Routes />\n          </ThemeProvider>\n        </ConnectedRouter>\n      </Provider>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { IWallet } from \"../store/wallets/types\"\n\nimport { getInfo as ethInfo } from './eth/eth'\nimport { getInfo as eosInfo } from './eos'\n\nexport const getBcInfo = async (wallet: IWallet) => {\n  if (wallet.blockchain === 'eth') {\n    return ethInfo(wallet)\n  }\n\n  if (wallet.blockchain === 'eos') {\n    return eosInfo(wallet)\n      .then(result => ({ txs: result.actions }))\n  }\n\n  return null\n}","import { all, call, fork, put, takeEvery } from 'redux-saga/effects'\nimport { WalletsActionTypes } from './types'\nimport { fetchError, fetchSuccess, addWallet, fetchRequest } from './actions'\nimport { getBcInfo } from '../../helpers/common'\n\nfunction* handleSetWallet(action: ReturnType<typeof addWallet>) {\n  try {\n    let wallet = action.payload\n    // start fetch request for update wallet data\n    yield put(fetchRequest())\n    // fetch wallets txs history\n    const res = yield call(getBcInfo, wallet)\n\n    // added txs history\n    wallet = { ...wallet, ...res }\n\n    if (res.error) {\n      yield put(fetchError(res.error))\n    } else {\n      yield put(fetchSuccess(wallet))\n    }\n  } catch (err) {\n    if (err instanceof Error) {\n      yield put(fetchError(err.stack!))\n    } else {\n      yield put(fetchError('An unknown error occured.'))\n    }\n  }\n}\n\nfunction* watchFetchRequest() {\n  yield takeEvery(WalletsActionTypes.ADD_WALLET, handleSetWallet)\n}\n\nfunction* walletsSaga() {\n  yield all([fork(watchFetchRequest)])\n}\n\nexport default walletsSaga\n","export enum AuthActionTypes {\n  AUTH_SUCCESS = '@@auth/AUTH_SUCCESS',\n  AUTH_ERROR = '@@auth/AUTH_ERROR',\n}\n\nexport interface IAuthState {\n  readonly isAuth: boolean\n}\n","import { Reducer } from 'redux'\nimport { ActionType } from 'typesafe-actions'\nimport * as wallets from './actions'\nimport {\n  IWalletsState,\n  WalletsActionTypes,\n  IWalletEth,\n  IWalletEos,\n  IEthTxFormValues,\n} from './types'\nimport { IHostCommandU } from '../../helpers/webrtc/hostproto'\n\nconst initialState: IWalletsState = {\n  item: {} as IWalletEth | IWalletEos,\n  items: [],\n  sendingTxData: {\n    command: {} as IHostCommandU,\n    hash: '',\n    formData: {} as IEthTxFormValues,\n    error: '',\n  },\n  errors: undefined,\n  loading: false,\n}\n\nexport type WalletsAction = ActionType<typeof wallets>\n\nconst reducer: Reducer<IWalletsState, WalletsAction> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case WalletsActionTypes.FETCH_REQUEST: {\n      return { ...state, loading: true }\n    }\n    case WalletsActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, item: action.payload }\n    }\n    case WalletsActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload }\n    }\n    case WalletsActionTypes.ADD_WALLET: {\n      return { ...state, item: action.payload }\n    }\n    case WalletsActionTypes.SET_SENDING_TX_DATA: {\n      return {\n        ...state,\n        sendingTxData: { ...state.sendingTxData, ...action.payload },\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as walletsReducer }\n","import { Reducer } from 'redux'\nimport { IAuthState, AuthActionTypes } from './types'\nimport { ActionType } from 'typesafe-actions'\nimport * as auth from './actions'\n\nconst initialState: IAuthState = {\n  isAuth: false,\n}\n\nexport type AuthAction = ActionType<typeof auth>\n\nconst reducer: Reducer<IAuthState, AuthAction> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case AuthActionTypes.AUTH_SUCCESS: {\n      return { ...state, isAuth: true }\n    }\n    case AuthActionTypes.AUTH_ERROR: {\n      return { ...state, isAuth: false }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as authReducer }\n","export default function parseMessage(data: string) {\n  const result = data\n    .replace(/^([^|]*)\\|(.*\\D.*)\\|(.*)$/, '$1|\"$2\"|$3')\n    .replace(/^([^|]+)\\|([^|]*)\\|(.*)$/, '{\"method\":\"$1\",\"id\":$2,\"params\":$3}')\n    .replace(/^\\|([^|]*)\\|(.*)$/, '{\"id\":$1,\"result\":$2}')\n  return parseJsonString(result)\n}\n\nconst parseJsonString = (str: string) => {\n  try {\n    return JSON.parse(str)\n  } catch (err) {\n    return Error(err)\n  }\n}\n","import { RTCHelper } from '../../helpers/webrtc/webrtc'\nimport { IHostCommandU } from '../../helpers/webrtc/hostproto'\n\nexport enum WebrtcActionTypes {\n  CONNECTION_OPEN = '@@Webrtc/CONNECTION_OPEN',\n  CONNECTION_CLOSE = '@@Webrtc/CONNECTION_CLOSE',\n  SET_CONNECTION_SID = '@@Webrtc/SET_CONNECTION_SID',\n  SET_STATUS = '@@Webrtc/SET_STATUS',\n  SEND_COMMAND = '@@Webrtc/SEND_COMMAND',\n}\n\nexport interface IWebrtcState {\n  readonly rtc: RTCHelper\n  readonly connected: boolean\n  readonly status: string\n  pushedMessages: IHostCommandU[]\n}\n","import { IWalletBase } from '../store/wallets/types'\nimport { sendTx as sendEth } from './eth/eth'\nimport { sendTx as sendEos } from './eos'\n\nexport const sendTx = (tx: string, wallet: IWalletBase) => {\n  switch (wallet.blockchain) {\n    case 'eth':\n      return sendEth(wallet, tx)\n    case 'eos':\n      return sendEos(wallet, tx)\n\n    default:\n      return null\n  }\n}\n","import { action } from 'typesafe-actions'\nimport { AuthActionTypes } from './types'\n\nexport const authSuccess = () => action(AuthActionTypes.AUTH_SUCCESS)\nexport const authError = () => action(AuthActionTypes.AUTH_ERROR)\n","import { action } from 'typesafe-actions'\nimport { WebrtcActionTypes } from './types'\nimport { IHostCommandU } from '../../helpers/webrtc/hostproto'\n\nexport const connectionReady = () =>\n  action(WebrtcActionTypes.CONNECTION_OPEN)\n\nexport const connectionClosing = () =>\n  action(WebrtcActionTypes.CONNECTION_CLOSE)\n\nexport const setConnectionSid = () =>\n  action(WebrtcActionTypes.SET_CONNECTION_SID)\n\nexport const setStatus = (status: string) =>\n  action(WebrtcActionTypes.SET_STATUS, status)\n\nexport const sendCommand = (command: IHostCommandU) =>\n  action(WebrtcActionTypes.SEND_COMMAND, command)\n","import { all, fork, put, takeEvery, select } from 'redux-saga/effects'\nimport { login, sendTransaction, remoteSignTransferTx, remoteSignContractTx } from './actions'\nimport { TransportActionTypes } from './types'\nimport { IApplicationState } from '..'\nimport { push } from 'connected-react-router'\nimport { getEthTransferTx, getEosTransferTx, getEthContractParams, getEosContractParams } from '../../helpers/jsonrps'\nimport parseMessage from '../../utils/parseMessage'\nimport { sendTx } from '../../helpers/sendtx'\nimport { setSendingTxData, fetchSuccess } from '../wallets/actions'\nimport { authSuccess } from '../auth/actions'\nimport { sendCommand } from '../webrtc/actions'\nimport { IWallet } from '../wallets/types'\nimport { PayloadAction } from 'typesafe-actions/dist/types'\n\nfunction* handleLogin(action: ReturnType<typeof login>) {\n  try {\n    // TODO: check correct message id\n    const { result: wallets } = parseMessage(action.payload)\n    const wallet = wallets[0]\n\n    // call addWallet and authSuccess after success read and parse qrcode from login page\n    yield put(authSuccess())\n    yield put(fetchSuccess(wallet))\n    yield put(push(`/wallets/${wallet.address}`))\n  } catch (err) {\n    console.log('handleLogin error', err)\n  }\n}\n\nfunction createContractHandler<TFormData, TWallet extends IWallet>(getContractParams: (form: TFormData, wallet: TWallet) => Promise<unknown>)\n{\n  return function* handleCreateTransfer(action: PayloadAction<TransportActionTypes, TFormData>)\n  {\n    const wallet = yield select((state: IApplicationState) => state.wallets.item)\n    delete wallet.txs\n\n    try\n    {\n      const params = yield getContractParams(action.payload, wallet)\n      yield handleRemoteSignContract(params)\n    }\n    catch(e)\n    {\n      console.error(e)\n    }\n  }\n}\n\nfunction createTransferHandler<TFormData, TWallet extends IWallet>(getTransferTx: (form: TFormData, wallet: TWallet) => Promise<unknown>)\n{\n  return function* handleCreateTransfer(action: PayloadAction<TransportActionTypes, TFormData>)\n  {\n    const wallet = yield select((state: IApplicationState) => state.wallets.item)\n    delete wallet.txs\n\n    try\n    {\n      const tx = yield getTransferTx(action.payload, wallet)\n      yield put(remoteSignTransferTx(tx))\n    }\n    catch(e)\n    {\n      console.error(e)\n    }\n  }\n}\n\nconst handleCreateEthTransfer = createTransferHandler(getEthTransferTx)\nconst handleCreateEosTransfer = createTransferHandler(getEosTransferTx)\nconst handleCreateEthContract = createContractHandler(getEthContractParams)\nconst handleCreateEosContract = createContractHandler(getEosContractParams)\n\nfunction* handleRemoteSignTransfer(action: ReturnType<typeof remoteSignTransferTx>)\n{\n  const wallet = yield select((state: IApplicationState) => state.wallets.item)\n  \n  try\n  {\n    let cmd = { id: 3, method: 'signTransferTx', params: { tx: action.payload, wallet } }\n\n    yield put(sendCommand(cmd))\n  }\n  catch (e)\n  {\n    console.error(e)\n  }\n}\n\nfunction* handleRemoteSignContract(action: ReturnType<typeof remoteSignContractTx>)\n{\n  try\n  {\n    let cmd = { id: 4, method: 'signContractCall', params: action}\n    yield put(sendCommand(cmd))\n  }\n  catch (e)\n  {\n    console.error(e)\n  }\n}\n\n\nfunction* handleSendTx(action: ReturnType<typeof sendTransaction>) {\n  const wallet = yield select((state: IApplicationState) => state.wallets.item)\n  try {\n    const { result } = parseMessage(action.payload)\n\n    const hash = yield sendTx(result, wallet)\n\n    yield all([put(setSendingTxData({ hash })), put(push(`/tx/${hash}`))])\n  } catch (err) {\n    yield all([\n      put(setSendingTxData({ error: err.message })),\n      put(push(`/tx/error`)),\n    ])\n    console.error(err)\n  }\n}\n\nfunction* watchSendTx() {\n  yield takeEvery(TransportActionTypes.SEND_TX, handleSendTx)\n}\n\nfunction* watchCreateTx() {\n  yield takeEvery(TransportActionTypes.CREATE_ETH_TRANSFER, handleCreateEthTransfer)\n  yield takeEvery(TransportActionTypes.CREATE_EOS_TRANSFER, handleCreateEosTransfer)\n  yield takeEvery(TransportActionTypes.CREATE_ETH_CONTRACT, handleCreateEthContract)\n  yield takeEvery(TransportActionTypes.CREATE_EOS_CONTRACT, handleCreateEosContract)\n}\n\nfunction* watchRemoteSignTransfer() {\n  yield takeEvery(TransportActionTypes.REMOTE_SIGN_TRANSFER, handleRemoteSignTransfer)\n  yield takeEvery(TransportActionTypes.REMOTE_SIGN_CONTRACT, handleRemoteSignContract)\n}\n\nfunction* watchLogin() {\n  yield takeEvery(TransportActionTypes.LOGIN, handleLogin)\n}\n\nfunction* transportSaga() {\n  yield all([fork(watchLogin), fork(watchCreateTx), fork(watchSendTx), fork(watchRemoteSignTransfer)])\n}\n\nexport default transportSaga\n","export const handshakeServerUrl = `wss://duxi.io/shake` // `ws://localhost:3077`\n\nexport enum RTCCommands {\n  webrtcLogin = 1,\n  getWalletList = 2,\n  signTransferTx = 3,\n  signContractCall = 4,\n}\n","import { ActionType } from 'typesafe-actions'\nimport { Reducer } from 'redux'\nimport * as transports from './actions'\nimport { ITransportState, TransportActionTypes } from './types'\n\nconst initialState: ITransportState = {\n  qrcodeData: '',\n  lastWebrtcMsg: null,\n}\nexport type TransportsAction = ActionType<typeof transports>\n\nconst reducer: Reducer<ITransportState, TransportsAction> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case TransportActionTypes.SET_RTC_SID: {\n      return { ...state, qrcodeData: action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as transportReducer }\n","import { call, take, put, cancelled, select } from 'redux-saga/effects'\nimport { eventChannel } from 'redux-saga'\n\nimport { handshakeServerUrl } from '../../constants'\nimport { connectionReady, sendCommand } from './actions'\nimport { getWalletListCommand } from '../../helpers/jsonrps'\nimport { setRtcSid } from '../transport/actions'\nimport { IApplicationState } from '..'\nimport { RTCHelper } from '../../helpers/webrtc/webrtc'\n\nconst makeOfferRequest = (offer: string) =>\n  JSON.stringify({ jsonrpc: '2.0', id: 1, method: 'offer', params: { offer } })\n\nconst makeIceRequest = (ice: RTCIceCandidate) =>\n  JSON.stringify({ jsonrpc: '2.0', id: 2, method: 'ice', params: { ice } })\n\nconst onOpenChannel = (ws: WebSocket) =>\n  eventChannel(emit => {\n    ws.addEventListener('open', emit)\n    ws.addEventListener('error', err => emit(err))\n    return () => ws.removeEventListener('open', emit)\n  })\n\nconst onMessageChannel = (ws: WebSocket) =>\n  eventChannel(emit => {\n    ws.addEventListener('message', emit)\n    return () => ws.removeEventListener('message', emit)\n  })\n\nfunction* answerSaga(ws: WebSocket, rtc: RTCHelper, answer: string) {\n  const sendIce = (ice: RTCIceCandidate) => ws.send(makeIceRequest(ice)) // TODO: Add typings\n  rtc.candidates.map(sendIce)\n  rtc.on('ice', sendIce)\n  yield call(rtc.pushAnswer, { type: 'answer' as RTCSdpType, sdp: answer })\n  yield call(rtc.waitConnection)\n  yield put(connectionReady())\n  return ws.close()\n}\n\nexport default function* connectSaga() {\n  const rtc = yield select((state: IApplicationState) => state.webrtc.rtc)\n  const offerPromise = yield call(rtc.createOffer)\n  const ws = new WebSocket(handshakeServerUrl)\n  const openChan = onOpenChannel(ws)\n  const messageChan = onMessageChannel(ws)\n  yield take(openChan)\n\n  ws.send(makeOfferRequest(offerPromise.sdp))\n\n  while (true)\n    try {\n      const { data } = yield take(messageChan)\n      const { id, method, result, params } = JSON.parse(data.toString())\n\n      if (id === 1) yield put(setRtcSid(webrtcLogin(result.sid)))\n      if (method === 'ice') yield call(rtc.pushIceCandidate, params.ice)\n      if (method === 'answer')\n        return yield call(answerSaga, ws, rtc, params.answer)\n    } catch (err) {\n      console.log(err)\n    } finally {\n      if (yield cancelled()) {\n        openChan.close()\n        messageChan.close()\n        console.log('ws connection closed')\n        yield put(sendCommand(getWalletListCommand()))\n      }\n    }\n}\n\nexport const webrtcLogin = (sid: string) => {\n  const params = { sid, url: handshakeServerUrl }\n\n  return `webrtcLogin|1|${JSON.stringify(params)}`\n}\n","import { fork, all, take, select, call, put, takeEvery, cancel } from 'redux-saga/effects'\nimport { eventChannel, delay } from 'redux-saga'\n\nimport connectTask from './connectSaga'\nimport parseMessage from '../../utils/parseMessage'\nimport { RTCCommands } from '../../constants'\nimport { login, sendTransaction } from '../transport/actions'\nimport { WebrtcActionTypes } from './types'\nimport { IApplicationState } from '..'\nimport { setStatus, connectionClosing, sendCommand } from './actions'\nimport { call as prepareCall } from '../../helpers/webrtc/jsonrpc'\nimport { push } from 'connected-react-router';\nimport { setSendingTxData } from '../wallets/actions';\nimport { IHostCommand } from '../../helpers/webrtc/hostproto'\nimport { RTCHelper } from '../../helpers/webrtc/webrtc';\n\nfunction createDataChannel(dataChannel: RTCDataChannel) {\n  return eventChannel(emit => {\n    dataChannel.onmessage = (message: MessageEvent) => emit(message.data)\n\n    const unsubscribe = () => {\n      dataChannel.close()\n    }\n\n    return unsubscribe\n  })\n}\n\nfunction* watchDataChannel() {\n  const rtc = yield select((state: IApplicationState) => state.webrtc.rtc)\n  const channelMessage = yield call(createDataChannel, rtc.dataChannel)\n\n  while (true) {\n    const message = yield take(channelMessage)\n    const { id } = parseMessage(message)\n\n    switch (id) {\n      case RTCCommands.getWalletList:\n        yield put(login(message))\n        break\n      case RTCCommands.signTransferTx:\n        yield put(setStatus('Sending'))\n        yield put(sendTransaction(message))\n        break\n      case RTCCommands.signContractCall:\n        yield put(setStatus('Sending'))\n        yield put(sendTransaction(message))\n        break\n      default:\n        break\n    }\n  }\n}\n\nfunction* handleOpeningConnection() {\n  const [rtc, msg] = (yield select((state: IApplicationState) => [state.webrtc.rtc, state.transport.lastWebrtcMsg])) as [RTCHelper, IHostCommand<unknown[], unknown>]\n  if (msg)\n    yield put(sendCommand(msg))\n\n  while (true) {\n    yield delay(3000)\n    if (rtc.dataChannel!.readyState === 'closing') yield put(connectionClosing())\n  }\n}\n\nfunction* handleSendCommand(action: ReturnType<typeof sendCommand>) {\n  const { webrtc: {rtc, connected}, wallets:{item: wallet} } = yield select((state: IApplicationState) => state)\n  try\n  {  \n    let msg = prepareCall(action.payload.method, action.payload.id, action.payload.params, true)\n    \n    yield put(setSendingTxData({ command: action.payload, error: '', hash: '' }))\n    yield put(setStatus('Verification'))\n\n    if(connected) {\n      yield call((msg: string) => rtc.dataChannel!.send(msg), msg)\n      yield put(push('/status'))\n    } else {\n      yield put(push(`/wallets/${wallet.address}/tx/sign`))\n    }\n    \n  } catch (error)\n  {\n    console.error(error)  \n  }\n}\n\nfunction* watchActions() {\n  yield takeEvery(WebrtcActionTypes.CONNECTION_OPEN, handleOpeningConnection)\n  yield takeEvery(WebrtcActionTypes.SEND_COMMAND, handleSendCommand)\n}\n\nfunction* watchConnection() {\n  const bgConectionTask = yield fork(connectTask)\n\n  // dispose connection task\n  yield takeEvery(WebrtcActionTypes.CONNECTION_OPEN, function*() {\n    yield cancel(bgConectionTask)\n  })\n}\n\nfunction* webrtcSaga() {\n  yield all([fork(watchConnection), fork(watchDataChannel), fork(watchActions)])\n}\n\nexport default webrtcSaga\n","import { EventEmitter } from 'events'\n\nexport class RTCHelper extends EventEmitter {\n  rpc = new RTCPeerConnection()\n  candidates: RTCIceCandidate[] = []\n  dataChannel?: RTCDataChannel\n  offer?: RTCSessionDescriptionInit\n  connected = false\n  tag = ''\n\n  constructor(public name?: string) {\n    super()\n\n    if (name) this.tag = `[${name}] `\n\n    this.rpc.onicecandidate = this.onIceCandidate\n    this.rpc.ondatachannel = this.onDataChannel\n  }\n  onIceCandidate = (ev: RTCPeerConnectionIceEvent) => {\n    console.log(`${this.tag}onIceCandidate: ${JSON.stringify(ev.candidate)}`)\n    if (ev.candidate) this.candidates.push(ev.candidate)\n\n    this.emit('ice', ev.candidate)\n  }\n  onDataChannel = (ev: RTCDataChannelEvent) => {\n    console.log(`${this.tag}onDataChannel: ${JSON.stringify(ev.channel)}`)\n    this.setChannel(ev.channel)\n  }\n  onDataChannelOpen = (ev: Event) => {\n    console.log(`${this.tag}onDataChannelOpen: ${ev.type}`)\n    this.connected = true\n    this.emit('connected')\n  }\n  onMessage = (ev: MessageEvent) => {\n    console.log(`${this.tag}${ev.type}: ${ev.data}`)\n  }\n  setChannel = (c: RTCDataChannel) => {\n    this.dataChannel = c\n    this.dataChannel.onopen = this.onDataChannelOpen\n    this.dataChannel.onmessage = this.onMessage\n  }\n  waitConnection = async (): Promise<void> => {\n    if (this.connected) return Promise.resolve()\n\n    return new Promise<void>((res, rej) => this.on('connected', () => res()))\n  }\n\n  createOffer = async (): Promise<RTCSessionDescriptionInit> => {\n    console.log(`${this.tag}createOffer`)\n    this.setChannel(this.rpc.createDataChannel('chat'))\n    this.offer = await this.rpc.createOffer()\n    await this.rpc.setLocalDescription(this.offer)\n    return this.offer\n  }\n\n  pushOffer = async (\n    offer: RTCSessionDescriptionInit\n  ): Promise<RTCSessionDescriptionInit> => {\n    console.log(`${this.tag}pushOffer: ${JSON.stringify(offer)}`)\n    if (this.offer) throw new Error(\"can't push offer to already inited rtc connection!\")\n\n    await this.rpc.setRemoteDescription(offer)\n    let answer = await this.rpc.createAnswer()\n    await this.rpc.setLocalDescription(answer)\n    return answer\n  }\n\n  pushAnswer = async (answer: RTCSessionDescriptionInit) => {\n    console.log(`${this.tag}pushAnswer: ${JSON.stringify(answer)}`)\n    await this.rpc.setRemoteDescription(answer)\n  }\n  pushIceCandidate = async (\n    candidate: RTCIceCandidateInit | RTCIceCandidate\n  ) => {\n    await this.rpc.addIceCandidate(candidate)\n  }\n}\n","import { RTCHelper } from './webrtc'\nimport { JsonRpc } from './jsonrpc'\nimport { timedPromise } from './promise'\n\nlet i = 0\n\nexport function init() {\n  let rtc = new RTCHelper('webrtc')\n  let ii = i++\n\n  let jrpc = new JsonRpc(\n    msg => (console.log(`JSONRPC ${ii}: ${msg}`), rtc.dataChannel!.send(msg)),\n    (json, cb) => {\n      console.log(`ignored remote signer request:`, json)\n      cb(undefined, null)\n    }\n  )\n\n  rtc.onMessage = ev => (console.log(`webrtc jrpc incoming:`, ev), jrpc.onMessage(ev.data.toString()))\n  let connected = false\n\n  return {\n    rtc,\n    jrpc,\n    connected,\n  }\n}\nexport async function checkConnection(): Promise<boolean> {\n  if (!singleton.connected) return false\n\n  try {\n    await timedPromise(singleton.jrpc.ping(), 5000)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nlet singleton = init()\nexport let getSingleton = () => singleton\n\nexport function reset() {\n  singleton = init()\n}\n","import { ActionType } from 'typesafe-actions'\nimport * as webrtc from './actions'\nimport { Reducer } from 'redux'\nimport { IWebrtcState, WebrtcActionTypes } from './types'\nimport { getSingleton } from '../../helpers/webrtc/webrtcsingleton'\n\nconst initialState: IWebrtcState = {\n  rtc: getSingleton().rtc,\n  connected: getSingleton().connected,\n  status: '',\n  pushedMessages: [],\n}\n\nconst reducer: Reducer<IWebrtcState, ActionType<typeof webrtc>> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case WebrtcActionTypes.CONNECTION_OPEN: {\n      return { ...state, connected: true }\n    }\n    case WebrtcActionTypes.CONNECTION_CLOSE: {\n      return { ...state, connected: false }\n    }\n    case WebrtcActionTypes.SET_STATUS: {\n      return { ...state, status: action.payload }\n    }\n    case WebrtcActionTypes.SEND_COMMAND: {\n      return {\n        ...state,\n        pushedMessages: [...state.pushedMessages, action.payload],\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport { reducer as webrtcReducer }\n","import { combineReducers, Dispatch, Action, AnyAction } from 'redux'\nimport { all, fork } from 'redux-saga/effects'\nimport { connectRouter, RouterState } from 'connected-react-router'\n\nimport walletsSaga from './wallets/sagas'\nimport { walletsReducer } from './wallets/reducer'\nimport { IWalletsState } from './wallets/types'\n\nimport { authReducer } from './auth/reducer'\nimport { IAuthState } from './auth/types'\n\nimport transportSaga from './transport/sagas'\nimport { transportReducer } from './transport/reducer'\nimport { ITransportState } from './transport/types'\n\nimport webrtcSaga from './webrtc/sagas'\nimport { webrtcReducer } from './webrtc/reducer'\nimport { IWebrtcState } from './webrtc/types'\n\n// top-level state\nexport interface IApplicationState {\n  wallets: IWalletsState\n  auth: IAuthState\n  transport: ITransportState\n  webrtc: IWebrtcState\n  router: RouterState\n}\n\nexport interface IConnectedReduxProps<A extends Action = AnyAction> {\n  dispatch: Dispatch<A>\n}\n\nexport const rootReducer = (history: any) =>\n  combineReducers<IApplicationState>({\n    wallets: walletsReducer,\n    auth: authReducer,\n    transport: transportReducer,\n    webrtc: webrtcReducer,\n    router: connectRouter(history),\n  })\n\nexport function* rootSaga() {\n  yield all([fork(walletsSaga), fork(transportSaga), fork(webrtcSaga)])\n}\n","import { Store, createStore, applyMiddleware, AnyAction, DeepPartial } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { routerMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { History } from 'history'\n\nimport { IApplicationState, rootReducer, rootSaga } from './store'\n\nexport default function configureStore(\n  history: History\n): Store<IApplicationState> {\n  const composeEnhancers = composeWithDevTools({})\n  const sagaMiddleware = createSagaMiddleware()\n  const initialState = (JSON.parse(window.localStorage.getItem('state') || '{}') || {}) as DeepPartial<IApplicationState>\n\n  delete initialState.webrtc\n  delete initialState.transport\n\n  const store = createStore(\n    rootReducer(history),\n    initialState,\n    composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware))\n  )\n\n  sagaMiddleware.run(rootSaga)\n  return store\n}\n\nexport const subscriber = (store: Store<IApplicationState, AnyAction>) => () => {\n  window.localStorage.setItem('state', JSON.stringify(store.getState()))\n};","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { createBrowserHistory } from 'history'\n\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore, { subscriber } from './configureStore'\n\nlet basename\nif (location.pathname.includes('/cold-crypto-web'))\n  basename = '/cold-crypto-web'\nelse if (location.pathname.includes('/cold'))\n  basename = '/cold'\nelse\n  basename = '/'\n\nconsole.log(`using basename ${basename}`)\nconst history = createBrowserHistory({ basename })\n\nconst store = configureStore(history)\nstore.subscribe(subscriber(store))\n\nReactDOM.render(\n  <App store={store} history={history} />,\n  document.getElementById('root')\n)\n\n// unregister() or register()\nserviceWorker.unregister()\n"],"sourceRoot":""}